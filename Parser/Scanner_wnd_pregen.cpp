



#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

/* %not-for-header */
/* %if-c-only */
/* %if-not-reentrant */
/* %endif */
/* %endif */
/* %ok-for-header */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 6
#define YY_FLEX_SUBMINOR_VERSION 4
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

/* %if-c++-only */
    /* The c++ scanner is a mess. The FlexLexer.h header file relies on the
     * following macro. This is required in order to pass the c++-multiple-scanners
     * test in the regression suite. We get reports that it breaks inheritance.
     * We will address this in a future release of flex, or omit the C++ scanner
     * altogether.
     */
    #define yyFlexLexer yyFlexLexer
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */
/* %if-c-only */
/* %endif */

/* %if-tables-serialization */
/* %endif */
/* end standard C headers. */

/* %if-c-or-c++ */
/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS 1
#endif

#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#ifndef SIZE_MAX
#define SIZE_MAX               (~(size_t)0)
#endif

#endif /* ! C99 */

#endif /* ! FLEXINT_H */

/* %endif */

/* begin standard C++ headers. */
/* %if-c++-only */
#include <iostream>
#include <errno.h>
#include <cstdlib>
#include <cstdio>
#include <cstring>
/* end standard C++ headers. */
/* %endif */

/* TODO: this is always defined, so inline it */
#define yyconst const

#if defined(__GNUC__) && __GNUC__ >= 3
#define yynoreturn __attribute__((__noreturn__))
#else
#define yynoreturn
#endif

/* %not-for-header */
/* Returned upon end-of-file. */
#define YY_NULL 0
/* %ok-for-header */

/* %not-for-header */
/* Promotes a possibly negative, possibly signed char to an
 *   integer in range [0..255] for use as an array index.
 */
#define YY_SC_TO_UI(c) ((YY_CHAR) (c))
/* %ok-for-header */

/* %if-reentrant */
/* %endif */

/* %if-not-reentrant */

/* %endif */

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN (yy_start) = 1 + 2 *
/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START (((yy_start) - 1) / 2)
#define YYSTATE YY_START
/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin  )
#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k.
 * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
 * Ditto for the __ia64__ case accordingly.
 */
#define YY_BUF_SIZE 32768
#else
#define YY_BUF_SIZE 16384
#endif /* __ia64__ */
#endif

/* The state buf must be large enough to hold one state per character in the main buffer.
 */
#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef size_t yy_size_t;
#endif

/* %if-not-reentrant */
extern int yyleng;
/* %endif */

/* %if-c-only */
/* %if-not-reentrant */
/* %endif */
/* %endif */

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2
    
    /* Note: We specifically omit the test for yy_rule_can_match_eol because it requires
     *       access to the local variable yy_act. Since yyless() is a macro, it would break
     *       existing scanners that call yyless() from OUTSIDE yylex.
     *       One obvious solution it to make yy_act a global. I tried that, and saw
     *       a 5% performance hit in a non-yylineno scanner, because yy_act is
     *       normally declared as a variable-- so it is not worth it.
     */
    #define  YY_LESS_LINENO(n) \
            do { \
                int yyl;\
                for ( yyl = n; yyl < yyleng; ++yyl )\
                    if ( yytext[yyl] == '\n' )\
                        --yylineno;\
            }while(0)
    #define YY_LINENO_REWIND_TO(dst) \
            do {\
                const char *p;\
                for ( p = yy_cp-1; p >= (dst); --p)\
                    if ( *p == '\n' )\
                        --yylineno;\
            }while(0)
    
/* Return all but the first "n" matched characters back to the input stream. */
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = (yy_hold_char); \
		YY_RESTORE_YY_MORE_OFFSET \
		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )
#define unput(c) yyunput( c, (yytext_ptr)  )

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{
/* %if-c-only */
/* %endif */

/* %if-c++-only */
	std::streambuf* yy_input_file;
/* %endif */

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	int yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */

	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* %if-c-only Standard (non-C++) definition */
/* %not-for-header */
/* %if-not-reentrant */
/* %endif */
/* %ok-for-header */

/* %endif */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */
#define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
                          : NULL)
/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */
#define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]

/* %if-c-only Standard (non-C++) definition */
/* %if-not-reentrant */
/* %not-for-header */
/* %ok-for-header */

/* %endif */
/* %endif */

void *yyalloc ( yy_size_t  );
void *yyrealloc ( void *, yy_size_t  );
void yyfree ( void *  );

#define yy_new_buffer yy_create_buffer
#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){ \
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
	}
#define yy_set_bol(at_bol) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){\
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	}
#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* %% [1.0] yytext/yyin/yyout/yy_state_type/yylineno etc. def's & init go here */
/* Begin user sect3 */
#define YY_SKIP_YYWRAP

#define FLEX_DEBUG
typedef flex_uint8_t YY_CHAR;

#define yytext_ptr yytext
#define YY_INTERACTIVE

#include "Parser/FlexLexer.h"

int yyFlexLexer::yywrap() { return 1; }

/* %% [1.5] DFA */

/* %if-c-only Standard (non-C++) definition */
/* %endif */

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	(yytext_ptr) = yy_bp; \
/* %% [2.0] code to fiddle yytext and yyleng for yymore() goes here \ */\
	(yytext_ptr) -= (yy_more_len); \
	yyleng = (int) (yy_cp - (yytext_ptr)); \
	(yy_hold_char) = *yy_cp; \
	*yy_cp = '\0'; \
/* %% [3.0] code to copy yytext_ptr to yytext[] goes here, if %array \ */\
	(yy_c_buf_p) = yy_cp;
/* %% [4.0] data tables for the DFA and the user's section 1 definitions go here */
#define YY_NUM_RULES 167
#define YY_END_OF_BUFFER 168
/* This struct is not used in this scanner,
   but its presence is necessary. */
struct yy_trans_info
	{
	flex_int32_t yy_verify;
	flex_int32_t yy_nxt;
	};
static const flex_int16_t yy_acclist[2857] =
    {   0,
      168,  166,  167,  164,  166,  167,  164,  167,  166,  167,
      166,  167,  166,  167,  166,  167,  143,  166,  167,  143,
      166,  167,  143,  152,  166,  167,  150,  166,  167,  166,
      167,  144,  166,  167,  139,  166,  167,  137,  166,  167,
      140,  166,  167,  146,  147,  166,  167,  146,  147,  166,
      167,  146,  147,  166,  167,  146,  147,  166,  167,  146,
      147,  166,  167,  146,  147,  166,  167,  146,  147,  166,
      167,  146,  147,  166,  167,  146,  147,  166,  167,  146,
      147,  166,  167,  146,  147,  166,  167,  146,  147,  166,
      167,  146,  147,  166,  167,  146,  147,  166,  167,  146,

      147,  166,  167,  146,  147,  166,  167,  146,  147,  166,
      167,  146,  147,  166,  167,  146,  147,  166,  167,  146,
      147,  166,  167,  146,  147,  166,  167,  146,  147,  166,
      167,  166,  167,  164,  166,  167,  164,  167,  166,  167,
      164,  166,  167,  166,  167,  166,  167,  166,  167,  143,
      166,  167,  143,  166,  167,  143,  152,  166,  167,  150,
      166,  167,  166,  167,  144,  166,  167,  139,  166,  167,
      137,  166,  167,  140,  166,  167,  146,  147,  166,  167,
      146,  147,  166,  167,  146,  147,  166,  167,  146,  147,
      166,  167,  146,  147,  166,  167,  146,  147,  166,  167,

      146,  147,  166,  167,  146,  147,  166,  167,  146,  147,
      166,  167,  146,  147,  166,  167,  146,  147,  166,  167,
      146,  147,  166,  167,  146,  147,  166,  167,  146,  147,
      166,  167,  146,  147,  166,  167,  146,  147,  166,  167,
      146,  147,  166,  167,  146,  147,  166,  167,  146,  147,
      166,  167,  146,  147,  166,  167,  146,  147,  166,  167,
      146,  147,  166,  167,  164,  166,  167,  143,  166,  167,
      146,  147,  166,  167,  164,  163,  162,  161,  160,  165,
      152,  150,  152,  151,  149,  141,  138,  142,  146,  147,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,

      147,   10,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,   16,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,   64,  146,  147,  146,  147,   66,  146,
      147,   71,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,  146,  147,   84,  146,
      147,   86,  146,  147,  146,  147,   90,  146,  147,  146,

      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  123,
      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
        9,   10,  146,  147,  157,  164,  164,  157,  163,  162,
      157,  161,  160,  157,  165,  152,  150,  152,  151,  149,
      141,  138,  142,  146,  147,  147,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,   10,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,   16,  146,  147,

      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,  146,  147,   64,  146,
      147,  146,  147,   66,  146,  147,   71,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,   84,  146,  147,   86,  146,  147,  146,
      147,   90,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,

      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,  123,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,   66,  146,  147,  164,  146,
      147,  162,  160,  165,  165,  165,  155,  151,  153,  149,
      146,  147,    4,  146,  147,    2,  146,  147,  146,  147,
        5,  146,  147,    6,  146,  147,  146,  147,  146,  147,
       11,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,

      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,   49,
      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,   55,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,   68,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,   78,  146,  147,  146,
      147,   80,  146,  147,   81,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,

      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  109,
      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
      115,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  162,  157,  160,  157,  165,
      165,  165,  165,  157,  165,  165,  155,  151,  153,  149,
      146,  147,    4,  146,  147,    2,  146,  147,  146,  147,

        5,  146,  147,    6,  146,  147,  146,  147,  146,  147,
       11,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,   49,
      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,   55,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,

      147,   68,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,   78,  146,  147,  146,
      147,   80,  146,  147,   81,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  109,
      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
      115,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,

      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,   68,  146,  147,  146,  147,
      165,  154,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,  146,  147,   17,  146,
      147,   18,  146,  147,   20,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,   26,
      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,   33,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,   40,  146,  147,  146,  147,  146,  147,
      146,  147,   44,  146,  147,   45,  146,  147,   46,  146,

      147,   48,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,  146,  147,   58,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,   70,  146,  147,
      146,  147,   73,  146,  147,  146,  147,   75,  146,  147,
      146,  147,  146,  147,  146,  147,   82,  146,  147,  146,
      147,  146,  147,   87,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,   99,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  104,  146,  147,  146,  147,

      146,  147,  146,  147,  146,  147,  146,  147,  112,  146,
      147,  146,  147,  114,  146,  147,  146,  147,  146,  147,
      118,  146,  147,  119,  146,  147,  120,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  128,
      146,  147,  146,  147,  146,  147,  146,  147,  132,  146,
      147,  133,  146,  147,  146,  147,  135,  146,  147,  136,
      146,  147,  157,  157,  165,  165,  165,  154,  146,  147,
      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,   17,  146,  147,   18,  146,  147,
       20,  146,  147,  146,  147,  146,  147,  146,  147,  146,

      147,  146,  147,  146,  147,   26,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,  146,  147,   33,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,   40,
      146,  147,  146,  147,  146,  147,  146,  147,   44,  146,
      147,   45,  146,  147,   46,  146,  147,   48,  146,  147,
      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,   58,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,   70,  146,  147,  146,  147,   73,  146,
      147,  146,  147,   75,  146,  147,  146,  147,  146,  147,

      146,  147,   82,  146,  147,  146,  147,  146,  147,   87,
      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
       99,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  104,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,  112,  146,  147,  146,  147,  114,
      146,  147,  146,  147,  146,  147,  118,  146,  147,  119,
      146,  147,  120,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  128,  146,  147,  146,  147,
      146,  147,  146,  147,  132,  146,  147,  133,  146,  147,

      146,  147,  135,  146,  147,  136,  146,  147,   69,   70,
      146,  147,  146,  147,  148,  148,  165,  165,  146,  147,
        3,  146,  147,  146,  147,    8,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
       21,  146,  147,   22,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
       52,  146,  147,   53,  146,  147,   54,  146,  147,  146,

      147,   57,  146,  147,  146,  147,  146,  147,   61,  146,
      147,   62,  146,  147,  146,  147,   65,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,   76,  146,  147,
      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,   91,  146,  147,   92,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,  110,  146,  147,  146,
      147,  146,  147,  116,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,  125,  146,  147,  146,  147,  146,

      147,  146,  147,  146,  147,  146,  147,  134,  146,  147,
      156,  148,  156,  157,  156,  148,  165,  165,  165,  146,
      147,    3,  146,  147,  146,  147,    8,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,   21,  146,  147,   22,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,   52,  146,  147,   53,  146,  147,   54,  146,  147,

      146,  147,   57,  146,  147,  146,  147,  146,  147,   61,
      146,  147,   62,  146,  147,  146,  147,   65,  146,  147,
      146,  147,  146,  147,  146,  147,  146,  147,   76,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,   91,  146,  147,   92,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  110,  146,  147,
      146,  147,  146,  147,  116,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  125,  146,  147,  146,  147,

      146,  147,  146,  147,  146,  147,  146,  147,  134,  146,
      147,  146,  147,  159,  148,  165,    1,  146,  147,  146,
      147,  146,  147,  146,  147,   14,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,   23,  146,  147,   24,
      146,  147,  146,  147,   27,  146,  147,  146,  147,   29,
      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,  146,  147,   39,  146,
      147,  146,  147,  146,  147,   43,  146,  147,   47,  146,
      147,   50,  146,  147,  146,  147,  146,  147,  146,  147,
      146,  147,   63,  146,  147,   67,  146,  147,  146,  147,

      146,  147,   74,  146,  147,  146,  147,  146,  147,  146,
      147,   85,  146,  147,  146,  147,   88,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,   98,
      146,  147,  146,  147,  101,  146,  147,  146,  147,  103,
      146,  147,  146,  147,  106,  146,  147,  107,  146,  147,
      108,  146,  147,  111,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,  126,  146,  147,  127,
      146,  147,  146,  147,  129,  146,  147,  146,  147,  156,
      159,  156,  165,  148,  165,    1,  146,  147,  146,  147,
      146,  147,  146,  147,   14,  146,  147,  146,  147,  146,

      147,  146,  147,  146,  147,   23,  146,  147,   24,  146,
      147,  146,  147,   27,  146,  147,  146,  147,   29,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,   39,  146,  147,
      146,  147,  146,  147,   43,  146,  147,   47,  146,  147,
       50,  146,  147,  146,  147,  146,  147,  146,  147,  146,
      147,   63,  146,  147,   67,  146,  147,  146,  147,  146,
      147,   74,  146,  147,  146,  147,  146,  147,  146,  147,
       85,  146,  147,  146,  147,   88,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,  146,  147,   98,  146,

      147,  146,  147,  101,  146,  147,  146,  147,  103,  146,
      147,  146,  147,  106,  146,  147,  107,  146,  147,  108,
      146,  147,  111,  146,  147,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  126,  146,  147,  127,  146,
      147,  146,  147,  129,  146,  147,  146,  147,  107,  146,
      147,  148,  159,  148,    7,  146,  147,  146,  147,   13,
      146,  147,   15,  146,  147,  146,  147,  146,  147,  145,
      146,  147,  146,  147,   28,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  146,  147,   36,  146,  147,
       37,  146,  147,   38,  146,  147,  146,  147,  146,  147,

       51,  146,  147,   56,  146,  147,  146,  147,  146,  147,
       68,  146,  147,  146,  147,  146,  147,  146,  147,   83,
      146,  147,  146,  147,   93,  146,  147,  146,  147,   95,
      146,  147,  146,  147,  146,  147,  146,  147,  102,  146,
      147,  146,  147,  146,  147,  146,  147,  146,  147,  122,
      146,  147,  146,  147,  146,  147,  131,  146,  147,  148,
      159,  156,  148,    7,  146,  147,  146,  147,   13,  146,
      147,   15,  146,  147,  146,  147,  146,  147,  145,  146,
      147,  146,  147,   28,  146,  147,  146,  147,  146,  147,
      146,  147,  146,  147,  146,  147,   36,  146,  147,   37,

      146,  147,   38,  146,  147,  146,  147,  146,  147,   51,
      146,  147,   56,  146,  147,  146,  147,  146,  147,   68,
      146,  147,  146,  147,  146,  147,  146,  147,   83,  146,
      147,  146,  147,   93,  146,  147,  146,  147,   95,  146,
      147,  146,  147,  146,  147,  146,  147,  102,  146,  147,
      146,  147,  146,  147,  146,  147,  146,  147,  122,  146,
      147,  146,  147,  146,  147,  131,  146,  147,  146,  147,
      147,  146,  147,  146,  147,  146,  147,   25,  146,  147,
      146,  147,   31,  146,  147,  146,  147,   34,  146,  147,
      146,  147,  146,  147,   42,  146,  147,  146,  147,   60,

      146,  147,   72,  146,  147,  146,  147,  146,  147,   89,
      146,  147,  146,  147,  146,  147,  146,  147,  146,  147,
      105,  146,  147,  113,  146,  147,  146,  147,  146,  147,
      124,  146,  147,  130,  146,  147,  146,  147,  146,  147,
      146,  147,   25,  146,  147,  146,  147,   31,  146,  147,
      146,  147,   34,  146,  147,  146,  147,  146,  147,   42,
      146,  147,  146,  147,   60,  146,  147,   72,  146,  147,
      146,  147,  146,  147,   89,  146,  147,  146,  147,  146,
      147,  146,  147,  146,  147,  105,  146,  147,  113,  146,
      147,  146,  147,  146,  147,  124,  146,  147,  130,  146,

      147,  158,  158,  146,  147,   20,  146,  147,  146,  147,
       30,  146,  147,   32,  146,  147,  146,  147,  146,  147,
       59,  146,  147,  146,  147,  146,  147,   94,  146,  147,
      146,  147,   97,  146,  147,  146,  147,  117,  146,  147,
      121,  146,  147,  146,  147,   20,  146,  147,  146,  147,
       30,  146,  147,   32,  146,  147,  146,  147,  146,  147,
       59,  146,  147,  146,  147,  146,  147,   94,  146,  147,
      146,  147,   97,  146,  147,  146,  147,  117,  146,  147,
      121,  146,  147,  146,  147,  146,  147,   35,  146,  147,
       41,  146,  147,   77,  146,  147,  146,  147,   96,  146,

      147,  100,  146,  147,  146,  147,  146,  147,   35,  146,
      147,   41,  146,  147,   77,  146,  147,  146,  147,   96,
      146,  147,  100,  146,  147,  148,  146,  147,   19,  146,
      147,  146,  147,  146,  147,   19,  146,  147,  146,  147,
      146,  147,   79,  146,  147,  146,  147,   79,  146,  147,
       12,  146,  147,   12,  146,  147
    } ;

static const flex_int16_t yy_accept[1403] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    4,    7,    9,   11,   13,   15,   17,   20,
       23,   27,   30,   32,   35,   38,   41,   44,   48,   52,
       56,   60,   64,   68,   72,   76,   80,   84,   88,   92,
       96,  100,  104,  108,  112,  116,  120,  124,  128,  132,
      134,  137,  139,  141,  144,  146,  148,  150,  153,  156,
      160,  163,  165,  168,  171,  174,  177,  181,  185,  189,
      193,  197,  201,  205,  209,  213,  217,  221,  225,  229,
      233,  237,  241,  245,  249,  253,  257,  261,  265,  268,
      271,  275,  275,  275,  276,  276,  277,  278,  278,  278,

      278,  279,  280,  280,  281,  282,  283,  284,  284,  285,
      285,  286,  287,  288,  289,  291,  292,  294,  296,  298,
      300,  302,  305,  307,  309,  311,  313,  316,  318,  320,
      322,  324,  326,  328,  330,  332,  334,  336,  338,  340,
      342,  344,  346,  348,  350,  352,  354,  356,  358,  360,
      362,  364,  367,  369,  372,  375,  377,  379,  381,  383,
      385,  387,  389,  392,  395,  397,  400,  402,  404,  406,
      408,  410,  412,  414,  416,  418,  420,  422,  424,  426,
      428,  430,  433,  435,  437,  439,  441,  443,  445,  447,
      449,  451,  455,  455,  455,  455,  455,  456,  456,  457,

      458,  459,  459,  459,  460,  460,  461,  462,  462,  462,
      462,  463,  463,  463,  464,  465,  465,  466,  467,  468,
      469,  469,  470,  470,  471,  472,  473,  474,  476,  477,
      479,  481,  483,  485,  487,  490,  492,  494,  496,  498,
      501,  503,  505,  507,  509,  511,  513,  515,  517,  519,
      521,  523,  525,  527,  529,  531,  533,  535,  537,  539,
      541,  543,  545,  547,  549,  552,  554,  557,  560,  562,
      564,  566,  568,  570,  572,  574,  577,  580,  582,  585,
      587,  589,  591,  593,  595,  597,  599,  601,  603,  605,
      607,  609,  611,  613,  615,  618,  620,  622,  624,  626,

      628,  630,  632,  634,  636,  639,  640,  640,  640,  640,
      640,  642,  642,  643,  643,  643,  643,  644,  644,  645,
      646,  647,  647,  648,  649,  649,  649,  650,  651,  653,
      656,  659,  661,  664,  667,  669,  671,  674,  676,  678,
      680,  682,  684,  686,  688,  690,  692,  694,  696,  698,
      700,  702,  704,  706,  708,  710,  712,  714,  716,  718,
      720,  722,  724,  726,  728,  730,  733,  735,  737,  739,
      741,  743,  746,  748,  750,  752,  754,  756,  758,  760,
      762,  765,  767,  769,  771,  773,  775,  777,  780,  782,
      785,  788,  790,  792,  794,  796,  798,  800,  802,  804,

      806,  808,  810,  812,  814,  816,  818,  820,  822,  824,
      826,  828,  830,  833,  835,  837,  839,  841,  844,  846,
      848,  850,  852,  854,  856,  858,  860,  862,  864,  866,
      868,  870,  872,  874,  876,  876,  876,  877,  877,  877,
      877,  877,  877,  878,  878,  879,  880,  880,  880,  881,
      882,  883,  884,  886,  887,  887,  888,  889,  889,  889,
      890,  891,  893,  896,  899,  901,  904,  907,  909,  911,
      914,  916,  918,  920,  922,  924,  926,  928,  930,  932,
      934,  936,  938,  940,  942,  944,  946,  948,  950,  952,
      954,  956,  958,  960,  962,  964,  966,  968,  970,  973,

      975,  977,  979,  981,  983,  986,  988,  990,  992,  994,
      996,  998, 1000, 1002, 1005, 1007, 1009, 1011, 1013, 1015,
     1017, 1020, 1022, 1025, 1028, 1030, 1032, 1034, 1036, 1038,
     1040, 1042, 1044, 1046, 1048, 1050, 1052, 1054, 1056, 1058,
     1060, 1062, 1064, 1066, 1068, 1070, 1073, 1075, 1077, 1079,
     1081, 1084, 1086, 1088, 1090, 1092, 1094, 1096, 1098, 1100,
     1102, 1104, 1106, 1108, 1110, 1112, 1114, 1116, 1119, 1119,
     1119, 1121, 1121, 1121, 1121, 1121, 1121, 1121, 1121, 1121,
     1121, 1122, 1122, 1123, 1125, 1127, 1129, 1131, 1133, 1135,
     1137, 1139, 1142, 1145, 1148, 1150, 1152, 1154, 1156, 1158,

     1160, 1163, 1165, 1167, 1169, 1171, 1173, 1176, 1178, 1180,
     1182, 1184, 1187, 1189, 1191, 1193, 1196, 1199, 1202, 1205,
     1207, 1209, 1211, 1213, 1215, 1217, 1219, 1222, 1224, 1226,
     1228, 1230, 1232, 1234, 1236, 1238, 1241, 1243, 1246, 1248,
     1251, 1253, 1255, 1257, 1260, 1262, 1264, 1267, 1269, 1271,
     1273, 1275, 1277, 1279, 1281, 1283, 1285, 1288, 1290, 1292,
     1294, 1296, 1299, 1301, 1303, 1305, 1307, 1309, 1312, 1314,
     1317, 1319, 1321, 1324, 1327, 1330, 1332, 1334, 1336, 1338,
     1340, 1343, 1345, 1347, 1349, 1352, 1355, 1357, 1360, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,

     1363, 1364, 1364, 1364, 1364, 1364, 1366, 1367, 1368, 1368,
     1369, 1371, 1373, 1375, 1377, 1379, 1381, 1383, 1385, 1388,
     1391, 1394, 1396, 1398, 1400, 1402, 1404, 1406, 1409, 1411,
     1413, 1415, 1417, 1419, 1422, 1424, 1426, 1428, 1430, 1433,
     1435, 1437, 1439, 1442, 1445, 1448, 1451, 1453, 1455, 1457,
     1459, 1461, 1463, 1465, 1468, 1470, 1472, 1474, 1476, 1478,
     1480, 1482, 1484, 1487, 1489, 1492, 1494, 1497, 1499, 1501,
     1503, 1506, 1508, 1510, 1513, 1515, 1517, 1519, 1521, 1523,
     1525, 1527, 1529, 1531, 1534, 1536, 1538, 1540, 1542, 1545,
     1547, 1549, 1551, 1553, 1555, 1558, 1560, 1563, 1565, 1567,

     1570, 1573, 1576, 1578, 1580, 1582, 1584, 1586, 1589, 1591,
     1593, 1595, 1598, 1601, 1603, 1606, 1609, 1613, 1613, 1613,
     1615, 1616, 1616, 1616, 1616, 1616, 1617, 1618, 1619, 1621,
     1624, 1626, 1629, 1631, 1633, 1635, 1637, 1639, 1641, 1644,
     1647, 1649, 1651, 1653, 1655, 1657, 1659, 1661, 1663, 1665,
     1667, 1669, 1671, 1673, 1675, 1677, 1679, 1681, 1683, 1685,
     1687, 1689, 1691, 1694, 1697, 1700, 1702, 1705, 1707, 1709,
     1712, 1715, 1717, 1720, 1722, 1724, 1726, 1728, 1731, 1733,
     1735, 1737, 1739, 1741, 1743, 1746, 1749, 1751, 1753, 1755,
     1757, 1759, 1761, 1763, 1765, 1767, 1769, 1771, 1773, 1775,

     1777, 1780, 1782, 1784, 1787, 1789, 1791, 1793, 1795, 1798,
     1800, 1802, 1804, 1806, 1808, 1811, 1812, 1813, 1813, 1814,
     1814, 1814, 1815, 1815, 1815, 1815, 1816, 1817, 1818, 1819,
     1820, 1822, 1825, 1827, 1830, 1832, 1834, 1836, 1838, 1840,
     1842, 1845, 1848, 1850, 1852, 1854, 1856, 1858, 1860, 1862,
     1864, 1866, 1868, 1870, 1872, 1874, 1876, 1878, 1880, 1882,
     1884, 1886, 1888, 1890, 1892, 1895, 1898, 1901, 1903, 1906,
     1908, 1910, 1913, 1916, 1918, 1921, 1923, 1925, 1927, 1929,
     1932, 1934, 1936, 1938, 1940, 1942, 1944, 1947, 1950, 1952,
     1954, 1956, 1958, 1960, 1962, 1964, 1966, 1968, 1970, 1972,

     1974, 1976, 1978, 1981, 1983, 1985, 1988, 1990, 1992, 1994,
     1996, 1999, 2001, 2003, 2005, 2007, 2009, 2012, 2012, 2012,
     2014, 2014, 2014, 2014, 2015, 2015, 2015, 2017, 2020, 2022,
     2024, 2026, 2029, 2031, 2033, 2035, 2037, 2040, 2043, 2045,
     2048, 2050, 2053, 2055, 2057, 2059, 2061, 2063, 2065, 2067,
     2069, 2072, 2074, 2076, 2079, 2082, 2085, 2087, 2089, 2091,
     2093, 2096, 2099, 2101, 2103, 2106, 2108, 2110, 2112, 2115,
     2117, 2120, 2122, 2124, 2126, 2128, 2130, 2133, 2135, 2138,
     2140, 2143, 2145, 2148, 2151, 2154, 2157, 2159, 2161, 2163,
     2165, 2167, 2170, 2173, 2175, 2178, 2180, 2180, 2180, 2181,

     2181, 2181, 2182, 2182, 2182, 2184, 2186, 2189, 2191, 2193,
     2195, 2198, 2200, 2202, 2204, 2206, 2209, 2212, 2214, 2217,
     2219, 2222, 2224, 2226, 2228, 2230, 2232, 2234, 2236, 2238,
     2241, 2243, 2245, 2248, 2251, 2254, 2256, 2258, 2260, 2262,
     2265, 2268, 2270, 2272, 2275, 2277, 2279, 2281, 2284, 2286,
     2289, 2291, 2293, 2295, 2297, 2299, 2302, 2304, 2307, 2309,
     2312, 2314, 2317, 2320, 2323, 2326, 2328, 2330, 2332, 2334,
     2336, 2339, 2342, 2344, 2347, 2349, 2349, 2349, 2352, 2353,
     2354, 2355, 2358, 2360, 2363, 2366, 2368, 2370, 2373, 2375,
     2378, 2380, 2382, 2384, 2386, 2388, 2391, 2394, 2397, 2399,

     2401, 2404, 2407, 2409, 2411, 2414, 2416, 2418, 2420, 2423,
     2425, 2428, 2430, 2433, 2435, 2437, 2439, 2442, 2444, 2446,
     2448, 2450, 2453, 2455, 2457, 2460, 2461, 2462, 2463, 2464,
     2467, 2469, 2472, 2475, 2477, 2479, 2482, 2484, 2487, 2489,
     2491, 2493, 2495, 2497, 2500, 2503, 2506, 2508, 2510, 2513,
     2516, 2518, 2520, 2523, 2525, 2527, 2529, 2532, 2534, 2537,
     2539, 2542, 2544, 2546, 2548, 2551, 2553, 2555, 2557, 2559,
     2562, 2564, 2566, 2569, 2569, 2569, 2569, 2569, 2571, 2572,
     2572, 2574, 2576, 2578, 2581, 2583, 2586, 2588, 2591, 2593,
     2595, 2598, 2600, 2603, 2606, 2608, 2610, 2613, 2615, 2617,

     2619, 2621, 2624, 2627, 2629, 2631, 2634, 2637, 2639, 2641,
     2643, 2646, 2648, 2651, 2653, 2656, 2658, 2660, 2663, 2665,
     2668, 2671, 2673, 2675, 2678, 2680, 2682, 2684, 2686, 2689,
     2692, 2694, 2696, 2699, 2702, 2703, 2704, 2704, 2706, 2709,
     2711, 2714, 2717, 2719, 2721, 2724, 2726, 2728, 2731, 2733,
     2736, 2738, 2741, 2744, 2746, 2749, 2751, 2754, 2757, 2759,
     2761, 2764, 2766, 2768, 2771, 2773, 2776, 2778, 2781, 2784,
     2784, 2784, 2786, 2788, 2791, 2794, 2797, 2799, 2802, 2805,
     2807, 2809, 2812, 2815, 2818, 2820, 2823, 2826, 2827, 2829,
     2832, 2834, 2836, 2839, 2841, 2843, 2846, 2848, 2851, 2854,

     2857, 2857
    } ;

static const YY_CHAR yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        4,    4,    5,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    6,    1,    7,    8,    9,    1,    1,   10,   11,
       12,   12,   13,   12,   14,   15,   12,   16,   16,   16,
       16,   16,   16,   16,   16,   16,   16,   17,   18,   19,
       20,   21,    1,   22,   23,   24,   25,   26,   27,   28,
       29,   30,   31,   32,   33,   34,   35,   36,   37,   38,
       39,   40,   41,   42,   43,   44,   45,   46,   47,   48,
        1,    1,    1,    1,   49,    1,   50,   51,   52,   53,

       54,   55,   56,   57,   58,   32,   59,   60,   61,   62,
       63,   64,   65,   66,   67,   68,   69,   70,   71,   72,
       73,   74,    1,    1,    1,   75,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1
    } ;

static const YY_CHAR yy_meta[76] =
    {   0,
        1,    2,    3,    2,    2,    2,    2,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1
    } ;

static const flex_int16_t yy_base[1486] =
    {   0,
        0,    0,   53,   54,  104,    0,  149,  150,  176,  177,
      620,  584,   76,   81,12505,   82,  162,  187,  575,   76,
      179,  188,  244,  574,   73,  559,   77,  319,  370,  421,
      472,  520,  567,  240,  419,  615,  242,  470,  242,  471,
      662,  707,  469,  752,  803,  184,  592,  532,  144,  606,
      229,  397,  547,  582,  629,  790,  750,  707,  868,  889,
      942,  996,  817,  897,  918,  948, 1071, 1122, 1173, 1224,
     1272, 1319,  626,  805, 1367,  633,  996,  993,  994, 1414,
     1460,  995, 1509, 1560, 1608, 1171, 1222, 1653,  924,  208,
      159,  550, 1720,  319,   93,12505,  561,   80,  970,  195,

    12505,  538, 1795,  714,  413,  724,  548,  268,  711,  294,
     1870,  536,  514,  469, 1222, 1945, 1276, 1328, 1334, 1363,
     1413, 1507, 1513, 1573, 1622, 1435, 1457, 1558, 1720, 1717,
     1993, 1718, 1783, 2032, 2076, 1126, 1604, 1719, 1799, 1866,
     1403, 1805, 1867, 1868, 1797, 1869, 1933, 1953, 1978, 2098,
     2076, 2110, 2123, 2024, 1651, 2138, 2159, 2198, 2158, 2201,
     2248, 2242, 2243, 2285, 2299, 2308, 2329, 2185, 2357, 2408,
     2330, 2407, 2454, 2454, 2482, 2504, 2508, 2523, 2552, 2369,
     2555, 2558, 2595, 2595, 2599, 2619, 2644, 2654, 2668, 2676,
     2697, 2717, 1694, 1412,  976, 1507, 2776, 2798, 2416, 2819,

     1318, 1976, 2824, 2830, 2838, 2032, 2075, 2874, 2848, 2897,
     2908, 2407, 2914, 2932, 2942, 2985, 3006, 3013, 3066, 3073,
     3039, 3099, 3126, 3153, 3174, 3180, 3201, 3228, 3303, 3378,
      174,  249, 1803,  420,  171,  389,  629,  424,  422,  177,
      245,  736, 1172, 3219,  649,  551,  733, 3058,  777,  837,
     1127,  373,  479, 1003,  936, 1180, 1275,  612, 1220, 1174,
     1229, 1285, 2128,  574,  247,  806, 1876,  402, 1125,  931,
     2832, 1512, 1467, 1551, 1727,  786,  413, 2372, 1657, 2437,
     2996, 1923, 3431, 1925, 1465, 3226, 2192,  862, 1605, 1962,
     1967, 2245, 2015, 2735,  437, 1961, 1326, 2036, 2070, 2458,

     2325, 2430, 2133, 1346, 3233, 3215, 2121,  494, 2245,  710,
     3477, 3545,  214,  463,  398, 3324,12505, 3620, 3331,    0,
     3695,  396,  489, 1990,  832,  539,  555, 3770, 3314, 3374,
     3375, 3377, 3415, 3433, 3477, 3545, 3542, 3544, 3616, 3617,
     3621, 3691, 2700, 3631, 3695, 3696, 3768, 3769, 3791, 3768,
     3817, 3822, 3851, 3870, 3878, 3900, 3908, 3931, 3951, 3971,
     3996, 3379, 3703, 4004, 4027, 4030, 4037, 3832, 4071, 4073,
     4093, 4105, 4111, 4129, 4168, 4143, 4182, 4184, 4208, 4222,
     4246, 4259, 4260, 4298, 4247, 4299, 4311, 4312, 4336, 4349,
     4361, 4377, 4389, 4405, 4413, 4427, 4439, 4456, 4451, 4476,

     4519, 4517, 4521, 4557, 4556, 4584, 4606, 4608, 4636, 4658,
     4660, 4688, 4710, 4712, 4741, 4759, 4712, 4771, 4776, 4799,
     4813, 4812, 4833, 4835, 4864, 4878, 4900, 4906, 4902, 4949,
     4951, 4953, 4993, 4992, 2925, 5059, 2960, 3520, 3207, 5080,
     5086, 3337, 4532, 5108, 3106, 3510, 4077, 5157, 5115, 3972,
     3132, 4183, 5178, 5232, 5185, 5206, 5255, 5262, 5283, 5290,
     5312, 2496,  620,  633, 2548,  679,  755, 2481, 2584,  856,
     3033, 2038, 1817, 2413, 4634, 1407,  885, 2244, 2307, 2554,
     1733, 2247, 2677, 2637, 3545, 3089, 4600, 3238, 2696, 2834,
      907, 2434, 2997, 3164, 1277, 1802, 3424, 2835,  938, 3170,

     3411, 1009, 3430, 3239, 3322, 2188, 2050, 3558, 2333, 2585,
     2151, 3625, 3894, 4092, 1882, 3432, 3809, 3915, 2541, 3943,
     1013, 3626, 1176, 1394, 3700, 3955, 3469, 3848, 3091, 3962,
     4024, 3963, 1506, 4640, 1532, 3701, 3870, 3975, 4398, 4175,
     1611, 4702, 4415, 4505, 2512, 1670, 3761, 2722, 4264, 4540,
     1701, 4455, 3552, 4240, 4504, 4543, 4167, 4668, 4832, 4576,
     3817, 4763, 1711, 2743, 4974, 4325, 3901, 5308,  258, 1234,
     5309, 5387, 5462, 5537, 5134,  455, 5346, 5612, 5687, 5762,
     5837,  600,  726, 5383, 5387, 5385, 5458, 5459, 5460, 5464,
     5533, 5534, 5535, 5613, 5536, 5610, 5611, 5683, 5612, 5684,

     5685, 5758, 5759, 5760, 5836, 5838, 5875, 5870, 5910, 5916,
     5939, 5955, 5761, 5834, 5975, 5987, 5989, 6022, 6024, 6046,
     6071, 6059, 6093, 6096, 6118, 6126, 6140, 6150, 6170, 6173,
     6183, 6204, 6224, 6222, 6236, 6265, 6268, 6281, 6286, 6321,
     6327, 6356, 6372, 6390, 6350, 6402, 6415, 6437, 6370, 6454,
     6475, 6439, 6496, 6497, 6498, 6526, 6548, 6550, 6582, 6550,
     6598, 6622, 6623, 6652, 6677, 6674, 6707, 6699, 6721, 6746,
     6758, 6759, 6760, 6793, 6807, 6815, 6850, 6600, 6654, 6854,
     6855, 6898, 6898, 6900, 6912, 6941, 6949, 6963, 6971, 7025,
     7093, 7168, 7243, 7048, 7133, 5371, 7073, 5212, 7147, 7055,

     7119, 7318, 7191, 7393, 7468, 5722, 7208, 7543, 7218, 7265,
     7618, 7693, 4854, 1223, 2918, 3812, 1488, 4578,  473,  683,
     5105, 4121, 4793, 2632, 2648, 4882, 4922,  701, 2996, 4973,
     3236, 4524, 5389, 4723, 2990, 4405, 4637, 3700,  811, 5066,
     5069, 1273,  873, 1117, 5320, 1225, 3732, 4433, 4929, 4658,
     4848, 5544, 4084, 1309, 1325, 5391, 5033, 5155, 1558, 5461,
     1367, 5469, 1405, 5395, 1476, 5157, 1520, 5232, 2831, 5545,
     1540, 1587, 5874, 1603, 5764, 1846, 5386, 5616, 5695, 4590,
     5762, 5895, 5887, 1932, 2005, 3378, 5614, 4757, 2078, 5318,
     5324, 4972, 5930, 6004, 2093, 5689, 2162, 5959, 5615, 2179,

     2209, 3626, 5889, 5468, 2603, 5923, 5811, 2226, 4361, 5988,
     6035, 2305, 2363, 6168, 2388, 2459, 7314, 2273, 2351, 7317,
     7768, 7843,  408, 6560, 7918, 7993, 8068, 8143, 7316, 7389,
     7390, 7391, 7392, 7464, 7465, 7543, 7542, 7466, 7467, 7541,
     7544, 7614, 7615, 7617, 7689, 7691, 7692, 7764, 7843, 7765,
     7766, 7767, 7844, 7842, 7914, 7841, 7915, 7989, 7990, 7991,
     7992, 8066, 8065, 8067, 8068, 8139, 8140, 8173, 8174, 8198,
     8212, 8226, 8250, 8263, 8264, 8293, 8311, 8323, 8336, 8360,
     8348, 8385, 8388, 8413, 8410, 8435, 8443, 8468, 8480, 8502,
     8524, 8527, 8549, 8557, 8579, 8571, 8601, 8623, 8641, 8653,

     8671, 8696, 8693, 8721, 8733, 8734, 8773, 8791, 8803, 8816,
     8828, 8846, 8871, 8883, 8895, 6061, 8968, 9043, 7197, 7292,
     7271, 7066, 9001, 8990, 9118, 7298, 9193, 9064, 9268, 9343,
     5393, 2654, 5534, 2725, 2783, 6229, 5922, 4694, 6223, 5769,
     2885, 2935, 6285, 6075, 6276, 6388, 6306, 6415, 3057, 6044,
     4705, 3161, 6474, 6298, 4833, 3294, 6102, 6761, 6561, 6421,
     6771, 3354, 5693, 6567, 3493, 3540, 3594, 5971, 3645, 6108,
     6599, 3968, 4054, 6375, 4075, 6651, 6801, 6152, 6819, 4090,
     6701, 6820, 6805, 6925, 6874, 6943, 4136, 4186, 6976, 5829,
     4271, 6341, 6241, 6726, 6915, 6957, 4281, 6979, 6592, 6849,

     7077, 4294, 4351, 7094, 7251, 4395, 4447, 7091, 7092, 7326,
     4455, 7248, 7616, 7401, 6213, 7694, 4486, 2414, 3172, 9041,
     9418, 9493,  418, 9016, 9568, 9643, 9718, 9114, 9115, 9116,
     9189, 9117, 9191, 9192, 9264, 9265, 9266, 9267, 9339, 9340,
     9341, 9342, 9418, 9415, 9493, 9416, 9417, 9492, 9490, 9491,
     9564, 9566, 9567, 9639, 9640, 9641, 9642, 9714, 9715, 9717,
     9754, 9755, 9767, 9768, 9792, 9805, 9827, 9835, 9849, 9857,
     9879, 9882, 9912, 9920, 9934, 9959, 9967,10000, 9992,10014,
    10022,10057,10044,10069,10081,10094,10119,10122,10147,10169,
    10171,10172,10209,10222,10221,10234,10307,10382, 7952, 8949,

    10337,10344,10457,10532, 8482,10607, 4538, 7620, 7545, 7176,
     4556, 7316, 7367, 7697, 4580, 4642, 4898, 7315, 4912, 7466,
     5063, 7776, 7165, 7926, 6980, 5083, 6742, 8279, 7542, 5107,
     7469, 8174, 5165, 5189, 5262, 7623, 7547, 7768, 5271, 5304,
     5325, 5428, 7701, 5463, 5470, 7322, 8182, 5513, 7618, 5679,
     7847, 7845, 7913, 8322, 7767, 5770, 7994, 5876, 8425, 5957,
     8263, 6006, 6130, 6143, 6186, 8070, 8061, 8201, 7844, 7923,
     6233, 6313, 8067, 6334, 6419, 6438, 6479,10682,10757,  413,
    10832,10307,10379,10381,10453,10454,10456,10528,10529,10530,
    10531,10603,10604,10605,10606,10678,10679,10680,10757,10681,

    10754,10755,10828,10756,10829,10830,10842,10877,10885,10899,
    10907,10929,10932,10962,10970,11007,11010,11044,11047,11069,
    11087,11099,11112,11124,11136,11209, 9023, 9071,11284, 6508,
     7700, 6543, 6560, 8587, 8236, 6632, 8609, 6705, 6763, 8631,
     7245, 8649, 7992, 6813, 6867, 6908, 8246, 8140, 6998, 7016,
     7400, 8363, 7043, 8701, 8438, 7476, 7246, 8758, 7325, 8368,
     7475, 8474, 7546, 8507, 7615, 8504, 8149, 7669, 8600, 7775,
     8763, 8831, 7881,    0,10299,10418,  401,11359,11434,11509,
    11209,11207,11206,11280,11282,11283,11355,11356,11358,11430,
    11431,11432,11505,11506,11508,11545,11546,11558,11559,11596,

    11597,11598,11599,11636,11637,11649,11650, 8543, 7916, 8665,
     7924, 8306, 8000, 8841, 8001, 8555, 8042, 8076, 8666, 8106,
     8143, 8603, 8742, 8198, 8877, 8896, 8973, 9190, 8243, 8295,
     9110, 8390, 8360, 8415,11044,  391,11723,11719,11720,11721,
    11722,11759,11772,11773,11802,11824,11837,11836,11861,11885,
    11886,11898,11910, 8670, 8452, 8753, 8462, 8479, 9050, 9118,
     8502, 8706, 8776, 8565, 8785, 8616, 8970, 8651, 8697,11983,
    12058,11979,11981,11982,12054,12055,12056,12057,12094, 9200,
     9269, 8717, 8771, 8773, 9044, 8822, 8850,12167,12163,12164,
    12166, 9119, 8865, 9197,12204,12207, 9270, 8881,12232, 8895,

    12505,  325,12305,12308,  322,12311,12314,12317,12320,12323,
      240,12326,12328,12331,12334,  239,  237,12336,12339,12342,
    12345,12348,12351,12354,12357,12360,12363,  227,12366,12368,
    12370,12373,12375,  215,12377,12380,12383,12386,12389,12392,
      100,12395,12397,12399,12401,12403,12406,12409,12411,12414,
    12417,12420,12423,12426,12429,12432,12435,12438,12441,12444,
    12447,12450,   79,12453,12455,12457,12459,12461,12464,12466,
    12468,12471,12474,12477,12480,12482,12484,12487,12490,12492,
    12494,12496,12498,12500,12502
    } ;

static const flex_int16_t yy_def[1486] =
    {   0,
     1401,    1,    1,    1, 1401,    5,    1,    1,    1,    1,
     1401, 1402, 1401, 1401, 1401, 1403, 1402, 1404, 1402, 1402,
     1402, 1402, 1405, 1402, 1402, 1402, 1402, 1401,   28,   29,
       29,   29,   29,   29,   29,   32,   32,   29,   29,   29,
       32,   41,   29,   29,   29,   41,   29,   29,   28, 1406,
     1407, 1407, 1407, 1407, 1408, 1406, 1409, 1406, 1406, 1406,
     1406, 1410, 1406, 1406, 1406, 1406, 1401,   67,   68,   68,
       68,   68,   68,   68,   71,   71,   68,   68,   68,   71,
       68,   68,   68,   68,   71,   68,   68,   41, 1401, 1402,
       44, 1402, 1411, 1401, 1403, 1401, 1412, 1402, 1404, 1413,

     1401, 1402, 1414, 1415, 1402, 1402, 1402, 1402, 1402, 1402,
     1416, 1402, 1402, 1402,   41, 1417,   41,   32,   32,   32,
       41,   41,   41,   41,   41,   29,   29,   29,   29,   29,
       41,   29,   41,   41,   41,  135,  135,   29,   29,   29,
      135,   32,   29,   29,   41,   29,   41,   29,   29,   29,
       29,   29,   29,  135,  135,  135,   41,   41,   32,   32,
       32,   32,   41,   41,   29,   32,   32,   29,   29,   41,
       32,   32,   32,   29,   29,   29,   32,   32,   32,   29,
       32,   32,   32,   29,   32,   29,   32,   29,   29,   29,
       41,  135, 1406, 1407, 1407, 1407, 1406, 1418, 1407, 1407,

     1407, 1419, 1419, 1407, 1419, 1420, 1419, 1406, 1421, 1422,
     1407, 1422, 1422, 1406, 1421, 1423, 1424, 1406, 1406, 1406,
     1406, 1406, 1406, 1425, 1406, 1406, 1406, 1426, 1427, 1426,
      230,  230,  230,  230,  230,  230,  230,  230,  230,  230,
      230,  230,  230,  230,  230,  230,  230,  230,  230,  230,
      230,  230,  230,  230,  230,  230,  230,  230,  230,  230,
      230,  230,  230,  230,  230,  230,  230,  230,  230,  230,
      230,  230,  230,  230,  230,  230,  230,  230,  230,  230,
      230,  230,  230,  230,  230,  230,  230,  230,  230,  230,
      230,  230,  230,  230,  230,  230,  230,  230,  230,  230,

      230,  230,  230,  230,  135, 1401, 1401, 1401, 1402, 1402,
      135, 1428, 1429, 1429, 1429, 1430, 1401, 1431, 1415, 1432,
     1433, 1402, 1402, 1402, 1402, 1402, 1402, 1434,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
      135,   29,   41,  135,  135,  135,  135,  135,  135,   29,
       29,  135,  135,   29,   29,   29,   29,  135,  135,  135,
      135,   41,   41,   41,   29,   29,  135,   41,  135,  135,
      135,   29,   41,   41,   41,   41,   41,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,  135,   29,  135,   41,   29,   29,   41,   29,  135,

      135,  135,  135,  135,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   41,   41,  135,   29,   29,  135,   41,
       41,   41,   29,   29,   41,   29,   29,   41,   29,  135,
      135,   41,   41,   41, 1407, 1435, 1420, 1419, 1420, 1420,
     1420, 1420, 1420, 1436, 1407, 1422, 1422, 1437, 1424, 1438,
     1438, 1438, 1424, 1439, 1406, 1406, 1406, 1406, 1406, 1406,
     1440,  230,  230,  230,  230,  230,  230,  230,  230,  230,
      230,  230,  230,  230,  230,  230,  230,  230,  230,  230,
      230,  230,  230,  230,  230,  230,  230,  230,  230,  230,
      230,  230,  230,  230,  230,  230,  230,  230,  230,  230,

      230,  230,  230,  230,  230,  230,  230,  230,  230,  230,
      230,  230,  230,  230,  230,  230,  230,  230,  230,  230,
      230,  230,  230,  230,  230,  230,  230,  230,  230,  230,
      230,  230,  230,  230,  230,  230,  230,  230,  230,  230,
      230,  230,  230,  230,  230,  230,  230,  230,  230,  230,
      230,  230,  230,  230,  230,  230,  230,  230,  230,  230,
      230,  230,  230,  230,  230,  230,  230,   29, 1401, 1402,
       29, 1428, 1441, 1442, 1443, 1444, 1443, 1445, 1446, 1447,
     1448, 1402, 1402,   29,   41,   29,   29,   29,   29,   41,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,

       29,   29,   29,   29,   29,   41,   41,   41,   41,   41,
       41,   41,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   41,   29,   29,
       41,   41,   29,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   29,   29,   41,   29,   29,   29,   41,   41,
       41,   29,   29,   29,   29,   29,   29,   41,   41,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   41,   41,   41,
       41,   41,   29,   29,   29,   29,   29,   29,   29, 1407,
     1435, 1449, 1450, 1451, 1452, 1453, 1454, 1454, 1454, 1453,

     1453, 1455, 1456, 1457, 1458, 1459, 1459, 1460, 1461, 1461,
     1462, 1462,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,

      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,   29, 1401, 1402,   29,
     1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,

       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29, 1471, 1449, 1472, 1451, 1452,
     1454, 1454, 1454, 1453, 1473, 1456, 1458, 1459, 1460, 1474,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,

      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712, 1401, 1402,   29,
     1464, 1475, 1465, 1466, 1467, 1476, 1470,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29, 1472, 1477, 1452, 1454,

     1454, 1453, 1473, 1478, 1459, 1474,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712, 1401, 1402, 1479, 1475, 1465,
     1476,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,

       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29, 1477, 1454, 1454, 1478,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712, 1480, 1481, 1481, 1480, 1479, 1482, 1483,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,

       29,   29,   29,   29,   29,   29,   29,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712, 1481, 1480, 1484,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712, 1484,
     1485,   29,   29,   29,   29,   29,   29,   29,   29,  712,
      712,  712,  712,  712,  712,  712,  712, 1485,   29,   29,
       29,  712,  712,  712,   29,   29,  712,  712,   29,  712,

        0, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401,
     1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401,
     1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401,
     1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401,
     1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401,
     1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401,
     1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401,
     1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401,
     1401, 1401, 1401, 1401, 1401
    } ;

static const flex_int16_t yy_nxt[12581] =
    {   0,
       12,   13,   14,   15,   13,   13,   16,   17,   12,   18,
       19,   19,   19,   20,   21,   22,   23,   24,   25,   26,
       27,   12,   28,   29,   30,   31,   32,   33,   34,   35,
       36,   37,   37,   38,   39,   40,   41,   42,   37,   43,
       44,   45,   46,   47,   48,   37,   37,   37,   37,   28,
       29,   30,   31,   32,   33,   34,   35,   36,   37,   38,
       39,   40,   41,   42,   37,   43,   44,   45,   46,   47,
       48,   37,   37,   37,   12,   49,   49,   94,   94,  821,
       94,   94,   94,   94,   96,   94,   94,  316,   97,  104,
      105,  106,  112,  113,   93,   96,  114,   93,   93,  313,

      821,   93,   49,   49,   50,   51,   52,   53,   54,   51,
       55,   56,   50,   57,   58,   58,   58,   59,   60,   61,
       62,   63,   64,   65,   66,   50,   67,   68,   69,   70,
       71,   72,   73,   74,   75,   76,   76,   77,   78,   79,
       80,   81,   76,   82,   83,   84,   85,   86,   87,   76,
       76,   76,   76,   67,   68,   69,   70,   71,   72,   73,
       74,   75,   76,   77,   78,   79,   80,   81,   76,   82,
       83,   84,   85,   86,   87,   76,   76,   76,   50,   88,
       88,   89,   89,   93,  192,  311,   90,   90,  100,  101,
      100,  100,  100,  100,  107,  470,  102,  101,  228,  463,

       93,  228,  109,  106,  317,  108,   88,   88,  103,   93,
      192,  115,  311,  307,  110,  328,   91,   91,  309,  184,
      315,  185,  470,  115,  186,  228,  463,  572,  228,   93,
      199,  199,  108,  200,  199,  574,   98,  116,  115,  328,
      312,  110,   91,   91,   92,  184,  201,  185,  310,  115,
      186,   92,   92,   92,   92,   92,   92,   92,   92,   92,
       92,   92,   92,   92,   92,   93,  149,  115,  115,  228,
      115,  228,  115,  228,  310,  115,  115,  115,  159,  150,
      322,  322,  464,  323,  160,  475,  115,  115,  115,   93,
      465,  818,   92,  149,  115,  115,  228,  115,  228,  115,

      228,  115,  115,  115,  159,  150,  326,  326,  464,  327,
      160,  475,  115,  115,  115,   93,  465,  818,   92,   92,
       94,   94,  111,   94,   94,   92,   92,  115,   92,   92,
       92,   92,  116,   92,  115,   92,   92,   92,   92,   92,
       93,  115,  115,  117,  118,  115,  115,  115,  115,  115,
      115,  115,  119,  115,  120,  115,  115,  115,  121,  122,
      115,  123,  115,  115,  115,  115,  115,  115,  115,  115,
      117,  118,  115,  115,  115,  115,  115,  115,  119,  115,
      120,  115,  115,  115,  121,  122,  115,  123,  115,  115,
      115,  115,  115,   92,  115,  115,  124,  228,  199,  199,

      125,  200,  199,  115,  315,  115,  126,  496, 1336,  115,
      115,  323,  115,  228,  201,  823,  127,   93, 1336,  574,
      823,  115,  115,  124,  228, 1180,  228,  125,  107,  115,
      471,  115,  126,  496,   93,  115,  115,  228,  115,  108,
      228,  151,  127,  128,  468,  115,  228,  115,  228,  115,
      129,  115,  473,  228,  130,  115,  471,  131,  474,  469,
      132,  228,  823,  133,  228,  115,  108,  115,  151,  315,
      128,  468,  115,  228,  115,  228,  115,  129,  115,  473,
      130,  115, 1023,  131,  474,  469,  132, 1023,  228,  133,
       93,  115,  156,  115,  134,  170,  157,  115,  135,  115,

      158,  115,  136,  228,  323,  171,  115,  161,  137,  497,
       93,  138,  228,  162,  139,  115,  115,  115,  115,  156,
      569,  134,  170,  157,  115,  135,  115,  158,  115,  136,
      228,  171,  115,  161,  137,   93,  497,  138,  228,  162,
      139,  115,  115,  115,  115,  140,  115,  569,  194,  194,
      115,  196,  194,  141,  327,  142,  115,   93,  115,   93,
       93,  189,  190,  107,  201,  143,  115,  315,  191,   93,
      327,   93,  140,  115,  108,  228,   93,  115,  115,  141,
       93,  142,  115,  199,  199,  115,  200,  199,  189,  190,
      485,  143,  115,  144,  191,   93,   93,  145,  228,  201,

      146,  108,  228,  147,  115,   93,  148,  194,  194,  195,
      196,  194,  195,  115,  187,  583,  485,  511,  115, 1401,
      144,   93,  188,  197,  145,  228,  146,  198,  115,  147,
      203,  204,  148,  205,  203,  206,  228, 1401,  115,  115,
      115,  187,  152,  511,  228,  115,  207, 1401,  153,  188,
      154,  503,  262,  228,  115,  155,  228,  228,  228, 1401,
      115, 1401,  228,  228,  115,  263,  228,  115,  228,  152,
      472,  228,  228,  228,  153,  484,  154,  503,  228,  262,
      228,  155, 1401,  228,  228,  228,  115,  115,  228,  163,
     1401,  263,  228, 1401,  228,  115,  472,  164,  228,  165,

      228,  166,  484,  228,  228, 1401, 1401,  115,  194,  194,
      195,  196,  194,  195,  115,  320,  163,  320,  320,  320,
      320,  115,  228,  164,  197,  165,  324,  166,  198, 1401,
      228,   93,   93,  115,  115,  321,  570,  325,  109,  106,
      228,  583,  115,  167,  115,   93,  168,   93,  228,  169,
      110,  210,  211,  212,  213,  210,  212,  228,  476,  214,
      228,  115,  477,  570,  325, 1401,  228,  215,  115,  167,
      115,  216,  168,  486,  487,  169,  172,  110,  173,  228,
     1401,  174,  115, 1401,  228,  476,  175,  228,  176,  477,
      177,  194,  194,  195,  196,  194,  195, 1401,  115,  486,

      487,  492, 1401,  172, 1401,  173,  228,  197,  174,  115,
      228,  198,  175,  527,  176, 1401,  177,  493,  194,  194,
      195,  196,  194,  195,  115,  178, 1401,  264,  492,  179,
      228,  228,  180,  181,  197,  228,  512,  228,  198,  182,
      527,  228,  183,  493,  582,  582, 1401,  583, 1401,  115,
      228,  228,  178,   93,  264, 1401,  179,  228,  228,  180,
      181,  228,  228,  512,  208,  182, 1401,  228,  183,  194,
      194,  195,  196,  194,  195,  115,  228,  228, 1401,  494,
      228,  217,  218,  219,  549,  197,  228, 1401,  228,  198,
      194,  194,  195,  196,  194,  195, 1401, 1401,  194,  194,

      195,  196,  194,  195,  220,  494,  197,  228, 1401,  722,
      198,  549,  228,  228,  197,  221,  225,  226,  198,  194,
      194,  195,  196,  194,  195,   94,   94, 1401,   94,  306,
     1401,  739, 1401, 1401,  307,  197,  722, 1401,  228,  198,
     1401, 1401,  221,  194,  194,  195,  196,  194,  195,  194,
      194,  195,  196,  194,  195,  228,  222,  219,  739,  197,
      228,  499,  228,  198,  308,  197,  517,  227,  223,  198,
     1401,  100,  101,  100,  100,  100,  100,  194,  194,  102,
      196,  194,  228, 1401, 1401, 1401, 1401,  228,  499,  228,
      308,  103,  517,  201, 1401,  223,  193,  194,  194,  195,

      196,  194,  195,  193,  193,  193,  193,  193,  193,  193,
      193,  193,  193,  197,  193,  193,  193,  198,  269,  228,
      228,  283,  270,  228,  228,  228,  271,  228, 1401,  272,
      274,  284,  228,  749, 1401,  273,  275,  228, 1401,  228,
      228,  228,  228,  498,  193,  269,  228,  228,  283,  270,
      228,  228,  228,  271,  228,  272,  274,  284,  228, 1401,
      749,  273,  275, 1401,  228,  228,  228,  228,  228,  498,
      193,  193,  194,  194,  195,  196,  194,  195,  193,  228,
      193,  193,  193,  193,  229,  193,  228,  193,  197,  193,
      193,  193,  198,  228,  228,  230,  231,  228,  228,  228,

      228,  228,  228,  228,  232,  228,  233,  228,  228,  228,
      234,  235,  228,  236,  228,  228,  228,  228,  228,  228,
      228,  228,  230,  231,  228,  228,  228,  228,  228,  228,
      232,  228,  233,  228,  228,  228,  234,  235,  228,  236,
      228,  228,  228,  228,  228,  193,  228,  228,  237,  228,
      359,  228,  238,  115, 1401,  228,  228,  228,  239,  115,
      515,  228,  228,  495,  228,  516,  360, 1401,  240, 1401,
     1401, 1401, 1401,  228,  228,  237,  228,  359,  228,  238,
      115,  228,  228,  228,  239,  115,  515,  228,  228,  495,
      228,  516,  360,  300,  240,  241,  228,  228,  228,  228,

      228,  301,  242,  228,  228, 1401,  243,  228,  478,  244,
      500, 1401,  245,  505,  479,  246,  506,  228, 1401,  228,
      300,  501,  241,  228,  228,  228,  228,  228,  301,  242,
      228,  228,  243,  228,  478,  244, 1401,  500,  245,  505,
      479,  246,  506,  228,  228,  228,  247,  501,  228,  115,
      248,  302,  303,  228,  249,   93,  504,  115,  304,  115,
      250,  115,  228,  251,  228,  507,  252,  819,  228,  934,
      228,  228, 1401,  247, 1401,  228,  115,  248,  302,  303,
      228,  249,  504,  115,  304,  115,  250,  115,  228,  251,
      228,  507,  252,  819,  228,  934,  228,  253,  228,  228,

      329,  228,  228,  115, 1401,  254,  961,  255,  228,  228,
     1401,  115,  228,  115,  743,  115,  502,  256,  228,  194,
      194,  508,  196,  194,  253,  228,  228,  329,  228,  228,
      115,  254,  961,  255,  228,  201,  228,  115,  228,  115,
      743,  115,  502,  256,  228,  257, 1401,  508,  228,  258,
      228, 1401,  259,  330, 1401,  260,  559, 1401,  261,  115,
     1401,  115, 1401,  115,  970,  228, 1401,  331, 1401,  115,
      228, 1401,  257,  115,  228,  332,  258,  228,  259,  115,
      330,  260, 1401,  559,  261,  567,  115,  115,  333,  115,
      970,  228,  228,  331,  265,  115,  115,  228,  115,  115,

      266,  332,  267, 1401, 1401,  115,  976,  268,  115,  334,
     1401,  567,  228,  194,  194,  333,  196,  194,  228,  228,
     1401,  265,  115, 1401,  115, 1401,  266,  115,  267,  201,
      115,  228,  976,  268,  115,  334,  115,  335,  228,  228,
      115,  276, 1401,  365,  228,  228,  721,  228,  115,  277,
      115,  278,  336,  279,  115, 1401,  435,  115,  228,  228,
     1401,  115,  115, 1401,  335,  115,  228,  115,  276,  365,
      228,  341,  721,  228,  115,  277,  115,  278,  336,  279,
     1401,  115,  435,  115, 1401,  228,  228,  115,  115,  228,
      228,  228,  115,  115,  543, 1401,  280,  341, 1401,  281,

      522, 1401,  282,  115, 1401, 1401,  228,  115,  194,  194,
      115,  196,  194,  228,  115,  228,  228,  228,  228,  115,
     1401,  543,  280,  937,  201,  281,  522,  228,  282,  115,
      779,  337,  228,  285,  115,  286,  228,  521,  287,  228,
      115,  228,  115,  288,  115,  289,  115,  290,  115,  937,
      115,  435,  115,  228,  338,  228,  782,  779,  337,  228,
      285,  115,  286,  228,  521,  287,  228,  115,  115,  288,
      115,  289,  115,  290,  115,  228,  115,  435,  115,  228,
      338,  228,  291,  782,  115,  228,  292, 1401,  115,  293,
      294, 1401,  523,  974,  115,  524,  295,  228,  342,  296,

      115, 1401,  228, 1401,  115,  228,  228, 1401,  115,  291,
      115,  115,  115,  292,  339,  115,  293,  294,  523,  974,
      115,  524,  295,  228,  342,  296,  983,  115,  115,  228,
      115,  115,  228,  228,  115,  228,  115,  115,  115,  550,
      339,  228,  228,  297,  115,  298,  361,  788,  299,  115,
      340, 1401,  983,  228, 1401,  115,  228,  115,  115,  115,
      228,  115,  228,  115, 1401,  550, 1401,  228,  228,  297,
      115,  298,  361,  788,  299,  115,  115,  340,  115,  228,
      152,  228,  530,  115,  115,  115,  153,  115,  305, 1401,
      115,  115,  115,  155,  228,  194,  194,  195,  196,  194,

      195, 1401,  115, 1401, 1401,  115, 1401,  152,  228,  530,
      115,  197,  153, 1401,  305,  198,  115,  115,  115,  155,
       92,  228, 1401, 1401, 1401,  228, 1401,   92,   92,   92,
       92,   92,   92,   92,   92,  811,   92,   92,   92,   92,
       92,   93,  343,  115,  351,  115,  344,  115,  115,  115,
      115,  228,  228,  345,  115,  362,  115,  228, 1401,  346,
      525,  526,  811,  115,  115,  115,  115,  726,   92,  343,
      115,  351,  115,  344,  115,  115,  115,  115,  228,  345,
      115,  362,  115, 1401,  228,  346,  525,  526, 1401,  115,
      115,  115,  115,  726,   92,   99,  100,  101,  100,  100,

      100,  100,   99,   99,  102,   99,   99,   99,   99,   99,
      115,   99,   99,   99,   99,   99,  103, 1401,  115, 1401,
      115, 1401,  352, 1401,  115,  115,  228,  228,  466,  115,
      366, 1401,  115,  363,  115,  115,  370,  115,  115,  744,
      115,  228, 1401,   99,  115,  115,  115,  717,  352,  467,
      115,  115,  115,  228,  228,  466,  115,  366,  115,  363,
      115,  115,  370, 1401,  115,  744,  115, 1401,  228,   99,
       92,  115, 1401, 1401,  717,  467,  115,   92,   92,   92,
       92,   92,   92,   92,   92,  987,   92,   92,   92,   92,
       92,   93,  115,  115,  115,  115,  364,  367,  115,  115,

      228, 1401,  115,  115,  115,  371,  228, 1401,  368,  369,
      764,  987,  115,  115,  115,  115,  513,  514, 1401,  115,
      115,  115,  115,  364,  367,  115,  115,  228,  115,  115,
      115,  371, 1401,  228,  368,  369, 1401,  764,  115,  115,
      115,  115,  513,  514,   92,   92,  536,  228, 1401,  228,
     1401, 1401,   92, 1401,   92,   92,   92,   92,  542,   92,
      115,   92,   92,   92,   92,   92,   93, 1401,  115, 1401,
      115,  228,  372,  536,  228,  373,  228,  203,  204,  115,
      205,  203,  437,  115,  542,  228,  228,  115, 1401,  374,
      552,  228, 1401,  207,  115,  551,  115,  228,  372,  115,

     1401,  373, 1401,  558,  115,  324,  115, 1401,  115, 1401,
      115,   93,  228,  228,  375,  374,  325,  552,  228,   92,
      115,  551, 1401, 1401,  115,  115,  347,  348,  349,  558,
      350,  115,  115,  440,  194,  115,  441,  440,  442,  228,
      375,  555, 1401,  325,  995, 1401, 1401,  115,  115,  443,
      115,  115,  347,  348,  349, 1401,  350,  115,  115,  115,
      228,  560,  228, 1401,  380,  381,  228,  115,  555,  115,
      995,  115,  353,  354,  228,  115,  203,  204,  115,  205,
      203,  437,  716,  115,  754, 1401,  115,  228,  560,  228,
      380,  381,  207,  115,  228,  115,  561,  115,  353,  354,

      355,  228,  115,  356, 1401, 1401,  115, 1401,  716,  357,
      754,  115,  115,  115, 1401,  115,  358,  228, 1401,  378,
      376,  228,  115,  561,  115, 1401,  307,  355,  115,  115,
      356,  307,  228,  115,  377,  357,  115,  115,  115,  115,
      115,  115,  358,  228,  115,  378,  115,  376,  115,  115,
      509,  115,  228,  379, 1401,  115,  115,  228,  228,  115,
      377,  308,  115,  115,  510,  115, 1401,  115, 1401,  115,
      115,  115,  115,  382,  566,  228,  115,  509,  383,  228,
      379,  759,  115,  388,  228,  115,  115,  308, 1401,  115,
      510,  115,  115,  115,  384,  115,  115,  115,  115,  382,

      566,  228,  228,  115,  383, 1401, 1401, 1401,  759, 1401,
      388,  400,  228,  115,  547,  401,  228,  115,  228,  115,
      384,  402,  115,  753,  115,  115,  115,  228,  548,  115,
      385,  115,  386,  387,  389,  115,  115,  115,  400,  228,
     1401,  547,  401,  228,  228, 1401,  115,  402,  228,  753,
      307, 1401,  115,  115,  548,  309,  385,  115,  386,  387,
      389,  115,  115,  115, 1401,  228,   93,  115,  228,  228,
      394,  228,  115,  115,  228,  392,  393,  115,  115,  553,
      115,  115,  115,  115,  723,  310, 1401,  115,  727,  390,
      554,  228,  391,  115,  115,  228,  228,  394,  228, 1018,

      115,  392,  393,  115,  115,  553,  115,  115,  115,  115,
      723,  310,  115,  115,  727,  390,  554, 1401,  391,  115,
      115, 1401,  115, 1401,  115,  395, 1018, 1401, 1401,  115,
     1401,  228, 1401,  397, 1401,  115, 1401, 1401, 1401,  115,
      396,  115, 1401,  115,  228,  115,  115,  724,  115,  228,
      115,  564,  395,  115,  115,  115,  115,  228,  228,  398,
      397,  115,  399,  409,  115,  115,  396,  115,  757,  115,
      228,  115,   93,  724,  115,  115,  228, 1019,  564,  115,
      403,  115,  115,  115,  228, 1401,  398,  115,  399,  409,
      115,  115, 1401,  115,  757,  422,  228, 1401,  528,  115,

      115,  115,  228,  115, 1019,  115, 1401,  403,  210,  211,
      115,  213,  210,  529,  115,  115,  445,  199,  199,  115,
      200,  199,  422,  228,  446,  528,  115,  228,  228,  115,
      404,  115,  115,  201, 1401,  405,  410,  228, 1176,  529,
      115,  115,  115,  406, 1401,  115,  718,  115,  407, 1401,
     1401,  408,  115,  228,  228, 1401,  565,  404,  228,  115,
      435,  228,  405,  410,  228, 1176,  115,  531,  115,  406,
      532,  115,  718,  115,  407,  740,  414,  408,  115,  115,
      115,  228,  228,  565,  115,  228,  435,  411,  228,  115,
      415,  562, 1401,  412,  531,  413,  532,  563,  228,  115,

      115,  740, 1401,  414,  416,  228,  115,  115,  115,  228,
      713,  115,  115,  411, 1401,  115,  415,  562,  115,  412,
      228,  413,  711,  563,  228,  115,  115, 1401,  115, 1401,
      115,  416,  228,  115,  115,  115,  228,  713,  417,  115,
      115,  418, 1401,  115,  115, 1401,  419,  228,  115,  711,
      115, 1401, 1401,  115,  115,  793,  115,  115,  115, 1401,
      115,  115, 1401,  228,  417,  228,  115,  418,  115,  115,
     1401,  768,  228,  419,  712,  115,  115,  115,  228,  115,
      115,  793,  115,  115,  115,  115,  420,  115,  115,  423,
      424,  115,  228,  115,  115, 1401,  725,  421,  768,  228,

      115,  712, 1401,  115,  115,  228,  714,  115,  228,  228,
      115,  115,  420,  115,  115,  423,  424,  115, 1401,  115,
      115,  115,  725,  421,  427,  426,  115,  758,  115,  115,
      115,  115,  115,  714,  115,  228,  228,  425, 1011, 1401,
      115,  115,  228, 1401,  115,  428, 1401,  115,  115,  115,
     1401,  427,  426,  758,  115,  115,  115,  115,  115,  729,
      115,  228, 1401,  425, 1011,  115,  115,  115,  228,  115,
      115,  228,  428,  943, 1401, 1401,  115,  429, 1401,  115,
      431,  115,  944,  430,  115, 1401,  729,  228,  228,  115,
      115,  115, 1401,  228,  432, 1401,  115,  228,  115,  943,

      115,  228,  115,  429,  115,  115,  115,  431,  944,  430,
     1401,  115,  115,  228,  115,  115,  115,  433,  737,  228,
      228,  432,  115,  728,  115,  115,  115,  115,  228,  115,
      115, 1401,  115,  115,  115,  115,  434,  115,  115,  594,
      115,  337, 1401,  433,  115,  737,  228,  228,  115,  728,
      115,  115, 1401, 1401,  115, 1401, 1401,  115,  115,  228,
      115,  115,  434,  115,  228,  594,  795,  228,  337,  556,
      557,  115, 1401,  228, 1401, 1401,  115,  194,  194,  195,
      196,  194,  195,  115, 1401, 1401,  228,  812, 1401, 1401,
      228, 1401,  795,  197,  228,  556,  557,  198,  193,  194,

      194,  195,  196,  194,  195,  193,  193,  193,  193,  193,
      193,  193,  193,  812,  193,  197,  193,  193,  193,  198,
      199,  199, 1109,  200,  199,  203,  204, 1401,  205,  203,
      437,  194,  194, 1401,  196,  194,  201, 1401, 1401,  203,
      204,  207,  205,  203,  437, 1401,  193,  201, 1109,  210,
      211,  212,  213,  210,  212,  207,  228,  214,  228,  228,
      738,  746, 1401,  435,  518,  215,  519,  520,  438,  216,
      228,  981,  193, 1401,  435,  194,  194,  195,  196,  194,
      195,  444,  438,  228, 1401,  228,  228,  738,  746,  435,
      518,  197,  519,  520,  438,  198,  228,  981,  210,  211,

      435,  213,  210, 1401, 1401, 1401,  445, 1401,  438,  194,
      194, 1401,  196,  194,  446,  210,  211, 1401,  213,  210,
     1401, 1401, 1401,  445,  228,  201,  194,  194, 1401,  196,
      194,  446, 1401,  194,  194,  195,  196,  194,  195, 1401,
     1401,  447,  201,  210,  211,  212,  213,  210,  212,  197,
      228,  214,  435,  198,  935,  690, 1401,  228,  447,  215,
     1401,  440,  194,  216,  441,  440,  442,  447, 1401, 1401,
     1401, 1401, 1401, 1401,  228, 1401, 1401,  443,  435, 1401,
      935,  693,  690,  228,  447,  209,  210,  211,  212,  213,
      210,  212,  209,  209,  214,  209,  209,  209,  209,  209,

      228,  209,  215,  209,  209,  209,  216,  450,  194,  451,
      452,  450,  451, 1401,  194,  194,  195,  196,  194,  195,
      228,  228,  533,  453,  955, 1401,  534,  454,  220,  228,
      197, 1401,  535,  209,  198,  228, 1401,  947,  741,  221,
      194,  194,  195,  196,  194,  195, 1401,  228,  228,  533,
      955,  455,  455,  534,  456,  228,  197,  228,  535,  209,
      198,  228,  715,  947,  741, 1401,  221,  194,  194,  195,
      196,  194,  195, 1401,  194,  194,  195,  196,  194,  195,
      222,  219,  488,  197,  228,  489, 1401,  198,  220,  715,
      197,  490,  223, 1401,  198, 1401, 1121, 1401,  491,  221,

      194,  194,  195,  196,  194,  195, 1401,  194,  194,  488,
      196,  194,  489,  228,  457,  228,  197,  490,  732,  223,
      198,  775, 1121,  201,  491,  458,  221,  194,  194,  195,
      196,  194,  195,  450,  194, 1401,  452,  450,  459,  459,
      228,  460,  228,  197, 1401,  732, 1401,  198,  775,  706,
     1401, 1401,  458,  193,  194,  194,  195,  196,  194,  195,
      193,  193,  193,  193,  193,  193,  193,  193, 1401,  193,
      197,  193,  193,  193,  198,  194,  194,  195,  196,  194,
      195,  194,  194,  195,  196,  194,  195,  742,  228, 1401,
     1401,  197, 1401,   93,  228,  198, 1177,  197, 1401, 1401,

     1124,  198,  194,  194,  195,  196,  194,  195,  440,  194,
      747,  441,  440,  442,  742,  228,   94,   94,  197,   94,
      306,  228,  198, 1177,  443,  307, 1124,  193,  193,  194,
      194,  195,  196,  194,  195,  193,  747,  193,  193,  193,
      193,  229,  193,  228,  193,  197,  193,  193,  193,  198,
      228, 1401,  480,  481,  482,  308,  483,  115, 1401,  544,
      115,  751,  228,  228, 1401,  545,  115,  546,  735, 1401,
      228,  736,  949,  380,  568,  228, 1401,  228,  480,  481,
      482,  308,  483, 1401,  115,  544, 1401,  115,  751,  228,
      228,  545,  115,  546, 1401,  735, 1401,  736,  949,  380,

      568,  228,  193,  193,  194,  194,  195,  196,  194,  195,
      193, 1401,  193,  193,  193,  193, 1401,  193, 1401,  193,
      197,  193,  193,  193,  198,  576, 1401,  576,  576,  576,
      576,  577,  320, 1128,  320,  320,  320,  320,  440,  194,
      584,  441,  440,  442,  115,  578,  228, 1401,  752, 1401,
      115, 1401,  321, 1401,  443, 1401, 1401, 1401,  693, 1128,
      115, 1401, 1401, 1401, 1401, 1401, 1401,  584, 1401, 1401,
     1401,  115, 1401,  228, 1401,  752,  115,  193,  193,  194,
      194,  195,  196,  194,  195,  193,  115,  193,  193,  193,
      193,  229,  193, 1134,  193,  197,  193,  193,  193,  198,

      115,  115,  462,  585,  115,  115,  115,  115, 1401, 1401,
      115,  115,  996,  115,  115, 1401,  616,  228,  115, 1134,
      115,  115, 1401,  115, 1401, 1401, 1401,  115,  115,  462,
      585,  115,  115,  115,  115,  228,  115,  115,  996,  115,
      115,  115,  616,  228,  115,  115,  115,  115,  228,  115,
      748,  115,  193,  537,  228,  228,  228, 1401,  538,  115,
     1401,  115,  228,  115, 1401,  745,  539, 1401,  115,  115,
      750,  540,  115,  765,  541,  228,  748,  115, 1401,  115,
      537,  228,  228,  228, 1401,  538,  115,  115, 1401, 1401,
      115,  745,  539,  228, 1401,  115,  750,  540, 1401,  765,

      541,  115, 1401,  115,  115,  115,  586,  115, 1401,  773,
      571,  210,  211,  115,  213,  210,  412,  115,  413,  445,
      228,  203,  204,  115,  205,  203,  437,  446,  115, 1401,
      115,  115,  228,  586,  115,  773,  571,  207, 1401,  115,
     1401, 1401,  412,  115,  413,   92, 1401, 1401, 1401,  115,
      694, 1401,   92,   92,   92,   92,   92,   92,  228,  573,
     1401,   92,   92,   92,   92,   92,   93,  587,  115,  228,
      115,  115,  115,  588,  115,  115,  228,  694,  115,  228,
      115,  115,  228, 1401,  730,  731,  755, 1401,  115,  799,
      115,  115,  756,   92,  587,  115,  228,  115,  115,  115,

      588,  115,  115,  228,  115,  228,  115,  115, 1401,  228,
      730,  731, 1401,  755,  115,  799,  115,  115,  756,   92,
       99,  100,  101,  100,  100,  100,  100,   99,   99,  102,
       99,   99,   99,  228,  580, 1401,   99,   99,   99,   99,
       99,  103,  115,  115, 1401,  115,  115,  590,  115,  228,
      228, 1401,  115,  115,  591,  595, 1401,  760,  115,  228,
      589,  115,  115,  115,  115,  228, 1008,  770,   99,  115,
      115,  115,  115,  115,  590,  115,  228,  228,  115,  115,
      591, 1401,  595,  760,  228,  115,  589,  115,  115,  115,
      115,  228, 1008,  770,   99,  319,  320,  115,  320,  320,

      320,  320,  319,  319,  319,  319,  319,  319,  319,  319,
      228,  319,  319,  319,  319,  319,  321,  592, 1401,  115,
      115,  115,  115,  115,  228,  228, 1401,  115,  115,  115,
      115, 1401,  593,  771,  783,  596,  597,  115,  115,  228,
      617,  958,  115,  319,  592, 1401,  115,  115,  115,  115,
      115,  228,  228,  115,  115,  115, 1401,  115,  593,  771,
      783,  596,  597,  115,  115,  228,  617,  958,  115,  319,
       92,  228, 1401,  963, 1401, 1401, 1401,   92,   92,   92,
       92,   92,   92,   92,   92,  228,   92,   92,   92,   92,
       92,   93,  115,  115,  115,  115,  115,  228,  115,  963,

      794,  115,  115,  599,  115, 1401, 1401, 1401,  115,  115,
      598, 1401,  228, 1401,  601,  115, 1401, 1401,  115,  115,
      115,  115,  115,  115,  115,  115,  794,  115,  115,  599,
      115,  115,  600,  228,  115,  115,  598,  766,  936,  602,
      601,  228,  115,  115,   92,  115,  115,  115, 1401,  115,
      115,  228, 1401,  115, 1401,  115,  808,  115,  600,  115,
      228,  603,  604,  115,  766,  936,  602,  115,  228,  115,
      115,  621,  228,  115,  115,  115,  115,  228,  115,  115,
      605,  115,  808,  774,  115, 1401,  115,  603,  604,  115,
     1401,  115,  606,  115,  228,  115,  607,  621, 1401,  228,

      115, 1401,  115,  784,  115,  115,  115,  605,  608,  774,
      115,  609, 1401, 1401,  115, 1401,  115,  115,  228,  606,
      761,  228,  610,  607,  115,  228,  115,  115, 1401,  784,
      115,  115,  115,  816,  611,  608,  115,  609,  115,  228,
      115,  767,  115, 1401,  115,  228,  115,  761, 1401,  610,
      115, 1401,  228,  115,  115,  612, 1401,  115,  115,  816,
     1401,  611,  115, 1401,  115,  115,  228,  228,  767,  769,
      115,  115,  115,  450,  194,  115,  452,  450,  115,  228,
      115,  772,  612, 1401,  115,  115,  228,  228,  776,  706,
      115,  115,  613, 1401,  228,  115,  769,  115,  115,  228,

     1401,  785,  115, 1401,  115,  115,  228,  228,  772,  778,
      115,  115,  614,  228,  228,  776,  707,  115,  613,  615,
      115, 1401,  115,  115, 1401,  115,  228, 1401,  785,  115,
      115,  115, 1401,  228, 1401,  778,  115,  115,  614,  115,
     1401,  115,  707,  115, 1401,  618,  615,  115,  228, 1401,
      115, 1401, 1401,  619, 1401,  115,  115,  115,  115,  777,
      115,  115,  115,  115,  115,  115,  115,  115, 1401,  115,
      115,  618, 1401,  115, 1401,  228,  115,  620,  210,  211,
      619,  213,  210,  115,  115,  777,  445,  115,  115,  115,
     1401,  115,  115,  228,  446,  622,  115,  115,  115,  115,

      115, 1401,  115,  620,  115, 1401,  115,  703, 1401,  969,
     1401,  115, 1401,  623,  228,  624,  228,  115,  762,  228,
      115, 1401,  622,  228,  115,  115,  115,  115,  763,  228,
      115,  625,  115,  115,  703,  115,  969,  115,  115,  623,
      228,  115,  624,  228,  115,  762,  626,  115,  115,  228,
      115,  115,  115,  941,  763,  228,  115, 1401,  625,  115,
      228, 1401,  115,  627,  115,  115,  115,  115,  115, 1401,
      115, 1401,  626, 1401,  115,  228,  115,  115,  630,  941,
      115, 1401,  115,  115,  450,  194,  228,  452,  450,  627,
      115,  228,  115, 1401,  115,  115,  628,  115, 1401,  228,

      706,  228,  629,  115,  630,  115,  115,  115,  115,  115,
      115, 1401, 1401,  803,  632, 1401,  787,  115,  228,  115,
      115,  115,  115,  628,  631,  228,  228,  707,  629,  115,
      115,  115, 1401,  115,  115, 1401,  115,  115,  115,  803,
      633,  632,  787,  115,  115,  115,  115,  115,  634, 1401,
      631,  228,  115,  707,  115, 1401,  115, 1401,  115, 1401,
     1401,  115, 1401, 1401,  228,  115,  633, 1401,  115, 1401,
      115, 1401,  635,  640, 1401,  634,  115,  115, 1401,  115,
      115,  800,  636,  115,  115,  115,  115,  637,  228,  115,
      115,  228,  115,  115,  115,  115,  115,  796, 1401,  635,

      640,  638, 1401,  115,  115,  115,  115,  800,  636,  115,
     1153, 1401,  115,  115,  637,  228,  115,  115,  115,  115,
     1159,  115,  115,  796,  115,  115,  639,  638,  115,  641,
     1401,  115,  115, 1164,  115,  115, 1153,  642,  115, 1401,
     1401,  115,  115, 1401,  115,  115, 1159,  115,  115,  228,
     1401,  115,  115,  639,  815,  115,  641,  115,  115, 1164,
      115,  115,  115, 1401,  642,  115,  115, 1401,  115,  115,
      115,  115,  115,  115,  115,  115,  228,  643, 1401,  115,
     1401,  815,  115,  115,  115,  115, 1014,  115, 1401,  115,
      228,  115, 1401,  115, 1401,  115, 1401,  115,  115, 1401,

      228,  115,  115,  643,  115, 1401,  115,  115,  115, 1401,
      644,  115, 1401, 1014,  115,  645,  228,  115,  115,  115,
      786,  115,  228,  115, 1401,  115,  228,  956,  115,  115,
     1401,  115,  115,  115,  228,  115,  644, 1401,  115,  228,
      115,  791,  645,  115,  228,  646,  115,  786,  647,  228,
      115,  115,  115,  115,  956,  964,  115,  648, 1401,  115,
      228,  115, 1401,  115,  115,  649,  228,  115,  791,  115,
      228,  646,  228,  115,  647,  115,  115,  115,  115,  228,
      115,  115,  964,  115,  648,  115, 1167,  115,  798,  115,
     1401,  650,  649,  115,  228,  115,  115,  651,  228,  115,

      652,  115, 1401,  115,  115, 1401,  228, 1401,  115,  115,
      115,  115, 1167,  115,  798, 1401,  115,  650, 1401,  115,
      228,  115, 1401,  651, 1401,  228, 1401,  652,  228,  228,
      115,  792, 1401,  440,  194,  115,  441,  440,  442,  801,
     1401,  655,  115,  115,  115,  115,  115,  950,  115,  443,
      115,  228,  115,  653,  656,  228,  228,  115,  792,  115,
     1401,  115,  654,  228,  228,  801,  797,  228,  655,  802,
      115,  115,  115,  115,  950,  115,  115,  228,  115,  653,
      656,  115,  658,  115,  115,  115,  115,  115,  654,  228,
      657,  228,  115,  797,  228,  228,  802,  115,  807, 1401,

      228, 1401,  115,  228,  938, 1401,  659, 1401,  115,  658,
      115,  115,  991,  115,  115, 1401,  657,  228,  115, 1236,
      115,  228,  733,  115,  228,  807,  734,  228,  115,  228,
      115,  938,  115,  659,  115, 1401,  115,  115,  115,  991,
     1401,  115,  115,  228,  661, 1236,  115,  660, 1401,  733,
     1401,  228,  115,  734,  115,  228,  115, 1401,  228,  115,
      719,  115,  662,  115,  228,  115,  115, 1401,  115,  663,
      661, 1401,  115,  660,  780,  720,  228, 1401,  115,  957,
      115,  228,  115,  781,  664,  228,  665,  719,  115,  662,
      115,  228,  228,  115,  115,  663,  115,  228,  115,  966,

      780,  720,  228,  804,  115,  957,  115,  228,  115,  781,
     1401,  664, 1401,  665,  115,  115, 1112,  115,  115,  228,
      115, 1401,  115,  228,  115,  966,  228, 1123,  789,  804,
      115,  666,  115,  228,  115,  790,  115, 1401,  670,  115,
      115,  115,  115, 1112,  228,  115,  115,  115,  115,  115,
      115,  667, 1401,  228, 1123,  789,  115,  666,  115,  228,
      115,  790,  228,  115,  953,  670,  115,  115,  115,  115,
      228,  954,  115,  115,  115,  115,  115,  667,  115, 1401,
      115, 1401,  115,  115,  115,  668,  115,  228,  228,  998,
      953, 1401,  669,  809, 1401,  115,  228,  115, 1401,  115,

      115,  115,  115,  115,  115,  810,  115,  115, 1401,  671,
      115,  668, 1401,  115,  228,  998,  115,  115,  669,  942,
      809, 1401,  228, 1401,  115,  115,  115,  115,  115, 1401,
      115,  810,  228,  115,  115,  671,  672, 1401,  115,  115,
      115, 1401,  115,  115, 1401, 1401,  942,  674,  115,  115,
      115,  115,  115,  115,  673, 1127,  228, 1401,  228,  675,
      115,  115,  672,  115,  115,  115,  115,  115,  805,  115,
      806,  115,  228,  674,  115,  115,  115,  115,  115,  115,
      673,  676, 1127,  228,  933, 1401,  675,  228,  115,  967,
      115,  115,  115,  228,  805,  115,  806,  115,  228,  677,

     1401,  115, 1401,  115,  115,  115, 1401,  676,  115, 1401,
     1401,  933,  945,  228,  678,  967,  679, 1401,  115,  228,
     1401,  228,  680, 1401,  115,  677,  115,  115,  115,  115,
      115,  115,  682,  115, 1401,  115,  115,  228,  115,  945,
      678,  115,  679,  115,  683,  681,  115,  228,  115,  680,
      115,  228,  946,  115, 1401,  115, 1401,  115,  965,  682,
      115,  228,  115,  228,  115, 1401, 1401,  115,  228,  115,
      683,  681,  115,  684,  115,  115,  115,  228,  115,  946,
      115, 1401,  115, 1401,  115,  965, 1401,  228,  686,  115,
      115,  115,  687, 1401,  228,  685, 1001, 1401,  228,  948,

      684, 1401,  115,  115, 1401,  115, 1401,  115,  115,  813,
      115,  228,  228,  814,  686,  115,  115,  115,  687,  115,
      115,  685,  688, 1001,  689,  228,  948,  115,  115,  115,
      115,  115,  115, 1401, 1401,  813, 1401,  228,  228,  814,
     1401, 1401, 1401, 1401, 1401, 1401,  115,  115, 1401,  688,
      689, 1401, 1401,  115,  115,  115,  115,  115,  115,  193,
      194,  194,  195,  196,  194,  195,  193,  193,  193,  193,
      193,  193,  228,  692,  972,  193,  197,  193,  193,  193,
      198,  440,  194, 1401,  441,  440,  442,  440,  194, 1401,
      441,  440,  442, 1401, 1401, 1401,  959,  443,  228,  960,

      972, 1401,  228,  443, 1401,  228, 1401,  193,  228,  697,
      194,  698,  699,  697,  698,  700,  450,  194,  451,  452,
      450,  451, 1243,  959,  695,  701,  960,  939,  228,  702,
      695,  228,  453,  193,  228,  576,  454,  576,  576,  576,
      576,  577, 1401, 1401,  228, 1401,  228, 1401, 1243, 1401,
      695, 1401, 1401,  940,  939,  578,  695,  209,  210,  211,
      212,  213,  210,  212,  209,  209,  214,  209,  209,  209,
      228,  705,  228,  209,  215,  209,  209,  209,  216,  450,
      194,  451,  452,  450,  451, 1401,  194,  194,  195,  196,
      194,  195,  973, 1401,  228,  453,  228, 1401,  979,  454,

      456, 1401,  197, 1401,  228,  209,  198,  194,  194,  195,
      196,  194,  195,  697,  194, 1401,  699,  697,  973,  921,
      228,  456,  228,  197,  979, 1401, 1401,  198,  228,  922,
      228,  209,  449,  450,  194,  451,  452,  450,  451,  449,
      449,  449,  449,  449,  449,  449,  449, 1401,  449,  453,
      449,  449,  449,  454,  228, 1401,  194,  194,  195,  196,
      194,  195, 1401,  194,  194,  195,  196,  194,  195, 1401,
      457,  228,  197,  980,  709,  709,  198,  710, 1401,  197,
      449,  458, 1401,  198,  194,  194,  195,  196,  194,  195,
     1401,  194,  194,  195,  196,  194,  195,  228,  460,  980,

      197,  228, 1401, 1401,  198,  460,  449,  197,  458, 1401,
     1252,  198,  193,  194,  194,  195,  196,  194,  195,  193,
      193,  193,  193,  193,  193,  193,  193,  228,  193,  197,
      193,  193,  193,  198,  635,  820, 1252, 1401,  115,  115,
     1401,  999, 1401,  228,  817,  115, 1401,  576, 1401,  576,
      576,  576,  576,  577,  115,  115,  962,  228, 1000,  228,
     1401,  635,  820,  228,  228,  115,  115,  578,  999,  228,
      817,  115,  697,  194,  698,  699,  697,  698,  700, 1401,
      115,  115,  962,  228, 1000,  228,  193,   92,  701,  228,
      228, 1401,  702, 1401,   92,   92,   92,   92,   92,   92,

     1401,  573, 1401,   92,   92,   92,   92,   92,   93,  115,
     1401,  115,  951,  115,  115,  831,  952,  971, 1401,  115,
      824,  115,  115,  829,  115,  228,  830,  988,  228,  115,
      228,  115,  228, 1107,  228,   92,  115,  978,  115,  951,
      115,  115,  831,  952,  971,  115, 1401,  115,  115,  829,
      115,  228,  830,  988,  228,  115,  228,  115,  228, 1107,
      228,   92,   92,  978, 1401, 1401, 1401, 1253, 1401,   92,
       92,   92,   92,   92,   92,  572,  573,  572,   92,   92,
       92,   92,   92,   93,  115,  115,  834,  975,  115,  115,
      115,  115, 1010, 1253,  115,  833,  115,  977, 1401,  835,

      228,  115,  228,  115,  832,  115,  115,  228,  228, 1255,
       92,  115,  115,  834,  975,  115,  115,  115,  115, 1010,
      115,  833,  115, 1401,  977,  835,  228,  115,  228,  115,
      832,  115,  115,  228,  228, 1255,   92,  314,  314, 1401,
      314,  314,  314,  315,  314,  314,  314,  314,  314,  314,
      314,  314,  228,  314,  314,  314,  314,  314,  314,  836,
      115,  115,  115,  115,  115,  115,  115, 1401,  839,  115,
      115,  115,  115,  228,  968,  982, 1401, 1108,  228,  115,
      115,  115,  115,  228,  228,  314,  836,  115,  115,  115,
      115,  115,  115,  115,  839,  115,  115,  115,  115,  228,

     1401,  968,  982, 1108, 1401,  115,  115,  115,  115,  228,
      228,  314,  575,  576, 1401,  576,  576,  576,  576,  577,
      575,  575,  575,  575,  575,  575,  575, 1401,  575,  575,
      575,  575,  575,  578, 1401,  837,  840,  115,  115,  115,
      115,  115,  843,  115,  989, 1401,  115,  115,  115,  115,
      997, 1007,  841,  228,  228,  228,  115,  115,  115,  115,
      575,  838,  837,  840,  115,  115,  115,  115,  115,  843,
      115,  989,  115,  115,  115,  115,  997, 1007,  841,  228,
      228,  228,  115,  115,  115,  115,  575,   99,  100,  101,
      100,  100,  100,  100,   99,   99,  102,   99,   99,   99,

     1401,  580, 1401,   99,   99,   99,   99,   99,  103,  115,
      115,  115, 1401,  115,  844,  115, 1401,  842,  228,  115,
      115,  115, 1005,  450,  194,  990,  452,  450,  228,  115,
      115,  115,  228, 1135,  228,   99,  115,  115,  115,  706,
      115,  844,  115,  842,  228,  115,  115,  115, 1005, 1401,
     1401, 1401,  990, 1401,  228,  115,  115,  115,  228, 1135,
      228,   99,   99,  100,  101,  100,  100,  100,  100,   99,
       99,  102,   99,   99,   99,  579,  580,  579,   99,   99,
       99,   99,   99,  103,  115,  846,  115,  115,  115,  115,
      115,  857,  992, 1401,  115,  115,  847,  115,  985,  845,

      986,  228, 1114,  228,  115,  115,  115,  115,  228,  228,
       99,  115,  846,  115,  115,  115,  115,  115,  857,  992,
      115,  115,  847,  115,  985,  845,  986,  228, 1114,  228,
      115,  115,  115,  115,  228,  228,   99,  319,  320, 1401,
      320,  320,  320,  320,  319,  319,  319,  319,  319,  319,
      228,  828, 1013,  319,  319,  319,  319,  319,  321,  848,
      115,  849,  115, 1401,  858,  850,  115, 1401,  228, 1152,
      115, 1401,  115,  115, 1401,  115,  228,  115, 1013, 1401,
      115, 1401,  115, 1401, 1401,  319,  848,  115,  849,  115,
     1401,  858,  850,  115,  228, 1152,  115,  115,  115,  115,

      984,  115,  115,  115,  853,  115,  115,  115,  115,  115,
      115,  319,  115,  228,  115,  228,  851,  994, 1401, 1009,
     1401,  993, 1401,  852,  115, 1401,  228,  984,  228,  115,
      853,  115,  854,  115,  228,  115,  115,  115,  115,  228,
      115,  228,  851,  115,  994,  115, 1009,  115,  993,  115,
     1401,  115,  228,  115,  228,  115, 1002, 1401,  855,  854,
      228,  228,  228, 1111,  115, 1012,  115, 1401, 1401,  228,
      115,  115, 1401,  115,  115,  115,  115,  115,  115,  115,
      856,  115,  115, 1002,  855, 1006, 1401,  228,  228, 1111,
      115, 1012,  115,  115,  115,  228,  228, 1401,  228, 1137,

      115,  115,  115, 1401,  115,  115,  856, 1401,  859,  115,
      228,  115, 1006,  115, 1015,  115,  115,  115,  115,  115,
      115,  115,  228,  115,  228,  115, 1137,  228,  115, 1003,
     1004, 1401,  115,  115,  859,  115,  228,  115, 1401, 1401,
      115, 1015,  115,  228,  115,  228,  115,  115,  115,  115,
      115,  115,  115,  228,  115, 1401, 1003, 1004,  860,  115,
      115,  115,  194,  194, 1016,  196,  194, 1401,  115,  228,
      115,  228,  115, 1401,  228,  115,  115,  115,  201,  115,
     1122,  115,  115,  228,  860,  115,  115,  861,  863,  115,
     1401, 1016,  115,  862,  115,  115,  115,  115, 1401,  115,

      228,  115, 1401,  115, 1401,  115, 1122,  115,  115,  228,
     1116, 1401,  115,  861,  228,  863,  115,  115,  115,  115,
      862,  115,  115,  115,  115, 1401,  115, 1401,  115,  115,
     1138,  115,  115,  115,  864, 1129, 1116,  865, 1401,  115,
      228,  228,  115,  115,  115, 1401,  115,  228,  866,  115,
      115,  867,  115,  115,  115,  115,  115, 1138,  115, 1401,
      864, 1129,  115,  865,  115,  115,  115,  228,  115,  228,
      115,  115,  115,  228, 1143,  866,  115,  115,  867,  115,
      115, 1401,  228,  115, 1401,  115,  115,  115,  115,  868,
      115,  228, 1401,  115, 1017,  228,  869,  115,  115,  115,

      115, 1143,  115,  115,  115, 1401,  115,  228,  228,  115,
      115,  115,  115,  115,  870,  868,  115,  228,  115,  115,
      871, 1017,  115,  869, 1401,  228,  115,  115, 1401, 1401,
      115,  115,  115,  228, 1401,  115, 1401,  115, 1401,  872,
      870,  115,  115,  115,  115,  115,  871, 1113,  115,  115,
      873,  228,  228, 1174,  115, 1110, 1401,  115,  115,  115,
      115,  874,  228,  115,  875,  872, 1155,  115,  228,  115,
      115,  115,  228,  115, 1113,  115,  115,  873,  228, 1174,
      228,  115, 1110,  115, 1401,  115,  115,  874,  228, 1401,
      115,  875,  115, 1155,  228,  115,  115,  115,  228,  115,

      115,  115,  115,  115,  115,  115,  228,  115,  115, 1401,
      876, 1115, 1401,  115, 1401,  228,  115, 1117,  115,  115,
      115,  115,  115,  115,  228,  115,  115,  877,  115,  115,
      115,  115, 1119,  115, 1401,  115,  876,  228, 1115, 1126,
      115,  228,  115, 1117,  115,  228,  115,  115,  115,  115,
      228,  115,  228,  877,  115, 1401,  115, 1401,  115, 1119,
      115, 1401,  115,  228,  115, 1126,  115, 1401,  878, 1401,
     1401,  228, 1401,  228, 1154,  115, 1401,  115,  228, 1401,
      228,  115,  115,  115,  115,  115,  115,  115,  115,  881,
      115,  115,  115,  115,  878,  115,  879,  115,  115,  228,

     1154, 1401,  880, 1140,  115,  115,  228,  115,  115,  885,
      115,  115, 1401,  115,  228,  881,  115,  115,  115,  115,
      115,  115,  879, 1118,  115,  115,  115,  228,  882,  880,
     1140,  115,  115,  115,  115,  885,  115, 1401,  115, 1401,
      228,  115, 1401,  115,  115,  115, 1401,  115,  115, 1118,
     1120,  115,  115,  228,  228,  882, 1132, 1401, 1273,  115,
      228,  115,  115,  115,  115,  115, 1401,  115,  115,  888,
     1401,  883,  115,  884,  115,  115, 1120,  115, 1401, 1274,
      228,  115, 1132,  115, 1273,  115,  228,  115, 1401,  115,
      115,  115,  115,  115,  115,  886,  888,  883, 1401,  884,

       93,  115,  115,  887, 1125, 1274, 1401, 1401,  115,  115,
      115,  115,  115,  228,  115,  115, 1401,  115,  889,  115,
     1275,  886,  115,  115,  891, 1401,  115,  890,  115,  115,
      887, 1125,  115,  115,  115, 1401,  115, 1401,  115,  228,
      115, 1401,  115,  115,  115,  889, 1275,  228, 1401,  115,
      115,  891,  115,  115,  890,  115,  892, 1401,  115,  115,
      115,  576,  115,  576,  576,  576,  576, 1024,  115,  115,
      115, 1401,  115,  228,  115, 1401,  115,  115,  115,  115,
      115,  578,  228,  892,  115,  115,  895,  115,  115,  893,
     1401, 1136, 1401, 1401,  115, 1401,  115, 1131,  115,  228,

      228,  115, 1401,  115,  115,  115,  228,  115,  228,  115,
      115,  115,  895,  115, 1161,  893,  894,  115, 1136,  115,
      115,  115,  115, 1131,  115,  228,  228,  115,  115, 1401,
      896,  228,  228, 1401,  115,  909,  115,  115,  228,  115,
     1139, 1161,  894,  115,  115,  115,  897,  115,  115,  115,
     1401,  115,  115,  115,  115,  115,  896,  228,  115,  115,
      115,  909, 1401,  115,  228,  115, 1139, 1401,  115,  115,
      115,  228, 1401,  897, 1401,  115,  115, 1401,  115,  115,
      115,  115,  115, 1401,  115,  115,  898, 1401,  115,  115,
      228,  115, 1141,  115,  115,  115,  910,  228,  115, 1401,

      900,  899, 1401,  115,  115,  115, 1401,  115,  115,  115,
      115, 1401,  898,  115,  115,  115,  228,  115, 1141,  115,
      115, 1401,  910,  115,  115,  115, 1401,  900,  899,  115,
      115,  115,  901,  902,  115,  115,  115,  115, 1401,  115,
      228, 1401, 1145,  115,  228,  115,  115,  115, 1401,  115,
     1156,  115,  115,  115,  903, 1401,  115,  115, 1401,  901,
      902,  115, 1401, 1401,  115,  228,  228,  115, 1145,  115,
      228,  115,  115, 1401,  115, 1244,  115, 1156,  115,  115,
      903,  228,  115,  115,  904,  115,  115, 1130,  115,  115,
      115,  228,  115,  115,  115,  905,  115, 1133, 1401,  115,

      228, 1244, 1312,  115,  115,  115,  115,  228,  115, 1401,
      228,  904,  115,  115, 1130,  115,  115,  115,  115,  115,
      115,  905,  115,  115, 1133, 1401,  228, 1142, 1312,  115,
      115,  115,  115,  115, 1401, 1147,  228,  115, 1401,  115,
      228,  115, 1401,  115,  228,  907,  115,  906, 1144, 1401,
      115,  115,  228,  115, 1142,  115, 1401, 1146,  228,  228,
      115,  115, 1147, 1401,  115,  115,  228, 1401,  115,  115,
      228, 1162,  907,  906,  908, 1144,  115,  115,  228,  115,
      115,  115,  115, 1146,  228,  228,  115,  115,  228,  115,
      115,  115,  115,  115,  115,  911,  115, 1401, 1162, 1401,

     1401,  908, 1401,  115, 1149, 1401,  228,  115,  115,  115,
     1401, 1401,  115,  228,  228,  115,  115,  115,  115,  115,
      115,  911,  115,  912,  913,  115,  115, 1401,  115,  914,
      115, 1149,  228,  115,  115,  115,  115,  115,  115,  228,
     1401, 1157,  115, 1401,  115, 1401,  115,  228,  115, 1401,
      912,  913,  115,  115,  228,  115,  914,  115,  115,  115,
      115,  115,  115,  115,  228,  115, 1148,  115, 1157,  115,
      115,  115,  115,  228,  115,  915, 1401,  115, 1150,  115,
      228, 1401,  228, 1158,  115,  115, 1401,  115, 1401,  115,
      228, 1401, 1148,  115,  115,  115,  228,  115,  115,  115,

     1401,  115,  915,  115, 1150, 1160,  115,  115,  228,  115,
     1158,  115, 1151,  115, 1242,  228,  115,  115,  228,  228,
      115,  115,  228, 1401,  115,  115,  194,  194,  115,  196,
      194, 1401, 1160,  115, 1401,  115, 1401,  228, 1151, 1401,
     1242,  228,  201,  115,  228,  228, 1401, 1401, 1401,  203,
      204, 1401,  205,  203,  437,  228,  697,  194,  698,  699,
      697,  698,  700,  228, 1401,  207,  916,  697,  194, 1401,
      699,  697,  701,  921,  697,  194,  702,  699,  697, 1401,
      921,  228,  228,  922, 1401, 1401, 1401, 1401, 1401,  919,
      922, 1401,  916,  193,  194,  194,  195,  196,  194,  195,

      193,  193,  193,  193,  193,  193, 1401,  692,  228,  193,
      197,  193,  193,  193,  198,  919,  228,  923, 1163, 1165,
      697,  194,  698,  699,  697,  698,  700, 1169, 1401,  924,
      228,  228, 1168,  228,  440,  194,  701,  441,  440,  442,
      702,  193,  228,  923, 1163, 1401, 1165, 1401,  697,  194,
      443,  699,  697, 1169,  921, 1401,  228,  228, 1168,  228,
     1401, 1401, 1401,  920,  922, 1401, 1401,  193,  193,  194,
      194,  195,  196,  194,  195,  193,  193,  193,  193,  193,
      193,  691,  692,  691,  193,  197,  193,  193,  193,  198,
      920,  923,  210,  211, 1401,  213,  210, 1401,  203,  204,

      445,  205,  203,  437,  228, 1240, 1401, 1401,  446,  450,
      194, 1232,  452,  450,  207,  228,  193,  923, 1401,  194,
      194,  195,  196,  194,  195,  706, 1401, 1401, 1401, 1401,
      228, 1240,  926,  710, 1401,  197, 1401, 1232,  928,  198,
     1401,  228,  193,  439,  440,  194,  439,  441,  440,  442,
      439,  439,  439,  439,  439,  439,  439,  439,  926,  439,
      443,  439,  439,  439,  439,  928,  194,  194,  195,  196,
      194,  195,  697,  194, 1171,  699,  697, 1401,  921, 1314,
      710, 1166,  197, 1401,  228,  228,  198,  228,  922, 1401,
      228,  439, 1401,  440,  194, 1401,  441,  440,  442,  210,

      211, 1171,  213,  210, 1401, 1314, 1401,  445, 1166,  443,
      228,  228, 1401,  228, 1401,  446,  228,  439,  696,  697,
      194,  698,  699,  697,  698,  700,  696,  696,  696,  696,
      696,  696,  696, 1099,  696,  701,  696,  696,  696,  702,
      115, 1020,  115,  115,  115, 1100,  115,  115, 1170, 1401,
      115, 1233,  115,  115,  228,  228, 1028, 1237, 1256, 1099,
      115,  228,  115,  115,  228,  228,  696,  115, 1020,  115,
      115,  115, 1401,  115,  115, 1170,  115, 1233,  115,  115,
      228,  228, 1028, 1237, 1256, 1401,  115,  228,  115,  115,
      228,  228,  696,  209,  210,  211,  212,  213,  210,  212,

      209,  209,  214,  209,  209,  209,  228,  705, 1234,  209,
      215,  209,  209,  209,  216,  115,  115,  115,  115,  115,
      115,  115,  115, 1173, 1401,  115,  115,  115,  115, 1319,
     1401, 1030,  228, 1029, 1234,  115,  115,  115,  115,  228,
      228,  209,  115,  115,  115,  115,  115,  115,  115,  115,
     1173,  115,  115,  115,  115, 1401, 1319, 1030, 1401, 1029,
     1401,  115,  115,  115,  115,  228,  228,  209,  209,  210,
      211,  212,  213,  210,  212,  209,  209,  214,  209,  209,
      209,  704,  705,  704,  209,  215,  209,  209,  209,  216,
     1031,  115,  115,  115,  115,  115,  115,  115, 1401, 1035,

      115,  115,  115,  115, 1247,  228, 1032, 1238,  228, 1323,
      115,  115,  115,  115,  228,  228,  209, 1031,  115,  115,
      115,  115,  115,  115,  115, 1035,  115,  115,  115,  115,
     1247,  228, 1032, 1238,  228, 1323,  115,  115,  115,  115,
      228,  228,  209,  449,  450,  194,  451,  452,  450,  451,
      449,  449,  449,  449,  449,  449, 1401,  930, 1401,  449,
      453,  449,  449,  449,  454, 1033, 1034,  115,  115,  115,
     1036,  115,  115,  115,  115, 1231, 1401,  115,  115,  115,
      115,  228, 1250, 1246,  228, 1327,  228,  115,  115,  115,
      115,  449, 1033, 1034,  115,  115,  115, 1036,  115,  115,

      115,  115, 1231,  115,  115,  115,  115,  228, 1250, 1246,
      228, 1327,  228,  115,  115,  115,  115,  449,  193,  194,
      194,  195,  196,  194,  195,  193, 1401,  193,  193,  193,
      193,  229,  193, 1401,  193,  197,  193,  193,  193,  198,
      115,  115, 1172,  115,  115,  115, 1230,  115, 1401, 1037,
      115,  115, 1039,  115,  228,  228, 1038,  228,  931,  228,
      115,  115,  228,  115, 1249, 1258, 1401,  115,  115, 1172,
      115,  115,  115, 1230,  115, 1037,  115,  115, 1039,  115,
      228,  228, 1038,  228,  931,  228,  115,  115,  228,  115,
     1249, 1258,  193,  193,  194,  194,  195,  196,  194,  195,

      193, 1401,  193,  193,  193,  193,  229,  193, 1331,  193,
      197,  193,  193,  193,  198, 1040, 1175,  115,  115,  115,
     1401,  115,  115, 1235, 1401,  115, 1041,  115,  115, 1254,
     1401, 1042,  932,  228, 1331,  115,  228,  115,  115,  228,
      228, 1401, 1040, 1175,  115,  115,  115, 1308,  115,  115,
     1235,  115, 1041,  115,  115, 1401, 1254, 1042,  932,  228,
     1401,  115,  228,  115,  115,  228,  228,  193,   92, 1401,
     1401, 1401, 1401, 1308, 1401,   92,   92,   92,   92,   92,
       92,  572,  573,  572,   92,   92,   92,   92,   92,   93,
      115,  115,  115,  115,  115,  115, 1046,  115, 1239, 1401,

     1043,  115,  115,  115, 1045, 1251,  228,  228, 1047, 1263,
      115,  115,  115,  115,  228,  228,   92,  115,  115,  115,
      115,  115,  115, 1046,  115, 1239, 1043,  115,  115,  115,
     1045, 1251,  228,  228, 1047, 1263,  115,  115,  115,  115,
      228,  228,   92,  314,  314, 1401,  314,  314,  314,  315,
      314,  314,  314,  314,  314,  314, 1401, 1022, 1401,  314,
      314,  314,  314,  314,  314, 1044, 1048, 1051,  115,  115,
      115,  115,  115,  115,  115, 1260, 1401,  115,  115,  115,
      115, 1049, 1259,  228,  228, 1270,  228,  115,  115,  115,
      115,  314, 1044, 1048, 1051,  115,  115,  115,  115,  115,

      115,  115, 1260,  115,  115,  115,  115, 1049, 1259,  228,
      228, 1270,  228,  115,  115,  115,  115,  314,  575,  576,
      228,  576,  576,  576,  576,  577,  575,  575,  575,  575,
      575, 1401, 1026, 1401,  575,  575,  575,  575,  575,  578,
      115,  115, 1401, 1401,  115,  115,  228, 1050, 1241, 1401,
      115, 1052,  228,  440,  194, 1355,  441,  440,  442, 1261,
      115,  115,  228,  228, 1271,  228,  575,  115,  115,  443,
     1401,  115,  115, 1050, 1401, 1241,  115, 1052,  228, 1401,
     1401, 1355, 1401, 1401, 1401, 1261,  115,  115,  228,  228,
     1271,  228,  575,   99,  100,  101,  100,  100,  100,  100,

       99,   99,  102,   99,   99,   99,  579,  580,  579,   99,
       99,   99,   99,   99,  103,  115, 1054,  115,  115,  115,
      115,  115,  115, 1401, 1053,  115,  115,  115,  115, 1264,
     1055,  228, 1056,  228, 1316,  115,  115,  115,  115,  228,
      228,   99,  115, 1054,  115,  115,  115,  115,  115,  115,
     1053,  115,  115,  115,  115, 1264, 1055,  228, 1056,  228,
     1316,  115,  115,  115,  115,  228,  228,   99,  319,  320,
     1401,  320,  320,  320,  320,  319,  319,  319,  319,  319,
      319, 1360,  828, 1268,  319,  319,  319,  319,  319,  321,
     1057,  115,  115,  115,  115,  115,  115,  115,  115, 1401,

      228,  115,  115,  115,  115, 1267,  228, 1360, 1272,  228,
     1268,  115,  115,  115,  115,  228,  319, 1057,  115,  115,
      115,  115,  115,  115,  115,  115,  228,  115,  115,  115,
      115, 1267,  228, 1401, 1272,  228, 1401,  115,  115,  115,
      115,  228,  319,  319,  320,  228,  320,  320,  320,  320,
      319,  319,  319,  319,  319,  319,  827,  828,  827,  319,
      319,  319,  319,  319,  321,  115,  115, 1058, 1401,  115,
      115,  228, 1401, 1401, 1401,  115,  115, 1401, 1401,  228,
     1401, 1318,  228, 1401, 1401,  115,  115, 1401,  228, 1401,
     1330,  319,  115,  115, 1058, 1059,  115,  115, 1248,  115,

      115,  115,  115,  115,  115,  228, 1257, 1318,  228,  115,
      115,  115,  115,  228,  228, 1060, 1330,  319, 1401,  115,
      115,  228, 1059, 1269,  115, 1248,  115,  115,  115, 1401,
      115,  115, 1401, 1257,  115,  115,  115,  228,  115,  228,
      228, 1060,  115, 1401,  115,  115,  115,  228,  115, 1401,
     1269,  115,  115, 1401, 1061,  115,  115, 1401,  115, 1401,
      115, 1401,  115,  228, 1401,  115,  228, 1401, 1317,  115,
      115, 1310,  115, 1401,  115,  228,  115, 1401, 1401,  115,
      115, 1061,  228,  115,  115,  228,  115, 1266,  115,  115,
     1063, 1401, 1401,  115,  115, 1317,  115, 1310,  115,  115,

      115,  228,  228,  115, 1062, 1245, 1401,  115,  228,  115,
      115,  228,  115, 1401, 1266, 1064,  115, 1063,  228,  115,
      115,  115,  115,  115, 1401,  115,  115, 1401,  228,  115,
     1062, 1357, 1245, 1401,  228,  115,  115,  115, 1401,  115,
     1065,  115, 1064, 1401,  228,  228,  115,  115, 1262,  115,
      115, 1401, 1401,  115, 1401,  115, 1401,  115, 1357,  115,
      228,  228,  115, 1401,  115,  115,  115, 1065,  115,  115,
     1401,  228,  115,  115,  115, 1262,  115, 1066, 1068, 1401,
      115, 1401,  115,  115,  115,  115,  115,  228, 1401,  115,
      115, 1401, 1401,  115,  115,  115,  115, 1067,  115,  228,

     1401,  115,  228, 1066, 1325, 1068,  115,  228,  115, 1320,
      115,  115, 1401,  115,  115,  115, 1401,  115, 1070, 1401,
      115,  115,  115, 1067,  115,  228, 1069, 1369,  228,  228,
     1325,  115,  115,  228,  115, 1320,  115, 1401,  115,  115,
      115,  115,  115,  115, 1401, 1070,  115,  115, 1071,  115,
      115, 1265, 1069, 1369,  228,  228,  115,  115, 1401,  115,
      115,  115, 1401,  115,  228,  115,  115,  115, 1322,  115,
      115,  115,  115,  115, 1071,  115, 1401,  228, 1265, 1072,
      228,  115,  115,  450,  194,  115,  452,  450,  115,  115,
      228,  228,  115, 1401,  115, 1322,  115,  115,  115,  706,

      115,  228, 1326,  228,  115, 1072,  115,  115, 1073, 1401,
      115, 1401, 1401,  228,  115,  115,  115,  228,  228, 1074,
     1401,  115, 1401, 1401, 1401,  115,  115,  228,  115, 1326,
      115, 1328,  115,  115, 1073, 1075, 1329,  115,  115,  228,
      115,  228,  115,  228,  228, 1074,  228, 1401,  115, 1076,
      115, 1077,  115,  115,  115,  115, 1401,  115, 1328,  115,
      115, 1075, 1329,  115,  115, 1354, 1401,  228, 1401,  228,
      115, 1401,  228,  115,  115, 1078, 1076,  115, 1077,  115,
      115,  115,  228, 1079,  115,  115,  115,  115, 1401,  115,
     1359, 1401, 1354,  115,  228,  115,  115, 1081, 1401,  115,

     1401,  115, 1078,  115,  228,  115,  115,  115,  228,  115,
     1079,  115, 1401, 1309,  115,  115, 1359,  115, 1080,  115,
      228,  115, 1401, 1082, 1081,  115,  228,  115,  115,  115,
      228,  115,  115,  115, 1332, 1311,  115,  115, 1362,  228,
     1309,  115,  228,  115, 1080, 1083, 1401,  115,  228,  115,
     1082,  115,  228,  115,  115,  228, 1401, 1313,  115,  115,
     1332, 1401, 1311,  115, 1362,  228, 1401,  115,  228,  115,
      228,  115, 1083,  115,  228, 1315,  115,  115, 1401,  115,
      115,  228, 1084,  115, 1313,  115, 1401,  115,  228,  115,
      228, 1401, 1085, 1356,  115,  115,  228,  115,  115,  115,

     1401,  115, 1315,  115,  228,  228,  115,  115, 1084,  228,
      115, 1380, 1361,  115,  228,  115,  228,  115, 1085,  115,
     1356, 1086,  115, 1087,  115,  115,  115, 1321,  115,  115,
      228,  228,  115,  115, 1384,  228,  228, 1380, 1361,  115,
      228, 1401,  115,  115, 1401,  228,  115,  115, 1086,  115,
     1087,  115, 1401,  115, 1321,  115,  228,  115,  115,  115,
      115, 1384,  228,  115,  115,  115,  228,  115,  115,  115,
      115,  228, 1088, 1401,  115, 1089, 1401, 1401,  115,  115,
      115,  228,  228,  115, 1324, 1401,  115,  115, 1363, 1333,
      115,  115,  228,  115, 1381,  115,  115,  228, 1088,  115,

     1401, 1089,  228,  115, 1385,  115,  115,  228, 1090,  115,
      228, 1324,  228, 1091, 1363,  228, 1333,  115,  228,  115,
     1381,  115, 1401,  228,  228, 1386,  115,  115,  228,  115,
      115, 1385, 1401,  115, 1090,  115,  228,  115,  228,  115,
     1091,  228, 1092, 1401,  115,  115,  115, 1401,  115,  115,
      228, 1386,  115,  115, 1093, 1401,  115, 1334,  115, 1401,
      115,  228,  115,  115,  115,  115, 1401, 1358, 1094, 1092,
      228, 1401,  115,  115,  115,  115,  115, 1401,  115, 1401,
      228, 1093,  115, 1401, 1334,  115, 1401,  228,  115,  228,
      115, 1401,  115, 1401, 1358, 1094,  228,  115, 1401,  115,

      115,  115, 1401,  115,  228, 1096,  228,  115,  115,  115,
     1401, 1095, 1364,  115, 1401,  228,  228,  115,  115,  115,
      228,  115, 1365, 1401,  115,  115, 1401, 1401,  115,  115,
      228,  115, 1096,  115,  228,  228,  115, 1095, 1364, 1401,
      115,  115,  228,  115, 1401,  115,  228, 1401,  115, 1365,
      697,  194,  115,  699,  697,  115, 1227,  115, 1401, 1401,
      228,  228, 1401, 1401, 1401, 1401,  922,  115,  193,  194,
      194,  195,  196,  194,  195,  193,  193,  193,  193,  193,
      193,  691,  692,  691,  193,  197,  193,  193,  193,  198,
     1401,  697,  194,  698,  699,  697,  698, 1102, 1401, 1366,

     1401, 1401,  697,  194, 1401,  699,  697,  701,  921,  228,
     1387,  702,  228, 1401, 1401, 1401,  193,  576,  922,  576,
      576,  576,  576,  577,  697,  194, 1366,  699,  697, 1401,
      921, 1101, 1401, 1401, 1401,  228, 1387,  578,  228, 1401,
      922, 1401,  193,  439,  440,  194,  439,  441,  440,  442,
      439,  439,  439,  439,  439,  439, 1401, 1098, 1101,  439,
      443,  439,  439,  439,  439,  450,  194,  115,  452,  450,
     1401,  115,  697,  194, 1382,  699,  697,  115,  921, 1401,
     1394,  706, 1178,  228, 1401, 1401, 1401,  115,  922,  228,
      824,  439, 1401, 1401,  115, 1401, 1401, 1100,  115, 1401,

     1401, 1382, 1401,  115, 1401, 1105, 1394, 1401, 1178,  228,
     1401, 1401, 1401,  115, 1401,  228, 1401,  439,  696,  697,
      194,  698,  699,  697,  698,  700,  696,  696,  696,  696,
      696, 1105, 1104, 1401,  696,  701,  696,  696,  696,  702,
      115, 1182,  115,  115,  115,  115, 1183,  115, 1401,  228,
      115,  115,  115,  115, 1401, 1397, 1368,  228,  228, 1401,
      115,  115,  115,  115, 1383, 1401,  696,  115, 1182,  115,
      115,  115,  115, 1183,  115,  228,  115,  115,  115,  115,
     1401, 1397, 1368,  228,  228, 1401,  115,  115,  115,  115,
     1383, 1401,  696,  209,  210,  211,  212,  213,  210,  212,

      209,  209,  214,  209,  209,  209,  704,  705,  704,  209,
      215,  209,  209,  209,  216,  115, 1367,  115,  115,  115,
     1401,  115,  115, 1401, 1184,  115, 1185,  115,  115,  228,
     1392, 1401, 1398, 1186, 1401,  115,  228,  115,  115,  228,
     1401,  209,  115, 1367,  115,  115,  115, 1401,  115,  115,
     1184,  115, 1185,  115,  115,  228, 1401, 1392, 1398, 1186,
     1401,  115,  228,  115,  115,  228, 1401,  209,  449,  450,
      194,  451,  452,  450,  451,  449,  449,  449,  449,  449,
      449, 1401,  930, 1401,  449,  453,  449,  449,  449,  454,
     1187,  115,  115,  115,  115,  115,  115,  115, 1393, 1401,

      115,  115,  115,  115, 1188, 1400, 1401, 1401,  228,  228,
      115,  115,  115,  115, 1401, 1401,  449, 1187,  115,  115,
      115,  115,  115,  115,  115, 1393,  115,  115,  115,  115,
     1188, 1400, 1401, 1401,  228,  228,  115,  115,  115,  115,
     1401, 1401,  449,  449,  450,  194,  451,  452,  450,  451,
      449,  449,  449,  449,  449,  449,  929,  930,  929,  449,
      453,  449,  449,  449,  454,  115,  115,  115,  115,  115,
      115,  115,  115, 1401, 1401,  115,  115,  115,  115, 1401,
     1401, 1189, 1190, 1401, 1401,  115,  115,  115,  115, 1401,
     1401,  449,  115,  115,  115,  115,  115,  115,  115,  115,

     1401,  115,  115,  115,  115, 1401, 1401, 1189, 1190, 1401,
     1401,  115,  115,  115,  115, 1401, 1401,  449,  314,  314,
     1401,  314,  314,  314,  315,  314,  314,  314,  314,  314,
      314, 1401, 1022, 1401,  314,  314,  314,  314,  314,  314,
     1191,  115,  115,  115,  115,  115,  115,  115,  115, 1401,
     1194,  115,  115,  115,  115, 1192, 1195, 1401, 1401, 1401,
     1401,  115,  115,  115,  115, 1401,  314, 1191,  115,  115,
      115,  115,  115,  115,  115,  115, 1194,  115,  115,  115,
      115, 1192, 1195, 1401, 1401, 1401, 1401,  115,  115,  115,
      115, 1401,  314,  314,  314, 1401,  314,  314,  314,  315,

      314,  314,  314,  314,  314,  314, 1021, 1022, 1021,  314,
      314,  314,  314,  314,  314, 1193, 1197,  115,  115,  115,
      115,  115,  115,  115, 1401, 1196,  115,  115,  115,  115,
     1401, 1401, 1198, 1401, 1401, 1401,  115,  115,  115,  115,
     1401,  314, 1193, 1197,  115,  115,  115,  115,  115,  115,
      115, 1196,  115,  115,  115,  115, 1401, 1401, 1198, 1401,
     1401, 1401,  115,  115,  115,  115, 1401,  314,  575,  576,
     1401,  576,  576,  576,  576,  577,  575,  575,  575,  575,
      575, 1401, 1026, 1401,  575,  575,  575,  575,  575,  578,
      115, 1200,  115,  115,  115, 1401,  115,  115, 1401, 1401,

      115, 1199,  115,  115, 1401, 1401, 1401, 1401, 1401, 1401,
      115, 1401,  115,  115, 1401, 1401,  575,  115, 1200,  115,
      115,  115, 1401,  115,  115, 1401,  115, 1199,  115,  115,
     1401, 1401, 1401, 1401, 1401, 1401,  115, 1401,  115,  115,
     1401, 1401,  575,  575,  576, 1401,  576,  576,  576,  576,
      577,  575,  575,  575,  575,  575, 1025, 1026, 1025,  575,
      575,  575,  575,  575,  578,  115,  115,  115,  115,  115,
      115,  115,  115, 1401, 1401,  115,  115,  115,  115, 1401,
     1401, 1401, 1401, 1201, 1401,  115,  115,  115,  115, 1401,
     1401,  575,  115,  115,  115,  115,  115,  115,  115,  115,

     1401,  115,  115,  115,  115, 1401, 1401, 1401, 1401, 1201,
     1401,  115,  115,  115,  115, 1401, 1401,  575,  319,  320,
     1401,  320,  320,  320,  320,  319,  319,  319,  319,  319,
      319,  827,  828,  827,  319,  319,  319,  319,  319,  321,
      115,  115, 1401,  115,  115,  115, 1401,  115, 1401, 1202,
      115,  115, 1203,  115, 1401, 1401, 1204, 1401, 1401, 1401,
      115,  115, 1401,  115, 1401, 1401,  319,  115,  115, 1401,
      115,  115,  115, 1401,  115, 1202,  115,  115, 1203,  115,
      115,  115, 1204, 1401,  115,  115,  115,  115, 1401,  115,
      115,  115,  319,  115,  115, 1401, 1206,  115,  115, 1401,

      115,  115, 1401,  115,  115, 1401, 1205,  115,  115, 1401,
     1401,  115,  115,  115,  115, 1401,  115,  115,  115, 1401,
      115,  115,  115, 1206,  115,  115,  115,  115,  115,  115,
      115,  115, 1205, 1401, 1401,  115, 1401, 1401,  115,  115,
      115,  115, 1401, 1401, 1207,  115, 1401, 1401, 1401,  115,
     1401,  115, 1401,  115,  115, 1401, 1401,  115,  115, 1209,
     1401,  115,  115, 1208,  115,  115, 1401,  115, 1401, 1401,
     1207,  115, 1401,  115, 1401,  115, 1401,  115, 1401,  115,
      115,  115, 1401,  115,  115,  115, 1209,  115,  115, 1208,
     1401, 1401,  115,  115, 1401,  115, 1401,  115, 1401,  115,

     1401, 1401,  115,  115, 1210,  115,  115,  115,  115,  115,
      115,  115,  115, 1401,  115,  115, 1401, 1211,  115,  115,
     1401,  115, 1401, 1401, 1401,  115, 1401, 1401,  115,  115,
     1210, 1401,  115, 1401, 1401,  115,  115, 1401,  115,  115,
     1401,  115, 1212, 1211,  115, 1401,  115, 1401,  115, 1401,
      115,  115, 1401, 1401,  115, 1401,  115, 1401,  115, 1401,
     1214, 1401, 1401, 1401,  115,  115, 1213, 1401, 1401, 1212,
      115, 1401, 1401,  115,  115, 1401, 1401,  115, 1401, 1401,
      115, 1401,  115, 1401,  115,  115, 1401, 1214, 1401,  115,
     1401,  115, 1213,  115, 1401,  115,  115,  115, 1401, 1401,

     1401, 1215, 1401,  115, 1401,  115,  115, 1401, 1401, 1401,
     1401, 1401,  115,  115, 1401, 1401,  115, 1401,  115, 1401,
      115,  115,  115, 1401,  115, 1401,  115, 1215,  115,  115,
      115,  115, 1401, 1401, 1401, 1216,  115, 1401,  115,  115,
     1217, 1401, 1401, 1401,  115,  115,  115, 1401,  115,  115,
      115, 1401,  115,  115,  115, 1401, 1401,  115,  115, 1401,
      115, 1216,  115, 1401,  115, 1401, 1401, 1217,  115, 1401,
      115,  115,  115, 1401,  115,  115,  115, 1401, 1401,  115,
      115, 1218, 1401,  115,  115, 1401,  115,  115, 1401, 1401,
      115, 1401, 1401,  115,  115,  115, 1401,  115, 1401,  115,

     1401,  115, 1401,  115, 1401,  115,  115,  115, 1218, 1401,
      115,  115, 1401, 1401,  115,  115,  115,  115, 1401,  115,
      115, 1401,  115, 1401,  115, 1401,  115,  115, 1401,  115,
      115,  115, 1401, 1401,  115, 1401, 1401, 1401,  115, 1401,
      115,  115, 1401,  115, 1220,  115, 1401,  115,  115,  115,
     1401,  115,  115,  115, 1219,  115,  115, 1401,  115, 1401,
     1401, 1401, 1401, 1401, 1401,  115,  115, 1401,  115, 1221,
     1401, 1220,  115,  115, 1401,  115,  115,  115, 1401,  115,
     1219,  115, 1401,  115,  115, 1401, 1401, 1401, 1401, 1401,
     1401,  115, 1401,  115,  115,  115, 1221,  115,  115,  115,

      115,  115,  115, 1401,  115,  115, 1401,  115,  115,  115,
     1222, 1401, 1223, 1401, 1401,  115, 1401,  115,  115,  115,
     1401, 1401,  115, 1401,  115,  115,  115, 1401,  115,  115,
     1401,  115, 1401,  115,  115,  115, 1222, 1401, 1223,  115,
     1401,  115, 1401,  115,  115,  115, 1401,  115,  115, 1401,
     1401,  115,  115, 1401, 1401,  115, 1401,  115,  115, 1401,
      115, 1401,  115, 1224,  115, 1401,  115,  115,  115, 1401,
      115,  115, 1401, 1225,  115,  115, 1401, 1401,  115,  115,
      115,  115, 1401,  115,  115, 1401, 1401,  115, 1401, 1224,
     1401,  115, 1401,  115,  115, 1401,  115, 1401, 1401, 1225,

     1277, 1401, 1277, 1277, 1277, 1277,  115,  439,  440,  194,
      439,  441,  440,  442,  439,  439,  439,  439,  439,  439,
     1280, 1098, 1401,  439,  443,  439,  439,  439,  439, 1401,
     1401, 1401, 1401,  115, 1401, 1401, 1401,  115,  697,  194,
     1401,  699,  697,  115,  921,  697,  194,  698,  699,  697,
      698,  700, 1401,  115,  922,  439, 1401, 1401, 1401, 1401,
      115,  701, 1401, 1401,  115,  702, 1401, 1401, 1401,  115,
     1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1228,  115,
     1401,  439,  439,  440,  194,  439,  441,  440,  442,  439,
      439,  439,  439,  439,  439, 1097, 1098, 1097,  439,  443,

      439,  439,  439,  439, 1228,  115, 1401,  115, 1401,  115,
     1401,  115, 1401, 1401, 1401,  115, 1401,  115,  924, 1277,
     1401, 1277, 1277, 1277, 1277,  115, 1281,  115, 1401, 1401,
      439, 1401,  115, 1401,  115, 1335,  115, 1401,  115, 1280,
     1401,  115, 1401,  115, 1401, 1401, 1401, 1401, 1401, 1401,
     1401,  115, 1281,  115, 1401, 1401,  439,  696,  697,  194,
      698,  699,  697,  698,  700,  696,  696,  696,  696,  696,
     1401, 1104, 1401,  696,  701,  696,  696,  696,  702,  115,
     1282, 1401,  115,  115,  115, 1401,  115, 1401, 1401,  115,
      115, 1283,  115, 1401, 1401, 1401, 1401, 1401, 1401,  115,

      115, 1401,  115, 1401, 1401,  696,  115, 1282, 1401,  115,
      115,  115, 1401,  115, 1401,  115,  115, 1283,  115, 1401,
     1401, 1401, 1401, 1401, 1401,  115,  115, 1401,  115, 1401,
     1401,  696,  696,  697,  194,  698,  699,  697,  698,  700,
      696,  696,  696,  696,  696, 1103, 1104, 1103,  696,  701,
      696,  696,  696,  702,  115, 1284,  115,  115,  115,  115,
      115,  115, 1401, 1401,  115,  115,  115,  115, 1401, 1401,
     1285, 1401, 1401, 1401,  115,  115,  115,  115, 1401, 1401,
      696,  115, 1284,  115,  115,  115,  115,  115,  115, 1401,
      115,  115,  115,  115, 1401, 1401, 1285, 1401, 1401, 1401,

      115,  115,  115,  115, 1401, 1401,  696,  449,  450,  194,
      451,  452,  450,  451,  449,  449,  449,  449,  449,  449,
      929,  930,  929,  449,  453,  449,  449,  449,  454, 1286,
      115, 1288,  115,  115,  115,  115,  115, 1401, 1287,  115,
      115,  115,  115, 1401, 1401, 1401, 1401, 1401, 1289,  115,
      115,  115,  115, 1401, 1401,  449, 1286,  115, 1288,  115,
      115,  115,  115,  115, 1287,  115,  115,  115,  115, 1401,
     1401, 1401, 1401, 1401, 1289,  115,  115,  115,  115, 1401,
     1401,  449, 1276, 1277, 1401, 1277, 1277, 1277, 1277, 1276,
     1401, 1276, 1276, 1276, 1276, 1279, 1276, 1401, 1276, 1276,

     1276, 1276, 1276, 1280,  115,  115,  115,  115,  115,  115,
      115,  115, 1401, 1401,  115,  115,  115,  115, 1401, 1401,
     1401, 1401, 1291, 1401,  115,  115,  115,  115, 1401, 1401,
     1401,  115,  115,  115,  115,  115,  115,  115,  115, 1401,
      115,  115,  115,  115, 1401, 1401, 1401, 1401, 1291, 1401,
      115,  115,  115,  115, 1401, 1401, 1276,  314,  314, 1401,
      314,  314,  314,  315,  314,  314,  314,  314,  314,  314,
     1021, 1022, 1021,  314,  314,  314,  314,  314,  314, 1290,
      115,  115,  115,  115,  115,  115,  115,  115, 1401, 1401,
      115,  115,  115,  115, 1401, 1401, 1401, 1401, 1401, 1401,

      115,  115, 1293,  115, 1401,  314, 1290,  115,  115,  115,
      115,  115,  115,  115,  115, 1401,  115,  115,  115,  115,
     1401, 1401, 1401, 1401, 1401, 1401,  115,  115, 1293,  115,
     1401,  314,  575,  576, 1401,  576,  576,  576,  576,  577,
      575,  575,  575,  575,  575, 1025, 1026, 1025,  575,  575,
      575,  575,  575,  578,  115,  115, 1294, 1292,  115,  115,
      115, 1401, 1401, 1401,  115,  115,  115, 1401,  115, 1401,
     1401, 1401, 1295, 1401,  115,  115,  115, 1401,  115, 1401,
      575,  115,  115, 1294, 1292,  115,  115,  115,  115, 1401,
      115,  115,  115, 1401, 1401,  115, 1401, 1401, 1401, 1295,

      115,  115,  115,  115,  115, 1401,  575,  115, 1401, 1401,
     1296,  115, 1401,  115,  115,  115, 1401, 1401, 1401, 1401,
     1401,  115, 1401,  115, 1401, 1297, 1401, 1401, 1401,  115,
      115,  115, 1401,  115,  115,  115, 1296,  115,  115,  115,
     1401, 1401,  115,  115, 1401,  115, 1401,  115, 1401,  115,
     1401, 1401, 1297,  115, 1401,  115,  115,  115,  115,  115,
      115,  115,  115, 1401,  115, 1298, 1401, 1401,  115,  115,
     1401,  115, 1401, 1401, 1401,  115, 1401, 1401,  115,  115,
     1401, 1401,  115, 1401, 1401,  115,  115, 1401,  115,  115,
     1299, 1298,  115, 1401,  115, 1401,  115, 1401,  115, 1401,

      115,  115, 1401, 1401,  115, 1401,  115, 1401,  115, 1300,
     1401, 1401, 1401, 1401, 1401,  115,  115, 1299, 1401,  115,
     1401, 1401, 1401,  115,  115, 1401, 1401,  115, 1401, 1401,
     1401, 1301,  115,  115,  115, 1300,  115,  115, 1401, 1401,
      115, 1401,  115,  115, 1401, 1277,  115, 1277, 1277, 1277,
     1277, 1401, 1401,  115, 1401, 1401,  115, 1401, 1301, 1401,
      115, 1335, 1401,  115,  115, 1280, 1401,  115, 1401,  115,
      115, 1401,  115,  115,  115, 1401, 1302,  115, 1401,  115,
      115, 1401,  115,  115, 1401, 1401, 1401, 1401, 1303, 1401,
      115, 1401, 1401,  115, 1401,  115, 1401,  115, 1401,  115,

      115,  115, 1302, 1401,  115,  115,  115, 1401, 1304,  115,
     1401, 1401, 1401,  115, 1303,  115,  115,  115, 1401,  115,
     1401, 1305,  115,  115, 1401,  115,  115, 1401, 1401,  115,
     1401,  115, 1401,  115, 1304,  115, 1401, 1401, 1306, 1401,
      115,  115,  115, 1401,  115,  115, 1401, 1305,  115,  115,
     1307, 1401,  115, 1401,  115, 1401,  115, 1401,  115,  115,
      115,  115,  115, 1401, 1401, 1306,  115, 1401, 1401,  115,
      115,  115,  115, 1401,  115, 1401, 1401, 1307, 1401, 1401,
     1401,  115,  115, 1401,  115, 1401,  115, 1401, 1401,  115,
     1401, 1401, 1401,  115, 1401, 1401,  115, 1401,  115, 1401,

     1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401,  115,  439,
      440,  194,  439,  441,  440,  442,  439,  439,  439,  439,
      439,  439, 1097, 1098, 1097,  439,  443,  439,  439,  439,
      439, 1338,  115,  115, 1340,  115,  115,  115, 1401,  115,
     1401, 1401,  115,  115, 1401,  115, 1339, 1401, 1401, 1401,
     1401, 1401,  115,  115, 1401,  115, 1401,  439, 1338,  115,
      115, 1340,  115,  115,  115, 1401,  115, 1401,  115,  115,
     1401,  115, 1339, 1401, 1401, 1401, 1401, 1401,  115,  115,
     1401,  115, 1401,  439,  696,  697,  194,  698,  699,  697,
      698,  700,  696,  696,  696,  696,  696, 1103, 1104, 1103,

      696,  701,  696,  696,  696,  702,  115, 1341,  115,  115,
      115, 1401,  115,  115, 1401, 1401,  115, 1401,  115,  115,
     1401, 1401, 1401, 1401, 1401, 1401,  115, 1401,  115,  115,
     1401, 1401,  696,  115, 1341,  115,  115,  115, 1401,  115,
      115, 1401,  115, 1401,  115,  115, 1401, 1401, 1401, 1401,
     1401, 1401,  115, 1401,  115,  115, 1401, 1401,  696, 1276,
     1277, 1401, 1277, 1277, 1277, 1277, 1276, 1401, 1276, 1276,
     1276, 1276, 1279, 1276, 1401, 1276, 1335, 1276, 1276, 1276,
     1280, 1342,  115, 1401,  115,  115,  115, 1401,  115, 1401,
     1401,  115,  115, 1343,  115, 1401, 1401, 1401, 1401, 1401,

     1401,  115,  115, 1401,  115, 1401, 1401, 1401, 1342,  115,
     1401,  115,  115,  115, 1401,  115, 1401,  115,  115, 1343,
      115, 1401, 1401, 1401, 1401, 1401, 1401,  115,  115, 1401,
      115, 1401, 1401, 1276, 1276, 1277, 1401, 1277, 1277, 1277,
     1277, 1276, 1401, 1276, 1276, 1276, 1276, 1401, 1276, 1401,
     1276, 1335, 1276, 1276, 1276, 1280,  115,  115,  115, 1401,
      115,  115,  115, 1401, 1401, 1401,  115,  115,  115, 1344,
     1401, 1401, 1401, 1401, 1401, 1401,  115,  115, 1345, 1401,
     1401, 1401, 1401,  115,  115,  115, 1401,  115,  115,  115,
     1401, 1401,  115,  115,  115, 1344, 1401, 1401, 1401, 1401,

     1401, 1401,  115,  115, 1345, 1401, 1401, 1401, 1276, 1276,
     1277, 1401, 1277, 1277, 1277, 1277, 1276, 1276, 1276, 1276,
     1276, 1276, 1276, 1276, 1401, 1276, 1335, 1276, 1276, 1276,
     1280,  115,  115, 1401,  115,  115,  115, 1401,  115, 1401,
     1401,  115,  115, 1346,  115, 1401, 1401, 1401, 1401, 1401,
     1401,  115,  115, 1401,  115, 1401, 1401, 1276,  115,  115,
     1401,  115,  115,  115, 1401,  115, 1401,  115,  115, 1346,
      115,  115,  115, 1401, 1401,  115,  115,  115,  115, 1401,
      115,  115,  115, 1276,  115, 1349, 1401, 1401,  115,  115,
     1401, 1347,  115, 1348,  115,  115, 1401, 1401,  115,  115,

     1401, 1401,  115,  115,  115,  115, 1401,  115,  115, 1401,
     1401,  115, 1349, 1401, 1401,  115,  115, 1347,  115, 1348,
      115,  115, 1350, 1351,  115,  115,  115,  115,  115,  115,
      115,  115,  115,  115,  115,  115, 1401, 1401, 1401, 1401,
     1401, 1401,  115,  115,  115,  115, 1401, 1401, 1401, 1350,
     1351,  115,  115,  115,  115,  115,  115, 1401,  115,  115,
      115,  115,  115,  115, 1401, 1401,  115,  115,  115,  115,
      115,  115,  115,  115, 1353,  115,  115, 1401, 1401,  115,
      115, 1401, 1352,  115, 1401,  115,  115, 1401, 1401,  115,
      115, 1401, 1401,  115,  115,  115,  115, 1401,  115,  115,

     1353, 1401,  115,  115, 1401, 1401,  115,  115, 1352,  115,
     1401,  115,  115, 1401, 1401, 1401, 1401, 1401, 1401, 1401,
     1401,  115,  115, 1276, 1277, 1401, 1277, 1277, 1277, 1277,
     1276, 1276, 1276, 1276, 1276, 1276, 1401, 1371, 1401, 1276,
     1335, 1276, 1276, 1276, 1280,  115,  115,  115,  115,  115,
      115,  115,  115, 1401, 1401,  115,  115,  115,  115, 1401,
     1372, 1401, 1373, 1401, 1401,  115,  115,  115,  115, 1401,
     1401, 1276,  115,  115,  115,  115,  115,  115,  115,  115,
     1401,  115,  115,  115,  115,  115, 1372, 1401, 1373,  115,
     1401,  115,  115,  115,  115,  115, 1374, 1276,  115,  115,

     1401, 1401,  115,  115, 1401,  115, 1401, 1401,  115,  115,
     1401, 1401,  115, 1401, 1401, 1401,  115, 1401,  115, 1375,
     1401,  115, 1401, 1374, 1401,  115,  115, 1401,  115,  115,
      115,  115,  115, 1401,  115,  115, 1401, 1401,  115, 1401,
     1401, 1401, 1401, 1401,  115, 1375, 1401, 1401,  115, 1401,
      115, 1401, 1376, 1401,  115,  115, 1401, 1401, 1401,  115,
      115, 1401,  115,  115,  115, 1377,  115,  115, 1401, 1401,
      115, 1401,  115,  115,  115, 1401, 1401,  115, 1401, 1376,
     1401,  115,  115,  115, 1401, 1401,  115,  115, 1401,  115,
      115,  115, 1377,  115,  115, 1401,  115,  115,  115,  115,

     1401, 1378, 1401, 1401, 1401, 1401, 1401,  115,  115,  115,
     1401,  115,  115, 1401,  115,  115,  115, 1401,  115, 1401,
     1401,  115,  115,  115,  115, 1401, 1379, 1378,  115, 1401,
     1401,  115,  115,  115,  115, 1401,  115, 1401,  115,  115,
      115, 1401,  115,  115,  115, 1401,  115,  115,  115, 1401,
     1401,  115, 1379, 1401, 1401,  115,  115,  115,  115, 1401,
      115, 1401, 1401,  115, 1401, 1401, 1401,  115, 1401, 1401,
      115, 1401,  115, 1401, 1401, 1401, 1401, 1401, 1401, 1401,
     1401, 1401,  115, 1276, 1277, 1401, 1277, 1277, 1277, 1277,
     1276, 1276, 1276, 1276, 1276, 1276, 1401, 1371, 1401, 1276,

     1335, 1276, 1276, 1276, 1280,  115, 1401,  115,  115, 1389,
     1390,  115,  115, 1401, 1401,  115, 1401,  115,  115, 1401,
     1401, 1401, 1401, 1401, 1401,  115, 1401,  115,  115, 1401,
     1401, 1276,  115, 1401,  115,  115, 1389, 1390,  115,  115,
     1401,  115, 1401,  115,  115, 1401, 1401, 1401, 1401, 1401,
     1401,  115, 1401,  115,  115, 1401, 1401, 1276, 1276, 1277,
     1401, 1277, 1277, 1277, 1277, 1276, 1276, 1276, 1276, 1276,
     1276, 1370, 1371, 1370, 1276, 1335, 1276, 1276, 1276, 1280,
      115,  115,  115,  115,  115,  115,  115,  115, 1401, 1401,
      115,  115, 1391,  115, 1401, 1401, 1401, 1401, 1401, 1401,

      115,  115,  115,  115, 1401, 1401, 1276,  115,  115,  115,
      115,  115,  115,  115,  115, 1401,  115,  115, 1391,  115,
      115, 1401, 1401, 1401,  115, 1401,  115,  115,  115,  115,
      115, 1401, 1276, 1401, 1401, 1401, 1401, 1401, 1401, 1401,
      115, 1401, 1401, 1401, 1401, 1401, 1401,  115, 1401, 1401,
     1401,  115, 1401, 1401, 1401, 1401,  115, 1401, 1401, 1401,
     1401, 1401, 1401, 1401, 1401, 1401,  115, 1276, 1277, 1401,
     1277, 1277, 1277, 1277, 1276, 1276, 1276, 1276, 1276, 1276,
     1370, 1371, 1370, 1276, 1335, 1276, 1276, 1276, 1280,  115,
      115, 1401,  115,  115,  115, 1401,  115, 1401, 1401, 1395,

      115, 1396,  115, 1401, 1401, 1401, 1401, 1401, 1401,  115,
      115, 1401,  115, 1401, 1401, 1276,  115,  115, 1401,  115,
      115,  115, 1401,  115, 1401, 1395,  115, 1396,  115, 1401,
      115, 1401, 1401,  115,  115,  115,  115,  115,  115, 1399,
      115, 1276, 1401,  115, 1401, 1401, 1401, 1401, 1401, 1401,
      115, 1401, 1401,  115, 1401, 1401, 1401,  115,  115, 1401,
      115,  115,  115, 1401,  115, 1399,  115, 1401,  115,  115,
     1401, 1401, 1401, 1401, 1401, 1401,  115, 1401,  115,  115,
     1401, 1401, 1401, 1401, 1401,  115, 1401, 1401, 1401,  115,
     1401, 1401, 1401, 1401,  115, 1401, 1401, 1401, 1401, 1401,

     1401, 1401, 1401, 1401,  115,   95,   95,   95,   99,   99,
       99,  193,  193,  193,  195,  195,  195,  202,  202,  202,
      209,  209,  209,  224,  224,  224,  314,  314,  100,  100,
      100,  318,  318,  318,  319,  319,  436,  436,  436,  202,
      202,  202,  439,  439,  439,  209,  209,  209,  212,  212,
      212,  448,  448,  448,  449,  449,  449,  461,  461,  461,
      228,  228,  228,  229,  229,  229,  314,  314,  575,  575,
      579,  579,  579,  320,  320,  581,  581,  691,  691,  691,
      696,  696,  696,  704,  704,  704,  451,  451,  451,  708,
      708,  708,  461,  461,  461,  822,  822,  575,  575,  576,

      576,  825,  825,  579,  579,  579,  826,  826,  826,  827,
      827,  917,  917,  917,  918,  918,  918,  202,  202,  202,
      439,  439,  439,  696,  696,  696,  698,  698,  698,  925,
      925,  925,  212,  212,  212,  704,  704,  704,  927,  927,
      927,  451,  451,  451,  929,  929,  929,  193,  193,  193,
      228,  228,  228, 1021, 1021,  576,  576,  575,  575, 1025,
     1025,  826,  826,  826,  827,  827, 1027, 1027,  195,  195,
      195, 1097, 1097, 1097, 1103, 1103, 1103, 1106, 1106, 1106,
     1179, 1179, 1181, 1181, 1226, 1226, 1226, 1229, 1229, 1229,
     1278, 1278, 1277, 1277, 1276, 1276, 1279, 1279, 1337, 1337,

     1370, 1370, 1388, 1388,   11, 1401, 1401, 1401, 1401, 1401,
     1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401,
     1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401,
     1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401,
     1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401,
     1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401,
     1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401,
     1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401
    } ;

static const flex_int16_t yy_chk[12581] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    3,    4,   13,   13, 1463,
       13,   13,   14,   14,   16,   14,   14,   98,   16,   20,
       20,   20,   25,   25,   25,   95,   27,   20,   27,   95,

     1441,   98,    3,    4,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    7,
        8,    9,   10,   17,   49,   91,    9,   10,   18,   18,
       18,   18,   18,   18,   21,  235,   18,  100,  231,  231,

       21,  240,   22,   22,  100,   21,    7,    8,   18,   22,
       49,   46,   91,   90,   22, 1434,    9,   10,   90,   46,
      313,   46,  235,   46,   46,  231,  231, 1428,  240,   90,
       51,   51,   21,   51,   51,  313,   17, 1417,   46, 1416,
     1411,   22,    9,   10,   23,   46,   51,   46,   90,   46,
       46,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   34,   37,   39,  241,
       34,  265,   39,  232,   90,   37,   34,   37,   39,   34,
      108,  108,  232,  108,   39,  241,   34,   37,   39,  108,
      232,  569,   23,   34,   37,   39,  241,   34,  265,   39,

      232,   37,   34,   37,   39,   34,  110,  110,  232,  110,
       39,  241,   34,   37,   39,  110,  232,  569,   23,   28,
       94,   94, 1405,   94,   94, 1402,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   29,   29,   29,  252,   52,   52,

       29,   52,   52,   29,  315,   29,   29,  252, 1336,   29,
       29,  322,   29,  236,   52,  823,   29,  322, 1277,  315,
     1180,   29,   29,   29,  252, 1023,  268,   29,  105,   29,
      236,   29,   29,  252,  105,   29,   29,  277,   29,  105,
      236,   35,   29,   30,  234,   35,  239,   30,  238,   35,
       30,   30,  238,  268,   30,   35,  236,   30,  239,  234,
       30,  295,  576,   30,  277,   35,  105,   30,   35,  314,
       30,  234,   35,  239,   30,  238,   35,   30,   30,  238,
       30,   35,  823,   30,  239,  234,   30, 1180,  295,   30,
      114,   35,   38,   30,   31,   43,   38,   40,   31,   43,

       38,   40,   31,  253,  323,   43,   38,   40,   31,  253,
      323,   31,  719,   40,   31,   43,   38,   40,   31,   38,
      308,   31,   43,   38,   40,   31,   43,   38,   40,   31,
      253,   43,   38,   40,   31,  113,  253,   31,  719,   40,
       31,   43,   38,   40,   31,   32,   32,  308,   53,   53,
       32,   53,   53,   32,  326,   32,   32,  112,   48,  102,
      326,   48,   48,  107,   53,   32,   32,   97,   48,  107,
      327,   92,   32,   32,  107,  246,  327,   32,   48,   32,
       26,   32,   32,   54,   54,   48,   54,   54,   48,   48,
      246,   32,   32,   33,   48,   24,   19,   33,  264,   54,

       33,  107,  246,   33,   48,   12,   33,   50,   50,   50,
       50,   50,   50,   33,   47,  582,  246,  264,   47,   11,
       33,  582,   47,   50,   33,  264,   33,   50,   47,   33,
       55,   55,   33,   55,   55,   55,  258,    0,   47,   33,
       36,   47,   36,  264,  463,   47,   55,    0,   36,   47,
       36,  258,   73,  237,   47,   36,   73,  464,   76,    0,
       36,    0,   73,  258,   47,   73,   76,   36,   76,   36,
      237,  463,   73,  245,   36,  245,   36,  258,   76,   73,
      237,   36,    0,   73,  464,   76,   36,   41,   73,   41,
        0,   73,   76,    0,   76,   41,  237,   41,   73,   41,

      245,   41,  245,  466,   76,    0,    0,   41,   58,   58,
       58,   58,   58,   58,   41,  104,   41,  104,  104,  104,
      104,   41,  720,   41,   58,   41,  109,   41,   58,    0,
      466,  310,  109,   41,   42,  104,  310,  109,  106,  106,
      728,  583,   42,   42,   42,  106,   42,  583,  720,   42,
      106,   57,   57,   57,   57,   57,   57,  247,  242,   57,
      242,   42,  242,  310,  109,    0,  728,   57,   42,   42,
       42,   57,   42,  247,  247,   42,   44,  106,   44,  467,
        0,   44,   44,    0,  247,  242,   44,  242,   44,  242,
       44,   56,   56,   56,   56,   56,   56,    0,   44,  247,

      247,  249,    0,   44,    0,   44,  467,   56,   44,   44,
      276,   56,   44,  276,   44,    0,   44,  249,   63,   63,
       63,   63,   63,   63,   44,   45,    0,   74,  249,   45,
      266,   74,   45,   45,   63,   74,  266,  276,   63,   45,
      276,   74,   45,  249,  325,  325,    0,  325,    0,   45,
      739,   74,   45,  325,   74,    0,   45,  266,   74,   45,
       45,  250,   74,  266,   56,   45,    0,   74,   45,   59,
       59,   59,   59,   59,   59,   45,  739,   74,    0,  250,
      470,   59,   59,   59,  288,   59,  288,    0,  250,   59,
       60,   60,   60,   60,   60,   60,    0,    0,   64,   64,

       64,   64,   64,   64,   60,  250,   60,  470,    0,  477,
       60,  288,  743,  288,   64,   60,   64,   64,   64,   65,
       65,   65,   65,   65,   65,   89,   89,    0,   89,   89,
        0,  491,    0,    0,   89,   65,  477,    0,  743,   65,
        0,    0,   60,   61,   61,   61,   61,   61,   61,   66,
       66,   66,   66,   66,   66,  270,   61,   61,  491,   61,
      255,  255,  499,   61,   89,   66,  270,   66,   61,   66,
        0,   99,   99,   99,   99,   99,   99,  195,  195,   99,
      195,  195,  270,    0,    0,    0,    0,  255,  255,  499,
       89,   99,  270,  195,    0,   61,   62,   62,   62,   62,

       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   77,   78,
       79,   82,   77,   78,   79,   82,   77,  254,    0,   78,
       79,   82,   77,  502,    0,   78,   79,  521,    0,   78,
       79,   82,   77,  254,   62,   77,   78,   79,   82,   77,
       78,   79,   82,   77,  254,   78,   79,   82,   77,    0,
      502,   78,   79,    0,  521,   78,   79,   82,   77,  254,
       62,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,

       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   68,   68,   68,  269,
      136,  251,   68,  136,    0,   68,  744,   68,   68,  136,
      269,   68,   68,  251,   68,  269,  136,    0,   68,    0,
        0,    0,    0,   68,   68,   68,  269,  136,  251,   68,
      136,   68,  744,   68,   68,  136,  269,   68,   68,  251,
       68,  269,  136,   86,   68,   69,  243,   86,  260,   69,

      523,   86,   69,   69,  256,    0,   69,   86,  243,   69,
      256,    0,   69,  260,  243,   69,  260,   86,    0,   69,
       86,  256,   69,  243,   86,  260,   69,  523,   86,   69,
       69,  256,   69,   86,  243,   69,    0,  256,   69,  260,
      243,   69,  260,   86,  259,   69,   70,  256,   87,  115,
       70,   87,   87,  261,   70,  570,  259,  115,   87,  115,
       70,  115,  714,   70,  746,  261,   70,  570,   87,  714,
       70,  259,    0,   70,    0,   87,  115,   70,   87,   87,
      261,   70,  259,  115,   87,  115,   70,  115,  714,   70,
      746,  261,   70,  570,   87,  714,   70,   71,   71,  257,

      117,  495,   71,  117,    0,   71,  742,   71,   71,  262,
        0,  117,  742,  117,  495,  117,  257,   71,   71,  201,
      201,  262,  201,  201,   71,   71,  257,  117,  495,   71,
      117,   71,  742,   71,   71,  201,  262,  117,  742,  117,
      495,  117,  257,   71,   71,   72,    0,  262,  754,   72,
      297,    0,   72,  118,    0,   72,  297,    0,   72,  119,
        0,  118,    0,  118,  755,   72,    0,  119,    0,  119,
      304,    0,   72,  118,  754,  119,   72,  297,   72,  119,
      118,   72,    0,  297,   72,  304,  119,  118,  120,  118,
      755,   72,   75,  119,   75,  119,  120,  304,  120,  118,

       75,  119,   75,    0,    0,  119,  761,   75,  120,  120,
        0,  304,   75,  194,  194,  120,  194,  194,  524,   75,
        0,   75,  120,    0,  120,    0,   75,  141,   75,  194,
      141,  476,  761,   75,  120,  120,  141,  121,   75,   80,
      121,   80,    0,  141,  763,  524,  476,   80,  121,   80,
      121,   80,  121,   80,  141,    0,  194,  141,  476,   80,
        0,  126,  141,    0,  121,  126,   80,  121,   80,  141,
      763,  126,  476,   80,  121,   80,  121,   80,  121,   80,
        0,  126,  194,  127,    0,   80,   81,  127,  126,  285,
       81,  273,  126,  127,  285,    0,   81,  126,    0,   81,

      273,    0,   81,  127,    0,    0,   81,  126,  196,  196,
      127,  196,  196,   81,  127,  765,  285,   81,  273,  127,
        0,  285,   81,  717,  196,   81,  273,  717,   81,  127,
      533,  122,   81,   83,  122,   83,  272,  272,   83,   83,
      123,  765,  122,   83,  122,   83,  122,   83,  123,  717,
      123,  196,  123,  717,  123,   83,  535,  533,  122,  767,
       83,  122,   83,  272,  272,   83,   83,  123,  122,   83,
      122,   83,  122,   83,  123,  274,  123,  196,  123,  771,
      123,   83,   84,  535,  128,  767,   84,    0,  128,   84,
       84,    0,  274,  759,  128,  274,   84,  759,  128,   84,

      124,    0,  274,    0,  128,  771,   84,    0,  124,   84,
      124,  128,  124,   84,  124,  128,   84,   84,  274,  759,
      128,  274,   84,  759,  128,   84,  772,  124,  137,  289,
      128,  137,   84,   85,  124,  541,  124,  137,  124,  289,
      124,   85,  774,   85,  137,   85,  137,  541,   85,  125,
      125,    0,  772,   85,    0,  137,  289,  125,  137,  125,
       85,  125,  541,  137,    0,  289,    0,   85,  774,   85,
      137,   85,  137,  541,   85,  155,  125,  125,  155,   85,
       88,  279,  279,  125,  155,  125,   88,  125,   88,    0,
       88,  155,   88,   88,  546,  193,  193,  193,  193,  193,

      193,    0,  155,    0,    0,  155,    0,   88,  279,  279,
      155,  193,   88,    0,   88,  193,   88,  155,   88,   88,
       93,  546,    0,    0,    0,  551,    0,   93,   93,   93,
       93,   93,   93,   93,   93,  563,   93,   93,   93,   93,
       93,   93,  129,  130,  132,  138,  129,  130,  132,  138,
      129,  275,  551,  130,  132,  138,  129,  481,    0,  130,
      275,  275,  563,  130,  132,  138,  129,  481,   93,  129,
      130,  132,  138,  129,  130,  132,  138,  129,  275,  130,
      132,  138,  129,    0,  481,  130,  275,  275,    0,  130,
      132,  138,  129,  481,   93,  103,  103,  103,  103,  103,

      103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
      133,  103,  103,  103,  103,  103,  103,    0,  133,    0,
      133,    0,  133,    0,  145,  139,  496,  233,  233,  139,
      142,    0,  145,  139,  145,  139,  145,  133,  142,  496,
      142,  473,    0,  103,  133,  139,  133,  473,  133,  233,
      142,  145,  139,  496,  233,  233,  139,  142,  145,  139,
      145,  139,  145,    0,  142,  496,  142,    0,  473,  103,
      111,  139,    0,    0,  473,  233,  142,  111,  111,  111,
      111,  111,  111,  111,  111,  776,  111,  111,  111,  111,
      111,  111,  140,  143,  144,  146,  140,  143,  144,  146,

      267,    0,  140,  143,  144,  146,  515,    0,  143,  144,
      515,  776,  140,  143,  144,  146,  267,  267,    0,  140,
      143,  144,  146,  140,  143,  144,  146,  267,  140,  143,
      144,  146,    0,  515,  143,  144,    0,  515,  140,  143,
      144,  146,  267,  267,  111,  116,  282,  282,    0,  284,
        0,    0,  116,    0,  116,  116,  116,  116,  284,  116,
      147,  116,  116,  116,  116,  116,  116,    0,  147,    0,
      147,  784,  147,  282,  282,  147,  284,  202,  202,  148,
      202,  202,  202,  148,  284,  296,  290,  147,    0,  148,
      291,  291,    0,  202,  147,  290,  147,  784,  147,  148,

        0,  147,    0,  296,  149,  324,  148,    0,  149,    0,
      148,  324,  296,  290,  149,  148,  324,  291,  291,  116,
      131,  290,    0,    0,  149,  148,  131,  131,  131,  296,
      131,  149,  131,  206,  206,  149,  206,  206,  206,  293,
      149,  293,    0,  324,  785,    0,    0,  131,  154,  206,
      149,  154,  131,  131,  131,    0,  131,  154,  131,  134,
      298,  298,  472,    0,  154,  154,  293,  134,  293,  134,
      785,  134,  134,  134,  507,  154,  207,  207,  154,  207,
      207,  207,  472,  154,  507,    0,  134,  298,  298,  472,
      154,  154,  207,  134,  299,  134,  299,  134,  134,  134,

      135,  507,  151,  135,    0,    0,  151,    0,  472,  135,
      507,  135,  151,  135,    0,  135,  135,  789,    0,  151,
      150,  299,  151,  299,  150,    0,  307,  135,  150,  151,
      135,  307,  795,  151,  150,  135,  152,  135,  151,  135,
      152,  135,  135,  789,  150,  151,  152,  150,  151,  153,
      263,  150,  263,  153,    0,  150,  152,  303,  795,  153,
      150,  307,  156,  152,  263,  156,    0,  152,    0,  153,
      150,  156,  152,  156,  303,  511,  153,  263,  156,  263,
      153,  511,  152,  159,  303,  153,  157,  307,    0,  156,
      263,  159,  156,  159,  157,  153,  157,  156,  157,  156,

      303,  797,  511,  159,  156,    0,    0,    0,  511,    0,
      159,  168,  506,  157,  287,  168,  287,  159,  800,  159,
      157,  168,  157,  506,  157,  158,  160,  797,  287,  159,
      158,  168,  158,  158,  160,  158,  160,  158,  168,  506,
        0,  287,  168,  287,  800,    0,  160,  168,  801,  506,
      309,    0,  158,  160,  287,  309,  158,  168,  158,  158,
      160,  158,  160,  158,    0,  808,  309,  162,  478,  292,
      163,  482,  160,  161,  801,  162,  162,  162,  163,  292,
      163,  161,  163,  161,  478,  309,    0,  162,  482,  161,
      292,  808,  161,  161,  162,  478,  292,  163,  482,  818,

      161,  162,  162,  162,  163,  292,  163,  161,  163,  161,
      478,  309,  164,  162,  482,  161,  292,    0,  161,  161,
      164,    0,  164,    0,  164,  165,  818,    0,    0,  165,
        0,  479,    0,  166,    0,  165,    0,    0,    0,  164,
      165,  166,    0,  166,  812,  165,  164,  479,  164,  301,
      164,  301,  165,  166,  167,  171,  165,  509,  479,  167,
      166,  165,  167,  171,  167,  171,  165,  166,  509,  166,
      812,  165,  819,  479,  167,  171,  301,  819,  301,  166,
      169,  167,  171,  169,  509,    0,  167,  169,  167,  171,
      167,  171,    0,  169,  509,  180,  278,    0,  278,  180,

      167,  171,  813,  169,  819,  180,    0,  169,  212,  212,
      169,  212,  212,  278,  169,  180,  212,  199,  199,  169,
      199,  199,  180,  278,  212,  278,  180,  815,  813,  169,
      170,  180,  172,  199,    0,  170,  172,  474, 1018,  278,
      172,  180,  172,  170,    0,  170,  474,  170,  170,    0,
        0,  170,  172,  815,  302,    0,  302,  170,  492,  172,
      199,  280,  170,  172,  474, 1018,  172,  280,  172,  170,
      280,  170,  474,  170,  170,  492,  174,  170,  172,  173,
      174,  302,  300,  302,  174,  492,  199,  173,  280,  173,
      174,  300,    0,  173,  280,  173,  280,  300,  816,  173,

      174,  492,    0,  174,  175,  468,  173,  174,  175,  300,
      468,  174,  175,  173,    0,  173,  174,  300,  175,  173,
      462,  173,  462,  300,  816,  173,  174,    0,  175,    0,
      176,  175,  468,  177,  176,  175,  545,  468,  176,  175,
      176,  177,    0,  177,  175,    0,  178,  462,  178,  462,
      176,    0,    0,  177,  175,  545,  178,  176,  178,    0,
      177,  176,    0,  545,  176,  519,  176,  177,  178,  177,
        0,  519,  465,  178,  465,  178,  176,  179,  480,  177,
      181,  545,  178,  182,  178,  179,  179,  179,  181,  181,
      181,  182,  519,  182,  178,    0,  480,  179,  519,  465,

      181,  465,    0,  182,  179,  480,  469,  181,  469,  510,
      182,  179,  179,  179,  181,  181,  181,  182,    0,  182,
      183,  184,  480,  179,  185,  184,  181,  510,  183,  182,
      183,  184,  185,  469,  185,  469,  510,  183,  805,    0,
      183,  184,  805,    0,  185,  186,    0,  183,  184,  186,
        0,  185,  184,  510,  183,  186,  183,  184,  185,  484,
      185,  484,    0,  183,  805,  186,  183,  184,  805,  187,
      185,  724,  186,  724,    0,    0,  186,  187,    0,  187,
      188,  186,  725,  187,  188,    0,  484,  725,  484,  187,
      188,  186,    0,  932,  189,    0,  187,  724,  189,  724,

      188,  483,  190,  187,  189,  187,  190,  188,  725,  187,
        0,  188,  190,  725,  189,  187,  188,  190,  489,  932,
      489,  189,  190,  483,  191,  189,  188,  343,  483,  190,
      189,    0,  191,  190,  191,  343,  191,  343,  190,  343,
      189,  192,    0,  190,  192,  489,  548,  489,  190,  483,
      192,  191,    0,    0,  343,    0,    0,  192,  191,  294,
      191,  343,  191,  343,  934,  343,  548,  564,  192,  294,
      294,  192,    0,  548,    0,    0,  192,  197,  197,  197,
      197,  197,  197,  192,    0,    0,  294,  564,    0,    0,
      934,    0,  548,  197,  564,  294,  294,  197,  198,  198,

      198,  198,  198,  198,  198,  198,  198,  198,  198,  198,
      198,  198,  198,  564,  198,  198,  198,  198,  198,  198,
      200,  200,  935,  200,  200,  203,  203,    0,  203,  203,
      203,  204,  204,    0,  204,  204,  200,    0,    0,  205,
      205,  203,  205,  205,  205,    0,  198,  204,  935,  209,
      209,  209,  209,  209,  209,  205,  271,  209,  490,  498,
      490,  498,    0,  200,  271,  209,  271,  271,  203,  209,
      769,  769,  198,    0,  204,  208,  208,  208,  208,  208,
      208,  208,  205,  271,    0,  490,  498,  490,  498,  200,
      271,  208,  271,  271,  203,  208,  769,  769,  210,  210,

      204,  210,  210,    0,    0,    0,  210,    0,  205,  211,
      211,    0,  211,  211,  210,  213,  213,    0,  213,  213,
        0,    0,    0,  213,  941,  211,  435,  435,    0,  435,
      435,  213,    0,  214,  214,  214,  214,  214,  214,    0,
        0,  210,  435,  215,  215,  215,  215,  215,  215,  214,
      941,  215,  211,  214,  715,  435,    0,  715,  213,  215,
        0,  437,  437,  215,  437,  437,  437,  210,    0,    0,
        0,    0,    0,    0,  942,    0,    0,  437,  211,    0,
      715,  437,  435,  715,  213,  216,  216,  216,  216,  216,
      216,  216,  216,  216,  216,  216,  216,  216,  216,  216,

      942,  216,  216,  216,  216,  216,  216,  217,  217,  217,
      217,  217,  217,    0,  218,  218,  218,  218,  218,  218,
      281,  493,  281,  217,  735,    0,  281,  217,  218,  735,
      218,    0,  281,  216,  218,  729,    0,  729,  493,  218,
      221,  221,  221,  221,  221,  221,    0,  281,  493,  281,
      735,  221,  221,  281,  221,  735,  221,  471,  281,  216,
      221,  729,  471,  729,  493,    0,  218,  219,  219,  219,
      219,  219,  219,    0,  220,  220,  220,  220,  220,  220,
      219,  219,  248,  219,  471,  248,    0,  219,  220,  471,
      220,  248,  219,    0,  220,    0,  949,    0,  248,  220,

      222,  222,  222,  222,  222,  222,    0,  445,  445,  248,
      445,  445,  248,  486,  222,  529,  222,  248,  486,  219,
      222,  529,  949,  445,  248,  222,  220,  223,  223,  223,
      223,  223,  223,  451,  451,    0,  451,  451,  223,  223,
      486,  223,  529,  223,    0,  486,    0,  223,  529,  451,
        0,    0,  222,  224,  224,  224,  224,  224,  224,  224,
      224,  224,  224,  224,  224,  224,  224,  224,    0,  224,
      224,  224,  224,  224,  224,  225,  225,  225,  225,  225,
      225,  226,  226,  226,  226,  226,  226,  494,  494,    0,
        0,  225,    0, 1019,  500,  225, 1019,  226,    0,    0,

      952,  226,  227,  227,  227,  227,  227,  227,  439,  439,
      500,  439,  439,  439,  494,  494,  306,  306,  227,  306,
      306,  500,  227, 1019,  439,  306,  952,  224,  228,  228,
      228,  228,  228,  228,  228,  228,  500,  228,  228,  228,
      228,  228,  228,  244,  228,  228,  228,  228,  228,  228,
      286,    0,  244,  244,  244,  306,  244,  305,    0,  286,
      305,  504,  488,  504,    0,  286,  305,  286,  488,    0,
      244,  488,  731,  305,  305,  731,    0,  286,  244,  244,
      244,  306,  244,    0,  305,  286,    0,  305,  504,  488,
      504,  286,  305,  286,    0,  488,    0,  488,  731,  305,

      305,  731,  228,  229,  229,  229,  229,  229,  229,  229,
      229,    0,  229,  229,  229,  229,    0,  229,    0,  229,
      229,  229,  229,  229,  229,  316,    0,  316,  316,  316,
      316,  316,  319,  956,  319,  319,  319,  319,  442,  442,
      329,  442,  442,  442,  329,  316,  505,    0,  505,    0,
      329,    0,  319,    0,  442,    0,    0,    0,  442,  956,
      329,    0,    0,    0,    0,    0,    0,  329,    0,    0,
        0,  329,    0,  505,    0,  505,  329,  229,  230,  230,
      230,  230,  230,  230,  230,  230,  329,  230,  230,  230,
      230,  230,  230,  962,  230,  230,  230,  230,  230,  230,

      330,  331,  230,  332,  330,  331,  362,  332,    0,    0,
      330,  331,  786,  332,  362,    0,  362,  786,  362,  962,
      330,  331,    0,  332,    0,    0,    0,  330,  331,  230,
      332,  330,  331,  362,  332,  501,  330,  331,  786,  332,
      362,  333,  362,  786,  362,  333,  330,  331,  497,  332,
      501,  333,  230,  283,  503,  283,  516,    0,  283,  334,
        0,  333,  501,  334,    0,  497,  283,    0,  333,  334,
      503,  283,  333,  516,  283,  497,  501,  333,    0,  334,
      283,  503,  283,  516,    0,  283,  334,  333,    0,    0,
      334,  497,  283,  527,    0,  334,  503,  283,    0,  516,

      283,  311,    0,  335,  311,  334,  335,  335,    0,  527,
      311,  446,  446,  335,  446,  446,  311,  311,  311,  446,
      527,  438,  438,  335,  438,  438,  438,  446,  311,    0,
      335,  311,  965,  335,  335,  527,  311,  438,    0,  335,
        0,    0,  311,  311,  311,  312,    0,    0,    0,  335,
      438,    0,  312,  312,  312,  312,  312,  312,  965,  312,
        0,  312,  312,  312,  312,  312,  312,  336,  337,  485,
      338,  336,  337,  338,  338,  336,  553,  438,  337,  966,
      338,  336,  508,    0,  485,  485,  508,    0,  337,  553,
      338,  336,  508,  312,  336,  337,  485,  338,  336,  337,

      338,  338,  336,  553,  337,  966,  338,  336,    0,  508,
      485,  485,    0,  508,  337,  553,  338,  336,  508,  312,
      318,  318,  318,  318,  318,  318,  318,  318,  318,  318,
      318,  318,  318,  967,  318,    0,  318,  318,  318,  318,
      318,  318,  339,  340,    0,  341,  339,  340,  341,  512,
      522,    0,  339,  340,  341,  344,    0,  512,  344,  967,
      339,  341,  339,  340,  344,  802,  802,  522,  318,  339,
      340,  344,  341,  339,  340,  341,  512,  522,  339,  340,
      341,    0,  344,  512,  969,  344,  339,  341,  339,  340,
      344,  802,  802,  522,  318,  321,  321,  344,  321,  321,

      321,  321,  321,  321,  321,  321,  321,  321,  321,  321,
      969,  321,  321,  321,  321,  321,  321,  342,    0,  345,
      346,  342,  345,  346,  525,  536,    0,  342,  345,  346,
      363,    0,  342,  525,  536,  345,  346,  342,  363,  738,
      363,  738,  363,  321,  342,    0,  345,  346,  342,  345,
      346,  525,  536,  342,  345,  346,    0,  363,  342,  525,
      536,  345,  346,  342,  363,  738,  363,  738,  363,  321,
      328,  747,    0,  747,    0,    0,    0,  328,  328,  328,
      328,  328,  328,  328,  328,  547,  328,  328,  328,  328,
      328,  328,  347,  348,  350,  347,  348,  747,  350,  747,

      547,  347,  348,  348,  350,    0,    0,    0,  347,  348,
      347,    0,  547,    0,  350,  349,    0,    0,  349,  347,
      348,  350,  347,  348,  349,  350,  547,  347,  348,  348,
      350,  349,  349,  517,  347,  348,  347,  517,  716,  351,
      350,  561,  349,  351,  328,  349,  352,  351,    0,  352,
      349,  716,    0,  351,    0,  352,  561,  349,  349,  368,
      517,  352,  352,  351,  517,  716,  351,  368,  561,  368,
      351,  368,  528,  352,  351,  353,  352,  716,  353,  351,
      353,  352,  561,  528,  353,    0,  368,  352,  352,  351,
        0,  353,  354,  368,  537,  368,  354,  368,    0,  528,

      354,    0,  353,  537,  355,  353,  354,  353,  355,  528,
      353,  355,    0,    0,  355,    0,  354,  353,  513,  354,
      513,  537,  356,  354,  355,  567,  356,  354,    0,  537,
      356,  355,  354,  567,  357,  355,  356,  355,  357,  518,
      355,  518,  354,    0,  357,  513,  356,  513,    0,  356,
      355,    0,  567,  356,  357,  358,    0,  356,  358,  567,
        0,  357,  356,    0,  358,  357,  518,  520,  518,  520,
      357,  358,  356,  450,  450,  359,  450,  450,  359,  526,
      357,  526,  358,    0,  359,  358,  530,  532,  530,  450,
      358,  359,  359,    0,  520,  360,  520,  358,  360,  538,

        0,  538,  359,    0,  360,  359,  526,  972,  526,  532,
      359,  360,  360,  530,  532,  530,  450,  359,  359,  361,
      361,    0,  360,  361,    0,  360,  538,    0,  538,  361,
      360,  364,    0,  972,    0,  532,  361,  360,  360,  364,
        0,  364,  450,  364,    0,  364,  361,  361,  531,    0,
      361,    0,    0,  365,    0,  361,  366,  365,  364,  531,
      366,  367,  361,  365,  367,  364,  366,  364,    0,  364,
      367,  364,    0,  365,    0,  531,  366,  367,  447,  447,
      365,  447,  447,  366,  365,  531,  447,  366,  367,  365,
        0,  367,  366,  973,  447,  369,  367,  370,  369,  365,

      370,    0,  366,  367,  369,    0,  370,  447,    0,  753,
        0,  369,    0,  370,  975,  371,  514,  371,  514,  973,
      371,    0,  369,  753,  370,  369,  371,  370,  514,  980,
      369,  372,  370,  371,  447,  372,  753,  369,  373,  370,
      975,  372,  371,  514,  371,  514,  373,  371,  373,  753,
      373,  372,  371,  722,  514,  980,  374,    0,  372,  371,
      722,    0,  372,  374,  374,  373,  374,  372,  374,    0,
      376,    0,  373,    0,  373,  987,  373,  372,  376,  722,
      376,    0,  376,  374,  452,  452,  722,  452,  452,  374,
      374,  557,  374,    0,  374,  375,  375,  376,    0,  540,

      452,  987,  375,  375,  376,  375,  376,  375,  376,  377,
      378,    0,    0,  557,  378,    0,  540,  377,  557,  377,
      378,  377,  375,  375,  377,  988,  540,  452,  375,  375,
      378,  375,    0,  375,  379,    0,  377,  378,  379,  557,
      379,  378,  540,  377,  379,  377,  378,  377,  380,    0,
      377,  988,  380,  452,  379,    0,  378,    0,  380,    0,
        0,  379,    0,    0,  554,  379,  379,    0,  380,    0,
      379,    0,  381,  385,    0,  380,  381,  385,    0,  380,
      379,  554,  381,  385,  380,  382,  383,  382,  549,  382,
      383,  554,  381,  385,  380,  382,  383,  549,    0,  381,

      385,  383,    0,  381,  385,  382,  383,  554,  381,  385,
      991,    0,  382,  383,  382,  549,  382,  383,  381,  385,
      997,  382,  383,  549,  384,  386,  384,  383,  384,  386,
        0,  382,  383, 1002,  384,  386,  991,  387,  388,    0,
        0,  387,  388,    0,  384,  386,  997,  387,  388,  566,
        0,  384,  386,  384,  566,  384,  386,  387,  388, 1002,
      384,  386,  389,    0,  387,  388,  389,    0,  387,  388,
      384,  386,  389,  387,  388,  390,  566,  389,    0,  390,
        0,  566,  389,  387,  388,  390,  809,  391,    0,  389,
     1003,  391,    0,  389,    0,  390,    0,  391,  389,    0,

      809,  392,  390,  389,  392,    0,  390,  391,  389,    0,
      392,  390,    0,  809,  391,  393, 1003,  392,  391,  393,
      539,  390,  539,  391,    0,  393,  809,  736,  392,  394,
        0,  392,  394,  391, 1006,  393,  392,    0,  394,  543,
      395,  543,  393,  392,  736,  394,  393,  539,  395,  539,
      395,  393,  395,  396,  736,  748,  394,  396,    0,  394,
     1006,  393,    0,  396,  394,  397,  543,  395,  543,  397,
      736,  394,  748,  396,  395,  397,  395,  399,  395,  552,
      396,  399,  748,  398,  396,  397, 1007,  399,  552,  396,
        0,  398,  397,  398, 1011,  398,  397,  399,  748,  396,

      400,  397,    0,  400,  399,    0,  552,    0,  399,  400,
      398,  397, 1007,  399,  552,    0,  400,  398,    0,  398,
     1011,  398,    0,  399,    0, 1017,    0,  400,  555,  544,
      400,  544,    0,  443,  443,  400,  443,  443,  443,  555,
        0,  402,  400,  401,  402,  403,  401,  732,  403,  443,
      402, 1017,  401,  401,  403,  555,  544,  402,  544,  401,
        0,  403,  401,  732,  550,  555,  550,  556,  402,  556,
      401,  402,  403,  401,  732,  403,  402, 1107,  401,  401,
      403,  404,  405,  402,  404,  401,  405,  403,  401,  732,
      404,  550,  405,  550,  556, 1111,  556,  404,  560,    0,

      560,    0,  405, 1107,  718,    0,  406,    0,  404,  405,
      406,  404,  780,  405,  406,    0,  404,  718,  405, 1115,
      406, 1111,  487,  404,  487,  560,  487,  560,  405,  780,
      406,  718,  407,  406,  408,    0,  407,  406,  408,  780,
        0,  406,  407,  718,  408, 1115,  406,  407,    0,  487,
        0,  487,  407,  487,  408,  780,  406,    0,  475,  407,
      475,  408,  409,  407,  534,  408,  409,    0,  407,  409,
      408,    0,  409,  407,  534,  475,  737,    0,  407,  737,
      408, 1116,  409,  534,  410,  475,  411,  475,  410,  409,
      411,  534,  558,  409,  410,  409,  411,  750,  409,  750,

      534,  475,  737,  558,  410,  737,  411, 1116,  409,  534,
        0,  410,    0,  411,  412,  410,  938,  411,  412,  558,
      410,    0,  411,  750,  412,  750,  542,  951,  542,  558,
      410,  412,  411,  938,  412,  542,  413,    0,  417,  414,
      413,  412,  417,  938,  951,  412,  413,  414,  417,  414,
      412,  414,    0,  542,  951,  542,  413,  412,  417,  938,
      412,  542,  734,  413,  734,  417,  414,  413,  415,  417,
      951,  734,  413,  414,  417,  414,  415,  414,  415,    0,
      415,    0,  413,  416,  417,  415,  416,  562,  734,  788,
      734,    0,  416,  562,    0,  415,  788,  418,    0,  416,

      419,  418,  415,  419,  415,  562,  415,  418,    0,  419,
      416,  415,    0,  416,  562,  788,  419,  418,  416,  723,
      562,    0,  788,    0,  418,  416,  420,  419,  418,    0,
      419,  562,  723,  418,  420,  419,  420,    0,  420,  422,
      421,    0,  419,  418,    0,    0,  723,  422,  421,  422,
      421,  422,  421,  420,  421,  955,  559,    0,  723,  423,
      420,  424,  420,  423,  420,  424,  422,  421,  559,  423,
      559,  424,  955,  422,  421,  422,  421,  422,  421,  423,
      421,  424,  955,  559,  713,    0,  423,  751,  424,  751,
      423,  425,  424,  713,  559,  423,  559,  424,  955,  425,

        0,  425,    0,  425,  426,  423,    0,  424,  426,    0,
        0,  713,  726,  751,  426,  751,  426,    0,  425,  713,
        0,  726,  427,    0,  426,  425,  427,  425,  429,  425,
      427,  426,  429,  428,    0,  426,  427, 1117,  429,  726,
      426,  428,  426,  428,  429,  428,  427,  726,  429,  427,
      426, 1119,  727,  427,    0,  429,    0,  427,  749,  429,
      428,  727,  427, 1117,  429,    0,    0,  428,  749,  428,
      429,  428,  427,  430,  429,  431,  430, 1119,  431,  727,
      432,    0,  430,    0,  431,  749,    0,  727,  432,  430,
      432,  431,  432,    0,  749,  431,  792,    0,  565,  730,

      430,    0,  431,  430,    0,  431,    0,  432,  430,  565,
      431,  792,  730,  565,  432,  430,  432,  431,  432,  434,
      433,  431,  433,  792,  434,  565,  730,  434,  433,  434,
      433,  434,  433,    0,    0,  565,    0,  792,  730,  565,
        0,    0,    0,    0,    0,    0,  434,  433,    0,  433,
      434,    0,    0,  434,  433,  434,  433,  434,  433,  436,
      436,  436,  436,  436,  436,  436,  436,  436,  436,  436,
      436,  436,  757,  436,  757,  436,  436,  436,  436,  436,
      436,  440,  440,    0,  440,  440,  440,  441,  441,    0,
      441,  441,  441,    0,    0,    0,  740,  440,  757,  741,

      757,    0, 1121,  441,    0,  740,    0,  436,  741,  444,
      444,  444,  444,  444,  444,  444,  449,  449,  449,  449,
      449,  449, 1126,  740,  440,  444,  741,  721, 1121,  444,
      441,  740,  449,  436,  741,  575,  449,  575,  575,  575,
      575,  575,    0,    0,  721,    0, 1130,    0, 1126,    0,
      440,    0,    0,  721,  721,  575,  441,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      721,  448, 1130,  448,  448,  448,  448,  448,  448,  453,
      453,  453,  453,  453,  453,    0,  455,  455,  455,  455,
      455,  455,  758,    0,  758,  453,  766,    0,  766,  453,

      455,    0,  455,    0, 1133,  448,  455,  456,  456,  456,
      456,  456,  456,  698,  698,    0,  698,  698,  758,  698,
      758,  456,  766,  456,  766,    0,    0,  456, 1134,  698,
     1133,  448,  454,  454,  454,  454,  454,  454,  454,  454,
      454,  454,  454,  454,  454,  454,  454,    0,  454,  454,
      454,  454,  454,  454, 1134,    0,  457,  457,  457,  457,
      457,  457,    0,  458,  458,  458,  458,  458,  458,    0,
      457,  768,  457,  768,  458,  458,  457,  458,    0,  458,
      454,  457,    0,  458,  459,  459,  459,  459,  459,  459,
        0,  460,  460,  460,  460,  460,  460,  768,  459,  768,

      459, 1135,    0,    0,  459,  460,  454,  460,  457,    0,
     1139,  460,  461,  461,  461,  461,  461,  461,  461,  461,
      461,  461,  461,  461,  461,  461,  461, 1135,  461,  461,
      461,  461,  461,  461,  568,  571, 1139,    0,  568,  571,
        0,  790,    0, 1140,  568,  571,    0,  577,    0,  577,
      577,  577,  577,  577,  568,  571,  745,  790,  791,  745,
        0,  568,  571,  791, 1141,  568,  571,  577,  790, 1140,
      568,  571,  696,  696,  696,  696,  696,  696,  696,    0,
      568,  571,  745,  790,  791,  745,  461,  572,  696,  791,
     1141,    0,  696,    0,  572,  572,  572,  572,  572,  572,

        0,  572,    0,  572,  572,  572,  572,  572,  572,  584,
        0,  586,  733,  584,  585,  586,  733,  756,    0,  584,
      577,  586,  585,  584,  585,  777,  585,  777,  733,  584,
      756,  586,  931,  931,  764,  572,  584,  764,  586,  733,
      584,  585,  586,  733,  756,  584,    0,  586,  585,  584,
      585,  777,  585,  777,  733,  584,  756,  586,  931,  931,
      764,  572,  573,  764,    0,    0,    0, 1142,    0,  573,
      573,  573,  573,  573,  573,  573,  573,  573,  573,  573,
      573,  573,  573,  573,  587,  588,  589,  760,  587,  588,
      589,  590,  804, 1142,  587,  588,  589,  762,    0,  590,

      760,  590, 1144,  590,  587,  588,  589,  804,  762, 1145,
      573,  587,  588,  589,  760,  587,  588,  589,  590,  804,
      587,  588,  589,    0,  762,  590,  760,  590, 1144,  590,
      587,  588,  589,  804,  762, 1145,  573,  574,  574,    0,
      574,  574,  574,  574,  574,  574,  574,  574,  574,  574,
      574,  574, 1148,  574,  574,  574,  574,  574,  574,  591,
      592,  593,  595,  591,  592,  593,  595,    0,  595,  591,
      592,  593,  595,  933,  752,  770,    0,  933, 1148,  591,
      592,  593,  595,  752,  770,  574,  591,  592,  593,  595,
      591,  592,  593,  595,  595,  591,  592,  593,  595,  933,

        0,  752,  770,  933,    0,  591,  592,  593,  595,  752,
      770,  574,  578,  578,    0,  578,  578,  578,  578,  578,
      578,  578,  578,  578,  578,  578,  578,    0,  578,  578,
      578,  578,  578,  578,    0,  594,  596,  597,  599,  594,
      596,  597,  599,  594,  778,    0,  596,  597,  599,  594,
      787,  799,  597,  787,  799,  778,  596,  597,  599,  594,
      578,  594,  594,  596,  597,  599,  594,  596,  597,  599,
      594,  778,  596,  597,  599,  594,  787,  799,  597,  787,
      799,  778,  596,  597,  599,  594,  578,  579,  579,  579,
      579,  579,  579,  579,  579,  579,  579,  579,  579,  579,

        0,  579,    0,  579,  579,  579,  579,  579,  579,  598,
      600,  601,    0,  598,  600,  601,    0,  598, 1150,  598,
      600,  601,  796,  706,  706,  779,  706,  706,  796,  598,
      600,  601,  963,  963,  779,  579,  598,  600,  601,  706,
      598,  600,  601,  598, 1150,  598,  600,  601,  796,    0,
        0,    0,  779,    0,  796,  598,  600,  601,  963,  963,
      779,  579,  580,  580,  580,  580,  580,  580,  580,  580,
      580,  580,  580,  580,  580,  580,  580,  580,  580,  580,
      580,  580,  580,  580,  602,  603,  604,  613,  602,  603,
      604,  613,  781,    0,  602,  603,  604,  613,  775,  602,

      775,  781,  940,  775,  602,  603,  604,  613,  940, 1156,
      580,  602,  603,  604,  613,  602,  603,  604,  613,  781,
      602,  603,  604,  613,  775,  602,  775,  781,  940,  775,
      602,  603,  604,  613,  940, 1156,  580,  581,  581,    0,
      581,  581,  581,  581,  581,  581,  581,  581,  581,  581,
      807,  581,  807,  581,  581,  581,  581,  581,  581,  605,
      614,  606,  605,    0,  614,  606,  605,    0,  990,  990,
      614,    0,  605,  606,    0,  606,  807,  606,  807,    0,
      614,    0,  605,    0,    0,  581,  605,  614,  606,  605,
        0,  614,  606,  605,  990,  990,  614,  608,  605,  606,

      773,  606,  607,  606,  608,  608,  614,  608,  605,  608,
      607,  581,  607,  773,  607, 1158,  607,  783,    0,  803,
        0,  782,    0,  607,  608,    0,  783,  773,  803,  607,
      608,  608,  609,  608,  782,  608,  607,  609,  607,  773,
      607, 1158,  607,  610,  783,  609,  803,  609,  782,  609,
        0,  610,  783,  610,  803,  610,  793,    0,  610,  609,
      782,  937,  806,  937,  609,  806,  611,    0,    0,  793,
      610,  609,    0,  609,  611,  609,  611,  610,  611,  610,
      611,  610,  612,  793,  610,  798,    0,  937,  806,  937,
      612,  806,  612,  611,  612,  793, 1160,    0,  798,  968,

      611,  615,  611,    0,  611,  615,  611,    0,  615,  612,
      968,  615,  798,  616,  810,  617,  612,  616,  612,  617,
      612,  615, 1160,  616,  798,  617,  968,  810,  615,  794,
      794,    0,  615,  616,  615,  617,  968,  615,    0,    0,
      616,  810,  617,  794,  616, 1162,  617,  615,  618,  616,
      619,  617,  618,  810,  619,    0,  794,  794,  618,  616,
      619,  617,  916,  916,  811,  916,  916,    0,  618,  794,
      619, 1162,  620,    0,  811,  618,  620,  619,  916,  618,
      950,  619,  620,  950,  618,  622,  619,  620,  622,  622,
        0,  811,  620,  621,  618,  622,  619,  621,    0,  620,

      811,  621,    0,  620,    0,  622,  950,  621,  620,  950,
      944,    0,  622,  620,  944,  622,  622,  621,  620,  623,
      621,  622,  624,  623,  621,    0,  624,    0,  621,  623,
      970,  622,  624,  621,  623,  957,  944,  624,    0,  623,
      944,  957,  624,  621,  625,    0,  623,  970,  625,  624,
      623,  626,  626,  624,  625,  623,  626,  970,  624,    0,
      623,  957,  626,  624,  625,  623,  627,  957,  624, 1163,
      627,  625,  626,  970,  978,  625,  627,  628,  626,  626,
      625,    0, 1164,  626,    0,  628,  627,  628,  626,  628,
      625,  978,    0,  627,  814, 1163,  629,  627,  626,  630,

      629,  978,  627,  630,  628,    0,  629,  814, 1164,  630,
      631,  628,  627,  628,  630,  628,  629,  978,  631,  630,
      631,  814,  631,  629,    0, 1165,  630,  629,    0,    0,
      630,  632,  629,  814,    0,  630,    0,  631,    0,  632,
      630,  632,  629,  632,  631,  630,  631,  939,  631,  634,
      633, 1165, 1015, 1015,  633,  936,    0,  634,  632,  634,
      633,  634,  939,  635,  635,  632,  993,  632,  936,  632,
      633,  635, 1171,  635,  939,  635,  634,  633, 1015, 1015,
      993,  633,  936,  634,    0,  634,  633,  634,  939,    0,
      635,  635,  636,  993,  936,  637,  633,  635, 1171,  635,

      636,  635,  636,  637,  636,  637,  993,  637,  638,    0,
      637,  943,    0,  639,    0,  945,  638,  945,  638,  636,
      638,  639,  637,  639,  943,  639,  636,  639,  636,  637,
      636,  637,  947,  637,    0,  638,  637,  954,  943,  954,
      639,  945,  638,  945,  638,  947,  638,  639,  640,  639,
      943,  639, 1172,  639,  641,    0,  640,    0,  640,  947,
      640,    0,  641,  954,  641,  954,  641,    0,  641,    0,
        0,  947,    0, 1174,  992,  640,    0,  645, 1172,    0,
      992,  641,  640,  642,  640,  645,  640,  645,  641,  645,
      641,  642,  641,  642,  641,  642,  642,  649,  643, 1174,

      992,    0,  643,  974,  645,  649,  992,  649,  643,  649,
      642,  645,    0,  645,  974,  645,  644,  642,  643,  642,
      644,  642,  642,  946,  649,  643,  644,  946,  646,  643,
      974,  649,  646,  649,  643,  649,  644,    0,  646,    0,
      974,  647,    0,  644,  643,  647,    0,  644,  646,  946,
      948,  647,  644,  946,  948,  646,  960,    0, 1175,  646,
      960,  647,  644,  648,  646,  652,    0,  648,  647,  652,
        0,  648,  647,  648,  646,  652,  948,  647,    0, 1176,
      948,  650,  960,  648, 1175,  652,  960,  647,    0,  650,
      648,  650,  652,  650,  648,  650,  652,  648,    0,  648,

     1177,  652,  651,  651,  953, 1176,    0,    0,  650,  648,
      651,  652,  651,  953,  651,  650,    0,  650,  653,  650,
     1177,  650,  653,  654,  655,    0,  653,  654,  655,  651,
      651,  953,  653,  654,  655,    0,  651,    0,  651,  953,
      651,    0,  653,  654,  655,  653, 1177, 1230,    0,  653,
      654,  655,  656,  653,  654,  655,  656,    0,  653,  654,
      655,  824,  656,  824,  824,  824,  824,  824,  653,  654,
      655,    0,  656, 1230,  657,    0,  660,  658,  657,  656,
      660,  824, 1232,  656,  657,  658,  660,  658,  656,  658,
        0,  964,    0,    0,  657,    0,  660,  959,  656, 1233,

      959,  657,    0,  660,  658,  657,  964,  660, 1232,  659,
      657,  658,  660,  658,  999,  658,  659,  659,  964,  659,
      657,  659,  660,  959,  661, 1233,  959,  678,  661,    0,
      661,  999,  964,    0,  661,  678,  659,  678,  971,  678,
      971,  999,  659,  659,  661,  659,  663,  659,  662,  663,
        0,  661,  662,  663,  678,  661,  661,  999,  662,  663,
      661,  678,    0,  678,  971,  678,  971,    0,  662,  663,
      661, 1236,    0,  663,    0,  662,  663,    0,  664,  662,
      663,  679,  664,    0,  662,  663,  664,    0,  664,  679,
      976,  679,  976,  679,  662,  663,  679, 1236,  664,    0,

      666,  665,    0,  665,  666,  664,    0,  665,  679,  664,
      666,    0,  664,  665,  664,  679,  976,  679,  976,  679,
      666,    0,  679,  665,  664,  668,    0,  666,  665,  668,
      665,  666,  667,  667,  665,  668,  666,  667,    0,  665,
      981,    0,  981,  667, 1238,  668,  666,  669,    0,  665,
      994,  669,  668,  667,  669,    0,  668,  669,    0,  667,
      667,  668,    0,    0,  667,  994,  981,  669,  981,  667,
     1238,  668,  670,    0,  669, 1127,  670,  994,  669,  667,
      669, 1127,  670,  669,  671,  672,  673,  958,  671,  672,
      673,  994,  670,  669,  671,  672,  673,  961,    0,  670,

      958, 1127, 1239,  670,  671,  672,  673, 1127,  670,    0,
      961,  671,  672,  673,  958,  671,  672,  673,  670,  674,
      671,  672,  673,  674,  961,    0,  958,  977, 1239,  674,
      671,  672,  673,  675,    0,  983,  961,  675,    0,  674,
      977,  676,    0,  675,  983,  676,  674,  675,  979,    0,
      674,  676, 1244,  675,  977,  674,    0,  982,  979,  982,
      675,  676,  983,    0,  675,  674,  977,    0,  676,  675,
      983, 1000,  676,  675,  677,  979,  677,  676, 1244,  675,
      677,  680,  681,  982,  979,  982,  677,  676, 1000,  680,
      681,  680,  681,  680,  681,  680,  677,    0, 1000,    0,

        0,  677,    0,  677,  985,    0, 1245,  677,  680,  681,
        0,    0,  677,  985, 1000,  680,  681,  680,  681,  680,
      681,  680,  677,  682,  683,  682,  684,    0,  683,  684,
      684,  985, 1245,  682,  683,  682,  684,  682,  685,  985,
        0,  995,  685,    0,  683,    0,  684, 1246,  685,    0,
      682,  683,  682,  684,  995,  683,  684,  684,  685,  682,
      683,  682,  684,  682,  984,  685,  984,  686,  995,  685,
      683,  686,  684, 1246,  685,  687,    0,  686,  986,  687,
      995,    0,  986,  996,  685,  687,    0,  686,    0,  688,
      984,    0,  984,  688,  686,  687,  996,  689,  686,  688,

        0,  689,  687,  686,  986,  998,  687,  689,  986,  688,
      996,  687,  989,  686, 1125,  989,  688,  689,  998, 1125,
      688,  687,  996,    0,  689,  688,  690,  690,  689,  690,
      690,    0,  998,  689,    0,  688,    0, 1249,  989,    0,
     1125,  989,  690,  689,  998, 1125,    0,    0,    0,  694,
      694,    0,  694,  694,  694, 1250,  700,  700,  700,  700,
      700,  700,  700, 1249,    0,  694,  690,  922,  922,    0,
      922,  922,  700,  922,  697,  697,  700,  697,  697,    0,
      697, 1250, 1253,  922,    0,    0,    0,    0,    0,  694,
      697,    0,  690,  691,  691,  691,  691,  691,  691,  691,

      691,  691,  691,  691,  691,  691,    0,  691, 1253,  691,
      691,  691,  691,  691,  691,  694, 1001,  697, 1001, 1004,
      701,  701,  701,  701,  701,  701,  701, 1009,    0,  700,
     1008, 1009, 1008, 1004,  695,  695,  701,  695,  695,  695,
      701,  691, 1001,  697, 1001,    0, 1004,    0,  699,  699,
      695,  699,  699, 1009,  699,    0, 1008, 1009, 1008, 1004,
        0,    0,    0,  695,  699,    0,    0,  691,  692,  692,
      692,  692,  692,  692,  692,  692,  692,  692,  692,  692,
      692,  692,  692,  692,  692,  692,  692,  692,  692,  692,
      695,  699,  703,  703,    0,  703,  703,    0,  919,  919,

      703,  919,  919,  919, 1123, 1123,    0,    0,  703,  707,
      707, 1110,  707,  707,  919, 1110,  692,  699,    0,  709,
      709,  709,  709,  709,  709,  707,    0,    0,    0,    0,
     1123, 1123,  703,  709,    0,  709,    0, 1110,  707,  709,
        0, 1110,  692,  693,  693,  693,  693,  693,  693,  693,
      693,  693,  693,  693,  693,  693,  693,  693,  703,  693,
      693,  693,  693,  693,  693,  707,  710,  710,  710,  710,
      710,  710,  921,  921, 1012,  921,  921,    0,  921, 1241,
      710, 1005,  710,    0, 1241, 1257,  710, 1012,  921,    0,
     1005,  693,    0,  920,  920,    0,  920,  920,  920,  926,

      926, 1012,  926,  926,    0, 1241,    0,  926, 1005,  920,
     1241, 1257,    0, 1012,    0,  926, 1005,  693,  702,  702,
      702,  702,  702,  702,  702,  702,  702,  702,  702,  702,
      702,  702,  702,  920,  702,  702,  702,  702,  702,  702,
      817,  820,  829,  820,  817,  921,  829,  820, 1010,    0,
      817, 1112,  829,  820, 1118, 1112,  829, 1118, 1146,  920,
      817, 1146,  829,  820, 1259, 1010,  702,  817,  820,  829,
      820,  817,    0,  829,  820, 1010,  817, 1112,  829,  820,
     1118, 1112,  829, 1118, 1146,    0,  817, 1146,  829,  820,
     1259, 1010,  702,  704,  704,  704,  704,  704,  704,  704,

      704,  704,  704,  704,  704,  704, 1113,  704, 1113,  704,
      704,  704,  704,  704,  704,  830,  831,  832,  833,  830,
      831,  832,  833, 1014,    0,  830,  831,  832,  833, 1251,
        0,  833, 1113,  831, 1113,  830,  831,  832,  833, 1251,
     1014,  704,  830,  831,  832,  833,  830,  831,  832,  833,
     1014,  830,  831,  832,  833,    0, 1251,  833,    0,  831,
        0,  830,  831,  832,  833, 1251, 1014,  704,  705,  705,
      705,  705,  705,  705,  705,  705,  705,  705,  705,  705,
      705,  705,  705,  705,  705,  705,  705,  705,  705,  705,
      834,  835,  838,  839,  834,  835,  838,  839,    0,  838,

      834,  835,  838,  839, 1131, 1120,  835, 1120, 1131, 1256,
      834,  835,  838,  839, 1261, 1256,  705,  834,  835,  838,
      839,  834,  835,  838,  839,  838,  834,  835,  838,  839,
     1131, 1120,  835, 1120, 1131, 1256,  834,  835,  838,  839,
     1261, 1256,  705,  708,  708,  708,  708,  708,  708,  708,
      708,  708,  708,  708,  708,  708,    0,  708,    0,  708,
      708,  708,  708,  708,  708,  836,  837,  840,  837,  836,
      841,  840,  837,  836,  841, 1109,    0,  840,  837,  836,
      841, 1129, 1137, 1129, 1109, 1263, 1137,  840,  837,  836,
      841,  708,  836,  837,  840,  837,  836,  841,  840,  837,

      836,  841, 1109,  840,  837,  836,  841, 1129, 1137, 1129,
     1109, 1263, 1137,  840,  837,  836,  841,  708,  711,  711,
      711,  711,  711,  711,  711,  711,    0,  711,  711,  711,
      711,  711,  711,    0,  711,  711,  711,  711,  711,  711,
      842,  843, 1013,  844,  842,  843, 1108,  844,    0,  842,
      842,  843,  844,  844, 1265, 1013,  843, 1149,  711, 1108,
      842,  843, 1136,  844, 1136, 1149,    0,  842,  843, 1013,
      844,  842,  843, 1108,  844,  842,  842,  843,  844,  844,
     1265, 1013,  843, 1149,  711, 1108,  842,  843, 1136,  844,
     1136, 1149,  711,  712,  712,  712,  712,  712,  712,  712,

      712,    0,  712,  712,  712,  712,  712,  712, 1268,  712,
      712,  712,  712,  712,  712,  845, 1016,  846,  847,  845,
        0,  846,  847, 1114,    0,  845,  846,  846,  847, 1143,
        0,  847,  712, 1016, 1268,  845, 1114,  846,  847, 1231,
     1143,    0,  845, 1016,  846,  847,  845, 1231,  846,  847,
     1114,  845,  846,  846,  847,    0, 1143,  847,  712, 1016,
        0,  845, 1114,  846,  847, 1231, 1143,  712,  821,    0,
        0,    0,    0, 1231,    0,  821,  821,  821,  821,  821,
      821,  821,  821,  821,  821,  821,  821,  821,  821,  821,
      848,  850,  851,  852,  848,  850,  851,  852, 1122,    0,

      848,  850,  851,  852,  850, 1138, 1155, 1138,  852, 1155,
      848,  850,  851,  852, 1270, 1122,  821,  848,  850,  851,
      852,  848,  850,  851,  852, 1122,  848,  850,  851,  852,
      850, 1138, 1155, 1138,  852, 1155,  848,  850,  851,  852,
     1270, 1122,  821,  822,  822,    0,  822,  822,  822,  822,
      822,  822,  822,  822,  822,  822,    0,  822,    0,  822,
      822,  822,  822,  822,  822,  849,  853,  856,  854,  849,
      853,  856,  854,  849,  853, 1152,    0,  856,  854,  849,
      853,  854, 1151, 1169, 1152, 1169, 1151,  856,  854,  849,
      853,  822,  849,  853,  856,  854,  849,  853,  856,  854,

      849,  853, 1152,  856,  854,  849,  853,  854, 1151, 1169,
     1152, 1169, 1151,  856,  854,  849,  853,  822,  825,  825,
     1273,  825,  825,  825,  825,  825,  825,  825,  825,  825,
      825,    0,  825,    0,  825,  825,  825,  825,  825,  825,
      855,  857,    0,    0,  855,  857, 1273,  855, 1124,    0,
      855,  857, 1153, 1099, 1099, 1309, 1099, 1099, 1099, 1153,
      855,  857, 1170, 1311, 1170, 1124,  825,  855,  857, 1099,
        0,  855,  857,  855,    0, 1124,  855,  857, 1153,    0,
        0, 1309,    0,    0,    0, 1153,  855,  857, 1170, 1311,
     1170, 1124,  825,  826,  826,  826,  826,  826,  826,  826,

      826,  826,  826,  826,  826,  826,  826,  826,  826,  826,
      826,  826,  826,  826,  826,  858,  859,  860,  861,  858,
      859,  860,  861,    0,  858,  858,  859,  860,  861, 1157,
      860, 1243,  861, 1157, 1243,  858,  859,  860,  861, 1313,
     1315,  826,  858,  859,  860,  861,  858,  859,  860,  861,
      858,  858,  859,  860,  861, 1157,  860, 1243,  861, 1157,
     1243,  858,  859,  860,  861, 1313, 1315,  826,  827,  827,
        0,  827,  827,  827,  827,  827,  827,  827,  827,  827,
      827, 1317,  827, 1167,  827,  827,  827,  827,  827,  827,
      862,  863,  862,  864,  865,  863,  862,  864,  865,    0,

     1167,  863,  862,  864,  865, 1166, 1173, 1317, 1173, 1166,
     1167,  863,  862,  864,  865, 1318,  827,  862,  863,  862,
      864,  865,  863,  862,  864,  865, 1167,  863,  862,  864,
      865, 1166, 1173,    0, 1173, 1166,    0,  863,  862,  864,
      865, 1318,  827,  828,  828, 1320,  828,  828,  828,  828,
      828,  828,  828,  828,  828,  828,  828,  828,  828,  828,
      828,  828,  828,  828,  828,  866,  867,  866,    0,  866,
      867, 1320,    0,    0,    0,  866,  867,    0,    0, 1248,
        0, 1248, 1321,    0,    0,  866,  867,    0, 1267,    0,
     1267,  828,  866,  867,  866,  868,  866,  867, 1132,  868,

      869,  866,  867,  868,  869, 1248, 1147, 1248, 1321,  868,
      869,  866,  867, 1132, 1267,  869, 1267,  828,    0,  868,
      869, 1147,  868, 1168,  870, 1132,  868,  869,  870,    0,
      868,  869,    0, 1147,  870,  868,  869, 1324,  871, 1132,
     1168,  869,  871,    0,  870,  868,  869, 1147,  871,    0,
     1168,  870,  872,    0,  872,  870,  872,    0,  871,    0,
      870,    0,  872, 1324,    0,  871, 1168,    0, 1247,  871,
      870, 1235,  872,    0,  871, 1235,  873,    0,    0,  872,
      873,  872, 1329,  872,  871, 1247,  873, 1161,  872,  874,
      875,    0,    0,  874,  875, 1247,  873, 1235,  872,  874,

      875, 1235, 1161,  873,  874, 1128,    0,  873, 1329,  874,
      875, 1247,  873,    0, 1161,  876,  874,  875, 1128,  876,
      874,  875,  873,  876,    0,  874,  875,    0, 1161,  876,
      874, 1312, 1128,    0, 1330,  874,  875,  877,    0,  876,
      877,  877,  876,    0, 1128, 1312,  876,  877, 1154,  878,
      876,    0,    0,  878,    0,  876,    0,  877, 1312,  878,
     1330, 1154,  879,    0,  877,  876,  879,  877,  877,  878,
        0, 1312,  879,  877,  881, 1154,  878,  879,  881,    0,
      878,    0,  879,  877,  881,  878,  880, 1154,    0,  879,
      880,    0,    0,  879,  881,  878,  880,  880,  879, 1333,

        0,  881, 1252,  879, 1260,  881,  880, 1260,  879, 1252,
      881,  882,    0,  880,  883,  882,    0,  880,  883,    0,
      881,  882,  880,  880,  883, 1333,  882, 1332, 1252, 1332,
     1260,  882,  880, 1260,  883, 1252,  885,    0,  882,  884,
      885,  883,  882,  884,    0,  883,  885,  882,  884,  884,
      883, 1159,  882, 1332, 1334, 1332,  885,  882,    0,  884,
      883,  886,    0,  885, 1159,  886,  884,  885, 1255,  887,
      884,  886,  885,  887,  884,  884,    0, 1255, 1159,  887,
     1334,  886,  885, 1105, 1105,  884, 1105, 1105,  886,  887,
     1159, 1355,  886,    0,  888, 1255,  887,  886,  888, 1105,

      887, 1357, 1262, 1255,  888,  887,  889,  886,  888,    0,
      889,    0,    0, 1262,  888,  887,  889, 1355, 1358,  889,
        0,  888,    0,    0,    0,  888,  889, 1357,  890, 1262,
      888, 1264,  890,  889,  888,  890, 1266,  889,  890, 1262,
      888, 1361,  889, 1266, 1358,  889, 1264,    0,  890,  891,
      891,  892,  889,  892,  891,  890,    0,  892, 1264,  890,
      891,  890, 1266,  892,  890, 1308,    0, 1361,    0, 1266,
      891,    0, 1264,  892,  890,  893,  891,  891,  892,  893,
      892,  891, 1308,  894,  892,  893,  891,  894,    0,  892,
     1316,    0, 1308,  894, 1316,  893,  891,  896,    0,  892,

        0,  896,  893,  894, 1364,  895,  893,  896, 1308,  895,
      894,  893,    0, 1234,  894,  895, 1316,  896,  895,  894,
     1316,  893,    0,  897,  896,  895, 1234,  897,  896,  894,
     1364,  897,  895,  896, 1269, 1237,  895,  897, 1322, 1269,
     1234,  895, 1322,  896,  895,  898,    0,  897, 1237,  898,
      897,  895, 1234,  898,  897, 1366,    0, 1240,  897,  898,
     1269,    0, 1237,  897, 1322, 1269,    0,  899, 1322,  898,
     1240,  899,  898,  897, 1237, 1242,  898,  899,    0,  900,
      898, 1366,  899,  900, 1240,  898,    0,  899, 1242,  900,
     1368,    0,  900, 1310,  899,  898, 1240,  901,  899,  900,

        0,  901, 1242,  899, 1310, 1319,  900,  901,  899, 1354,
      900, 1354, 1319,  899, 1242,  900, 1368,  901,  900,  903,
     1310,  902,  902,  903,  901,  900,  902, 1254,  901,  903,
     1310, 1319,  902,  901, 1362, 1354, 1369, 1354, 1319,  903,
     1254,    0,  902,  901,    0, 1362,  903,  904,  902,  902,
      903,  904,    0,  902, 1254,  903, 1382,  904,  902,  905,
      906, 1362, 1369,  905,  906,  903, 1254,  904,  902,  905,
      906, 1362,  905,    0,  904,  906,    0,    0,  904,  905,
      906, 1323, 1382,  904, 1258,    0,  905,  906, 1323, 1271,
      905,  906, 1356,  904, 1356,  905,  906, 1258,  905,  907,

        0,  906, 1271,  907, 1363,  905,  906, 1323,  907,  907,
     1383, 1258, 1384,  908, 1323, 1363, 1271,  908, 1356,  907,
     1356,  908,    0, 1258, 1365, 1365,  907,  908, 1271,  909,
      907, 1363,    0,  909,  907,  907, 1383,  908, 1384,  909,
      908, 1363,  910,    0,  908,  907,  910,    0,  908,  909,
     1365, 1365,  910,  908,  911,    0,  909, 1272,  911,    0,
      909, 1386,  910,  908,  911,  909,    0, 1314,  912,  910,
     1272,    0,  912,  910,  911,  909,  912,    0,  910,    0,
     1314,  911,  912,    0, 1272,  911,    0, 1386,  910, 1387,
      911,    0,  912,    0, 1314,  912, 1272,  913,    0,  912,

      911,  913,    0,  912, 1393,  914, 1314,  913,  912,  914,
        0,  913, 1325,  914,    0, 1387, 1325,  913,  912,  914,
     1398,  915, 1326,    0,  913,  915,    0,    0,  913,  914,
     1393,  915,  914,  913, 1400, 1326,  914,  913, 1325,    0,
      914,  915, 1325,  913,    0,  914, 1398,    0,  915, 1326,
     1100, 1100,  915, 1100, 1100,  914, 1100,  915,    0,    0,
     1400, 1326,    0,    0,    0,    0, 1100,  915,  917,  917,
      917,  917,  917,  917,  917,  917,  917,  917,  917,  917,
      917,  917,  917,  917,  917,  917,  917,  917,  917,  917,
        0,  924,  924,  924,  924,  924,  924,  924,    0, 1327,

        0,    0,  923,  923,    0,  923,  923,  924,  923, 1367,
     1367,  924, 1327,    0,    0,    0,  917, 1024,  923, 1024,
     1024, 1024, 1024, 1024, 1227, 1227, 1327, 1227, 1227,    0,
     1227,  923,    0,    0,    0, 1367, 1367, 1024, 1327,    0,
     1227,    0,  917,  918,  918,  918,  918,  918,  918,  918,
      918,  918,  918,  918,  918,  918,    0,  918,  923,  918,
      918,  918,  918,  918,  918,  928,  928, 1020,  928,  928,
        0, 1020, 1228, 1228, 1359, 1228, 1228, 1020, 1228,    0,
     1385,  928, 1020, 1385,    0,    0,    0, 1020, 1228, 1359,
     1024,  918,    0,    0, 1020,    0,    0, 1227, 1020,    0,

        0, 1359,    0, 1020,    0,  928, 1385,    0, 1020, 1385,
        0,    0,    0, 1020,    0, 1359,    0,  918,  925,  925,
      925,  925,  925,  925,  925,  925,  925,  925,  925,  925,
      925,  928,  925,    0,  925,  925,  925,  925,  925,  925,
     1028, 1029, 1030, 1032, 1028, 1029, 1030, 1032,    0, 1331,
     1028, 1029, 1030, 1032,    0, 1392, 1331, 1360, 1392,    0,
     1028, 1029, 1030, 1032, 1360,    0,  925, 1028, 1029, 1030,
     1032, 1028, 1029, 1030, 1032, 1331, 1028, 1029, 1030, 1032,
        0, 1392, 1331, 1360, 1392,    0, 1028, 1029, 1030, 1032,
     1360,    0,  925,  927,  927,  927,  927,  927,  927,  927,

      927,  927,  927,  927,  927,  927,  927,  927,  927,  927,
      927,  927,  927,  927,  927, 1031, 1328, 1033, 1034, 1031,
        0, 1033, 1034,    0, 1031, 1031, 1033, 1033, 1034, 1328,
     1380,    0, 1394, 1034,    0, 1031, 1394, 1033, 1034, 1380,
        0,  927, 1031, 1328, 1033, 1034, 1031,    0, 1033, 1034,
     1031, 1031, 1033, 1033, 1034, 1328,    0, 1380, 1394, 1034,
        0, 1031, 1394, 1033, 1034, 1380,    0,  927,  929,  929,
      929,  929,  929,  929,  929,  929,  929,  929,  929,  929,
      929,    0,  929,    0,  929,  929,  929,  929,  929,  929,
     1035, 1036, 1037, 1038, 1035, 1036, 1037, 1038, 1381,    0,

     1035, 1036, 1037, 1038, 1036, 1397,    0,    0, 1381, 1397,
     1035, 1036, 1037, 1038,    0,    0,  929, 1035, 1036, 1037,
     1038, 1035, 1036, 1037, 1038, 1381, 1035, 1036, 1037, 1038,
     1036, 1397,    0,    0, 1381, 1397, 1035, 1036, 1037, 1038,
        0,    0,  929,  930,  930,  930,  930,  930,  930,  930,
      930,  930,  930,  930,  930,  930,  930,  930,  930,  930,
      930,  930,  930,  930,  930, 1039, 1040, 1041, 1042, 1039,
     1040, 1041, 1042,    0,    0, 1039, 1040, 1041, 1042,    0,
        0, 1039, 1041,    0,    0, 1039, 1040, 1041, 1042,    0,
        0,  930, 1039, 1040, 1041, 1042, 1039, 1040, 1041, 1042,

        0, 1039, 1040, 1041, 1042,    0,    0, 1039, 1041,    0,
        0, 1039, 1040, 1041, 1042,    0,    0,  930, 1021, 1021,
        0, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021,
     1021,    0, 1021,    0, 1021, 1021, 1021, 1021, 1021, 1021,
     1043, 1044, 1046, 1047, 1043, 1044, 1046, 1047, 1043,    0,
     1046, 1044, 1046, 1047, 1043, 1044, 1047,    0,    0,    0,
        0, 1044, 1046, 1047, 1043,    0, 1021, 1043, 1044, 1046,
     1047, 1043, 1044, 1046, 1047, 1043, 1046, 1044, 1046, 1047,
     1043, 1044, 1047,    0,    0,    0,    0, 1044, 1046, 1047,
     1043,    0, 1021, 1022, 1022,    0, 1022, 1022, 1022, 1022,

     1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022,
     1022, 1022, 1022, 1022, 1022, 1045, 1049, 1050, 1048, 1045,
     1049, 1050, 1048, 1045,    0, 1048, 1049, 1050, 1048, 1045,
        0,    0, 1050,    0,    0,    0, 1049, 1050, 1048, 1045,
        0, 1022, 1045, 1049, 1050, 1048, 1045, 1049, 1050, 1048,
     1045, 1048, 1049, 1050, 1048, 1045,    0,    0, 1050,    0,
        0,    0, 1049, 1050, 1048, 1045,    0, 1022, 1025, 1025,
        0, 1025, 1025, 1025, 1025, 1025, 1025, 1025, 1025, 1025,
     1025,    0, 1025,    0, 1025, 1025, 1025, 1025, 1025, 1025,
     1051, 1053, 1052, 1053, 1051,    0, 1052, 1053,    0,    0,

     1051, 1052, 1052, 1053,    0,    0,    0,    0,    0,    0,
     1051,    0, 1052, 1053,    0,    0, 1025, 1051, 1053, 1052,
     1053, 1051,    0, 1052, 1053,    0, 1051, 1052, 1052, 1053,
        0,    0,    0,    0,    0,    0, 1051,    0, 1052, 1053,
        0,    0, 1025, 1026, 1026,    0, 1026, 1026, 1026, 1026,
     1026, 1026, 1026, 1026, 1026, 1026, 1026, 1026, 1026, 1026,
     1026, 1026, 1026, 1026, 1026, 1054, 1055, 1056, 1057, 1054,
     1055, 1056, 1057,    0,    0, 1054, 1055, 1056, 1057,    0,
        0,    0,    0, 1057,    0, 1054, 1055, 1056, 1057,    0,
        0, 1026, 1054, 1055, 1056, 1057, 1054, 1055, 1056, 1057,

        0, 1054, 1055, 1056, 1057,    0,    0,    0,    0, 1057,
        0, 1054, 1055, 1056, 1057,    0,    0, 1026, 1027, 1027,
        0, 1027, 1027, 1027, 1027, 1027, 1027, 1027, 1027, 1027,
     1027, 1027, 1027, 1027, 1027, 1027, 1027, 1027, 1027, 1027,
     1058, 1059,    0, 1060, 1058, 1059,    0, 1060,    0, 1058,
     1058, 1059, 1059, 1060,    0,    0, 1060,    0,    0,    0,
     1058, 1059,    0, 1060,    0,    0, 1027, 1058, 1059,    0,
     1060, 1058, 1059,    0, 1060, 1058, 1058, 1059, 1059, 1060,
     1061, 1062, 1060,    0, 1061, 1062, 1058, 1059,    0, 1060,
     1061, 1062, 1027, 1063, 1064,    0, 1064, 1063, 1064,    0,

     1061, 1062,    0, 1063, 1064,    0, 1063, 1061, 1062,    0,
        0, 1061, 1062, 1063, 1064,    0, 1061, 1062, 1065,    0,
     1063, 1064, 1065, 1064, 1063, 1064, 1061, 1062, 1065, 1063,
     1064, 1066, 1063,    0,    0, 1066,    0,    0, 1065, 1063,
     1064, 1066,    0,    0, 1066, 1065,    0,    0,    0, 1065,
        0, 1066,    0, 1067, 1065,    0,    0, 1067, 1066, 1068,
        0, 1068, 1066, 1067, 1065, 1068,    0, 1066,    0,    0,
     1066, 1068,    0, 1067,    0, 1069,    0, 1066,    0, 1069,
     1067, 1068,    0, 1070, 1067, 1069, 1068, 1070, 1068, 1067,
        0,    0, 1068, 1070,    0, 1069,    0, 1068,    0, 1067,

        0,    0, 1069, 1070, 1070, 1071, 1069, 1068, 1072, 1071,
     1070, 1069, 1072,    0, 1070, 1071,    0, 1072, 1072, 1070,
        0, 1069,    0,    0,    0, 1071,    0,    0, 1072, 1070,
     1070,    0, 1071,    0,    0, 1072, 1071,    0, 1073, 1072,
        0, 1071, 1073, 1072, 1072,    0, 1074,    0, 1073,    0,
     1074, 1071,    0,    0, 1072,    0, 1074,    0, 1073,    0,
     1075,    0,    0,    0, 1075, 1073, 1074,    0,    0, 1073,
     1075,    0,    0, 1074, 1073,    0,    0, 1074,    0,    0,
     1075,    0, 1074,    0, 1073, 1076,    0, 1075,    0, 1076,
        0, 1075, 1074, 1077,    0, 1076, 1075, 1077,    0,    0,

        0, 1076,    0, 1077,    0, 1076, 1075,    0,    0,    0,
        0,    0, 1076, 1077,    0,    0, 1076,    0, 1079,    0,
     1077, 1076, 1079,    0, 1077,    0, 1078, 1076, 1079, 1077,
     1078, 1076,    0,    0,    0, 1078, 1078,    0, 1079, 1077,
     1080,    0,    0,    0, 1080, 1079, 1078,    0, 1081, 1079,
     1080,    0, 1081, 1078, 1079,    0,    0, 1078, 1081,    0,
     1080, 1078, 1078,    0, 1079,    0,    0, 1080, 1081,    0,
     1083, 1080, 1078,    0, 1083, 1081, 1080,    0,    0, 1081,
     1083, 1082,    0, 1082, 1081,    0, 1080, 1082,    0,    0,
     1083,    0,    0, 1082, 1081, 1084,    0, 1083,    0, 1084,

        0, 1083,    0, 1082,    0, 1084, 1083, 1085, 1082,    0,
     1082, 1085,    0,    0, 1082, 1084, 1083, 1085,    0, 1082,
     1086,    0, 1084,    0, 1086,    0, 1084, 1085,    0, 1082,
     1086, 1084,    0,    0, 1085,    0,    0,    0, 1085,    0,
     1086, 1084,    0, 1085, 1088, 1087,    0, 1086, 1088, 1087,
        0, 1086, 1088, 1085, 1087, 1087, 1086,    0, 1088,    0,
        0,    0,    0,    0,    0, 1087, 1086,    0, 1088, 1089,
        0, 1088, 1087, 1089,    0, 1088, 1087, 1089,    0, 1088,
     1087, 1087,    0, 1089, 1088,    0,    0,    0,    0,    0,
        0, 1087,    0, 1089, 1088, 1090, 1089, 1091, 1092, 1090,

     1089, 1091, 1092,    0, 1089, 1090,    0, 1091, 1092, 1089,
     1090,    0, 1091,    0,    0, 1090,    0, 1091, 1092, 1089,
        0,    0, 1090,    0, 1091, 1092, 1090,    0, 1091, 1092,
        0, 1090,    0, 1091, 1092, 1093, 1090,    0, 1091, 1093,
        0, 1090,    0, 1091, 1092, 1093,    0, 1095, 1094,    0,
        0, 1095, 1094,    0,    0, 1093,    0, 1095, 1094,    0,
     1096,    0, 1093, 1094, 1096,    0, 1093, 1095, 1094,    0,
     1096, 1093,    0, 1096, 1095, 1094,    0,    0, 1095, 1094,
     1096, 1093,    0, 1095, 1094,    0,    0, 1096,    0, 1094,
        0, 1096,    0, 1095, 1094,    0, 1096,    0,    0, 1096,

     1275,    0, 1275, 1275, 1275, 1275, 1096, 1097, 1097, 1097,
     1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097,
     1275, 1097,    0, 1097, 1097, 1097, 1097, 1097, 1097,    0,
        0,    0,    0, 1182,    0,    0,    0, 1182, 1101, 1101,
        0, 1101, 1101, 1182, 1101, 1102, 1102, 1102, 1102, 1102,
     1102, 1102,    0, 1182, 1101, 1097,    0,    0,    0,    0,
     1182, 1102,    0,    0, 1182, 1102,    0,    0,    0, 1182,
        0,    0,    0,    0,    0,    0,    0,    0, 1101, 1182,
        0, 1097, 1098, 1098, 1098, 1098, 1098, 1098, 1098, 1098,
     1098, 1098, 1098, 1098, 1098, 1098, 1098, 1098, 1098, 1098,

     1098, 1098, 1098, 1098, 1101, 1183,    0, 1184,    0, 1183,
        0, 1184,    0,    0,    0, 1183,    0, 1184, 1102, 1276,
        0, 1276, 1276, 1276, 1276, 1183, 1183, 1184,    0,    0,
     1098,    0, 1183,    0, 1184, 1276, 1183,    0, 1184, 1276,
        0, 1183,    0, 1184,    0,    0,    0,    0,    0,    0,
        0, 1183, 1183, 1184,    0,    0, 1098, 1103, 1103, 1103,
     1103, 1103, 1103, 1103, 1103, 1103, 1103, 1103, 1103, 1103,
        0, 1103,    0, 1103, 1103, 1103, 1103, 1103, 1103, 1185,
     1186,    0, 1187, 1185, 1186,    0, 1187,    0,    0, 1185,
     1186, 1187, 1187,    0,    0,    0,    0,    0,    0, 1185,

     1186,    0, 1187,    0,    0, 1103, 1185, 1186,    0, 1187,
     1185, 1186,    0, 1187,    0, 1185, 1186, 1187, 1187,    0,
        0,    0,    0,    0,    0, 1185, 1186,    0, 1187,    0,
        0, 1103, 1104, 1104, 1104, 1104, 1104, 1104, 1104, 1104,
     1104, 1104, 1104, 1104, 1104, 1104, 1104, 1104, 1104, 1104,
     1104, 1104, 1104, 1104, 1188, 1189, 1190, 1191, 1188, 1189,
     1190, 1191,    0,    0, 1188, 1189, 1190, 1191,    0,    0,
     1191,    0,    0,    0, 1188, 1189, 1190, 1191,    0,    0,
     1104, 1188, 1189, 1190, 1191, 1188, 1189, 1190, 1191,    0,
     1188, 1189, 1190, 1191,    0,    0, 1191,    0,    0,    0,

     1188, 1189, 1190, 1191,    0,    0, 1104, 1106, 1106, 1106,
     1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
     1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1192,
     1193, 1194, 1195, 1192, 1193, 1194, 1195,    0, 1193, 1192,
     1193, 1194, 1195,    0,    0,    0,    0,    0, 1195, 1192,
     1193, 1194, 1195,    0,    0, 1106, 1192, 1193, 1194, 1195,
     1192, 1193, 1194, 1195, 1193, 1192, 1193, 1194, 1195,    0,
        0,    0,    0,    0, 1195, 1192, 1193, 1194, 1195,    0,
        0, 1106, 1178, 1178,    0, 1178, 1178, 1178, 1178, 1178,
        0, 1178, 1178, 1178, 1178, 1178, 1178,    0, 1178, 1178,

     1178, 1178, 1178, 1178, 1196, 1197, 1198, 1200, 1196, 1197,
     1198, 1200,    0,    0, 1196, 1197, 1198, 1200,    0,    0,
        0,    0, 1200,    0, 1196, 1197, 1198, 1200,    0,    0,
        0, 1196, 1197, 1198, 1200, 1196, 1197, 1198, 1200,    0,
     1196, 1197, 1198, 1200,    0,    0,    0,    0, 1200,    0,
     1196, 1197, 1198, 1200,    0,    0, 1178, 1179, 1179,    0,
     1179, 1179, 1179, 1179, 1179, 1179, 1179, 1179, 1179, 1179,
     1179, 1179, 1179, 1179, 1179, 1179, 1179, 1179, 1179, 1199,
     1201, 1202, 1204, 1199, 1201, 1202, 1204, 1199,    0,    0,
     1201, 1202, 1204, 1199,    0,    0,    0,    0,    0,    0,

     1201, 1202, 1204, 1199,    0, 1179, 1199, 1201, 1202, 1204,
     1199, 1201, 1202, 1204, 1199,    0, 1201, 1202, 1204, 1199,
        0,    0,    0,    0,    0,    0, 1201, 1202, 1204, 1199,
        0, 1179, 1181, 1181,    0, 1181, 1181, 1181, 1181, 1181,
     1181, 1181, 1181, 1181, 1181, 1181, 1181, 1181, 1181, 1181,
     1181, 1181, 1181, 1181, 1203, 1205, 1206, 1203, 1203, 1205,
     1206,    0,    0,    0, 1203, 1205, 1206,    0, 1207,    0,
        0,    0, 1207,    0, 1203, 1205, 1206,    0, 1207,    0,
     1181, 1203, 1205, 1206, 1203, 1203, 1205, 1206, 1207,    0,
     1203, 1205, 1206,    0,    0, 1207,    0,    0,    0, 1207,

     1203, 1205, 1206, 1208, 1207,    0, 1181, 1208,    0,    0,
     1208, 1209,    0, 1208, 1207, 1209,    0,    0,    0,    0,
        0, 1209,    0, 1208,    0, 1210,    0,    0,    0, 1210,
     1208, 1209,    0, 1211, 1208, 1210, 1208, 1211, 1209, 1208,
        0,    0, 1209, 1211,    0, 1210,    0, 1209,    0, 1208,
        0,    0, 1210, 1211,    0, 1212, 1210, 1209, 1213, 1212,
     1211, 1210, 1213,    0, 1211, 1212,    0,    0, 1213, 1211,
        0, 1210,    0,    0,    0, 1212,    0,    0, 1213, 1211,
        0,    0, 1212,    0,    0, 1213, 1212,    0, 1214, 1213,
     1214, 1212, 1214,    0, 1213,    0, 1215,    0, 1214,    0,

     1215, 1212,    0,    0, 1213,    0, 1215,    0, 1214, 1215,
        0,    0,    0,    0,    0, 1214, 1215, 1214,    0, 1214,
        0,    0,    0, 1215, 1214,    0,    0, 1215,    0,    0,
        0, 1216, 1215, 1216, 1214, 1215, 1217, 1216,    0,    0,
     1217,    0, 1215, 1216,    0, 1335, 1217, 1335, 1335, 1335,
     1335,    0,    0, 1216,    0,    0, 1217,    0, 1216,    0,
     1216, 1335,    0, 1217, 1216, 1335,    0, 1217,    0, 1216,
     1218,    0, 1217, 1219, 1218,    0, 1218, 1219,    0, 1216,
     1218,    0, 1217, 1219,    0,    0,    0,    0, 1219,    0,
     1218,    0,    0, 1219,    0, 1220,    0, 1218,    0, 1220,

     1219, 1218, 1218,    0, 1219, 1220, 1218,    0, 1220, 1219,
        0,    0,    0, 1221, 1219, 1220, 1218, 1221,    0, 1219,
        0, 1221, 1220, 1221,    0, 1222, 1220,    0,    0, 1222,
        0, 1220,    0, 1221, 1220, 1222,    0,    0, 1223,    0,
     1221, 1220, 1223,    0, 1221, 1222,    0, 1221, 1223, 1221,
     1224,    0, 1222,    0, 1224,    0, 1222,    0, 1223, 1221,
     1224, 1222, 1225,    0,    0, 1223, 1225,    0,    0, 1223,
     1224, 1222, 1225,    0, 1223,    0,    0, 1224,    0,    0,
        0, 1224, 1225,    0, 1223,    0, 1224,    0,    0, 1225,
        0,    0,    0, 1225,    0,    0, 1224,    0, 1225,    0,

        0,    0,    0,    0,    0,    0,    0,    0, 1225, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1281, 1283, 1282, 1283, 1281, 1283, 1282,    0, 1281,
        0,    0, 1283, 1282,    0, 1281, 1282,    0,    0,    0,
        0,    0, 1283, 1282,    0, 1281,    0, 1226, 1281, 1283,
     1282, 1283, 1281, 1283, 1282,    0, 1281,    0, 1283, 1282,
        0, 1281, 1282,    0,    0,    0,    0,    0, 1283, 1282,
        0, 1281,    0, 1226, 1229, 1229, 1229, 1229, 1229, 1229,
     1229, 1229, 1229, 1229, 1229, 1229, 1229, 1229, 1229, 1229,

     1229, 1229, 1229, 1229, 1229, 1229, 1284, 1285, 1285, 1286,
     1284,    0, 1285, 1286,    0,    0, 1284,    0, 1285, 1286,
        0,    0,    0,    0,    0,    0, 1284,    0, 1285, 1286,
        0,    0, 1229, 1284, 1285, 1285, 1286, 1284,    0, 1285,
     1286,    0, 1284,    0, 1285, 1286,    0,    0,    0,    0,
        0,    0, 1284,    0, 1285, 1286,    0,    0, 1229, 1278,
     1278,    0, 1278, 1278, 1278, 1278, 1278,    0, 1278, 1278,
     1278, 1278, 1278, 1278,    0, 1278, 1278, 1278, 1278, 1278,
     1278, 1287, 1288,    0, 1289, 1287, 1288,    0, 1289,    0,
        0, 1287, 1288, 1289, 1289,    0,    0,    0,    0,    0,

        0, 1287, 1288,    0, 1289,    0,    0,    0, 1287, 1288,
        0, 1289, 1287, 1288,    0, 1289,    0, 1287, 1288, 1289,
     1289,    0,    0,    0,    0,    0,    0, 1287, 1288,    0,
     1289,    0,    0, 1278, 1279, 1279,    0, 1279, 1279, 1279,
     1279, 1279,    0, 1279, 1279, 1279, 1279,    0, 1279,    0,
     1279, 1279, 1279, 1279, 1279, 1279, 1290, 1291, 1292,    0,
     1290, 1291, 1292,    0,    0,    0, 1290, 1291, 1292, 1290,
        0,    0,    0,    0,    0,    0, 1290, 1291, 1292,    0,
        0,    0,    0, 1290, 1291, 1292,    0, 1290, 1291, 1292,
        0,    0, 1290, 1291, 1292, 1290,    0,    0,    0,    0,

        0,    0, 1290, 1291, 1292,    0,    0,    0, 1279, 1280,
     1280,    0, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280,
     1280, 1280, 1280, 1280,    0, 1280, 1280, 1280, 1280, 1280,
     1280, 1293, 1294,    0, 1295, 1293, 1294,    0, 1295,    0,
        0, 1293, 1294, 1295, 1295,    0,    0,    0,    0,    0,
        0, 1293, 1294,    0, 1295,    0,    0, 1280, 1293, 1294,
        0, 1295, 1293, 1294,    0, 1295,    0, 1293, 1294, 1295,
     1295, 1296, 1297,    0,    0, 1296, 1297, 1293, 1294,    0,
     1295, 1296, 1297, 1280, 1298, 1299,    0,    0, 1298, 1299,
        0, 1296, 1297, 1298, 1298, 1299,    0,    0, 1296, 1297,

        0,    0, 1296, 1297, 1298, 1299,    0, 1296, 1297,    0,
        0, 1298, 1299,    0,    0, 1298, 1299, 1296, 1297, 1298,
     1298, 1299, 1300, 1301, 1302, 1303, 1300, 1301, 1302, 1303,
     1298, 1299, 1300, 1301, 1302, 1303,    0,    0,    0,    0,
        0,    0, 1300, 1301, 1302, 1303,    0,    0,    0, 1300,
     1301, 1302, 1303, 1300, 1301, 1302, 1303,    0, 1300, 1301,
     1302, 1303, 1304, 1305,    0,    0, 1304, 1305, 1300, 1301,
     1302, 1303, 1304, 1305, 1305, 1306, 1307,    0,    0, 1306,
     1307,    0, 1304, 1305,    0, 1306, 1307,    0,    0, 1304,
     1305,    0,    0, 1304, 1305, 1306, 1307,    0, 1304, 1305,

     1305,    0, 1306, 1307,    0,    0, 1306, 1307, 1304, 1305,
        0, 1306, 1307,    0,    0,    0,    0,    0,    0,    0,
        0, 1306, 1307, 1337, 1337,    0, 1337, 1337, 1337, 1337,
     1337, 1337, 1337, 1337, 1337, 1337,    0, 1337,    0, 1337,
     1337, 1337, 1337, 1337, 1337, 1338, 1339, 1340, 1341, 1338,
     1339, 1340, 1341,    0,    0, 1338, 1339, 1340, 1341,    0,
     1338,    0, 1340,    0,    0, 1338, 1339, 1340, 1341,    0,
        0, 1337, 1338, 1339, 1340, 1341, 1338, 1339, 1340, 1341,
        0, 1338, 1339, 1340, 1341, 1342, 1338,    0, 1340, 1342,
        0, 1338, 1339, 1340, 1341, 1342, 1343, 1337, 1343, 1344,

        0,    0, 1343, 1344,    0, 1342,    0,    0, 1343, 1344,
        0,    0, 1342,    0,    0,    0, 1342,    0, 1343, 1344,
        0, 1342,    0, 1343,    0, 1343, 1344,    0, 1345, 1343,
     1344, 1342, 1345,    0, 1343, 1344,    0,    0, 1345,    0,
        0,    0,    0,    0, 1343, 1344,    0,    0, 1345,    0,
     1346,    0, 1346,    0, 1346, 1345,    0,    0,    0, 1345,
     1346,    0, 1348, 1347, 1345, 1347, 1348, 1347,    0,    0,
     1346,    0, 1348, 1347, 1345,    0,    0, 1346,    0, 1346,
        0, 1346, 1348, 1347,    0,    0, 1346, 1349,    0, 1348,
     1347, 1349, 1347, 1348, 1347,    0, 1346, 1349, 1348, 1347,

        0, 1349,    0,    0,    0,    0,    0, 1349, 1348, 1347,
        0, 1350, 1351,    0, 1349, 1350, 1351,    0, 1349,    0,
        0, 1350, 1351, 1349, 1352,    0, 1351, 1349, 1352,    0,
        0, 1350, 1351, 1349, 1352,    0, 1353,    0, 1350, 1351,
     1353,    0, 1350, 1351, 1352,    0, 1353, 1350, 1351,    0,
        0, 1352, 1351,    0,    0, 1352, 1353, 1350, 1351,    0,
     1352,    0,    0, 1353,    0,    0,    0, 1353,    0,    0,
     1352,    0, 1353,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 1353, 1370, 1370,    0, 1370, 1370, 1370, 1370,
     1370, 1370, 1370, 1370, 1370, 1370,    0, 1370,    0, 1370,

     1370, 1370, 1370, 1370, 1370, 1372,    0, 1373, 1374, 1372,
     1373, 1373, 1374,    0,    0, 1372,    0, 1373, 1374,    0,
        0,    0,    0,    0,    0, 1372,    0, 1373, 1374,    0,
        0, 1370, 1372,    0, 1373, 1374, 1372, 1373, 1373, 1374,
        0, 1372,    0, 1373, 1374,    0,    0,    0,    0,    0,
        0, 1372,    0, 1373, 1374,    0,    0, 1370, 1371, 1371,
        0, 1371, 1371, 1371, 1371, 1371, 1371, 1371, 1371, 1371,
     1371, 1371, 1371, 1371, 1371, 1371, 1371, 1371, 1371, 1371,
     1375, 1376, 1377, 1378, 1375, 1376, 1377, 1378,    0,    0,
     1375, 1376, 1377, 1378,    0,    0,    0,    0,    0,    0,

     1375, 1376, 1377, 1378,    0,    0, 1371, 1375, 1376, 1377,
     1378, 1375, 1376, 1377, 1378,    0, 1375, 1376, 1377, 1378,
     1379,    0,    0,    0, 1379,    0, 1375, 1376, 1377, 1378,
     1379,    0, 1371,    0,    0,    0,    0,    0,    0,    0,
     1379,    0,    0,    0,    0,    0,    0, 1379,    0,    0,
        0, 1379,    0,    0,    0,    0, 1379,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 1379, 1388, 1388,    0,
     1388, 1388, 1388, 1388, 1388, 1388, 1388, 1388, 1388, 1388,
     1388, 1388, 1388, 1388, 1388, 1388, 1388, 1388, 1388, 1389,
     1390,    0, 1391, 1389, 1390,    0, 1391,    0,    0, 1389,

     1390, 1391, 1391,    0,    0,    0,    0,    0,    0, 1389,
     1390,    0, 1391,    0,    0, 1388, 1389, 1390,    0, 1391,
     1389, 1390,    0, 1391,    0, 1389, 1390, 1391, 1391,    0,
     1395,    0,    0, 1396, 1395, 1389, 1390, 1396, 1391, 1395,
     1395, 1388,    0, 1396,    0,    0,    0,    0,    0,    0,
     1395,    0,    0, 1396,    0,    0,    0, 1395, 1399,    0,
     1396, 1395, 1399,    0, 1396, 1395, 1395,    0, 1399, 1396,
        0,    0,    0,    0,    0,    0, 1395,    0, 1399, 1396,
        0,    0,    0,    0,    0, 1399,    0,    0,    0, 1399,
        0,    0,    0,    0, 1399,    0,    0,    0,    0,    0,

        0,    0,    0,    0, 1399, 1403, 1403, 1403, 1404, 1404,
     1404, 1406, 1406, 1406, 1407, 1407, 1407, 1408, 1408, 1408,
     1409, 1409, 1409, 1410, 1410, 1410, 1412, 1412, 1413, 1413,
     1413, 1414, 1414, 1414, 1415, 1415, 1418, 1418, 1418, 1419,
     1419, 1419, 1420, 1420, 1420, 1421, 1421, 1421, 1422, 1422,
     1422, 1423, 1423, 1423, 1424, 1424, 1424, 1425, 1425, 1425,
     1426, 1426, 1426, 1427, 1427, 1427, 1429, 1429, 1430, 1430,
     1431, 1431, 1431, 1432, 1432, 1433, 1433, 1435, 1435, 1435,
     1436, 1436, 1436, 1437, 1437, 1437, 1438, 1438, 1438, 1439,
     1439, 1439, 1440, 1440, 1440, 1442, 1442, 1443, 1443, 1444,

     1444, 1445, 1445, 1446, 1446, 1446, 1447, 1447, 1447, 1448,
     1448, 1449, 1449, 1449, 1450, 1450, 1450, 1451, 1451, 1451,
     1452, 1452, 1452, 1453, 1453, 1453, 1454, 1454, 1454, 1455,
     1455, 1455, 1456, 1456, 1456, 1457, 1457, 1457, 1458, 1458,
     1458, 1459, 1459, 1459, 1460, 1460, 1460, 1461, 1461, 1461,
     1462, 1462, 1462, 1464, 1464, 1465, 1465, 1466, 1466, 1467,
     1467, 1468, 1468, 1468, 1469, 1469, 1470, 1470, 1471, 1471,
     1471, 1472, 1472, 1472, 1473, 1473, 1473, 1474, 1474, 1474,
     1475, 1475, 1476, 1476, 1477, 1477, 1477, 1478, 1478, 1478,
     1479, 1479, 1480, 1480, 1481, 1481, 1482, 1482, 1483, 1483,

     1484, 1484, 1485, 1485, 1401, 1401, 1401, 1401, 1401, 1401,
     1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401,
     1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401,
     1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401,
     1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401,
     1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401,
     1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401,
     1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 1401
    } ;

/* Table of booleans, true if rule could match eol. */
static const flex_int32_t yy_rule_can_match_eol[168] =
    {   0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 
    0, 0, 0, 0, 1, 0, 0, 0,     };

static const flex_int16_t yy_rule_linenum[167] =
    {   0,
       29,   30,   31,   32,   33,   34,   35,   36,   37,   38,
       39,   40,   41,   42,   43,   44,   45,   46,   47,   48,
       49,   50,   51,   52,   53,   54,   55,   56,   57,   58,
       59,   60,   61,   62,   63,   64,   65,   66,   67,   68,
       69,   70,   71,   72,   73,   74,   75,   76,   77,   78,
       79,   80,   81,   82,   83,   84,   85,   86,   87,   88,
       89,   90,   91,   92,   93,   94,   95,   96,   97,   98,
       99,  100,  101,  102,  103,  104,  105,  106,  107,  108,
      109,  110,  111,  112,  113,  114,  115,  116,  117,  118,
      119,  120,  121,  122,  123,  124,  125,  126,  127,  128,

      129,  130,  131,  132,  133,  134,  135,  136,  137,  138,
      139,  140,  141,  142,  143,  144,  145,  146,  147,  148,
      149,  150,  151,  152,  153,  154,  155,  156,  157,  158,
      159,  160,  161,  162,  163,  164,  168,  169,  170,  171,
      172,  173,  175,  177,  180,  183,  189,  192,  195,  199,
      200,  201,  214,  215,  216,  219,  228,  243,  258,  269,
      317,  319,  370,  377,  379,  382
    } ;

#define REJECT \
{ \
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */ \
yy_cp = (yy_full_match); /* restore poss. backed-over text */ \
++(yy_lp); \
goto find_rule; \
}

#define yymore() ((yy_more_flag) = 1)
#define YY_MORE_ADJ (yy_more_len)
#define YY_RESTORE_YY_MORE_OFFSET



#undef yyFlexLexer
#include <cstdint>
#include <cstdio>
#include <boost/algorithm/string/trim.hpp>
#include "../Shared/sqldefs.h"
#include "parser.h"

#define yylval (dynamic_cast<SQLLexer*>(this)->yylval)
#define parsed_str_tokens_ (dynamic_cast<SQLLexer*>(this)->parsed_str_tokens_)

using namespace std;

	/* macro to save the text and return a token */
#define TOK(name) { return SQLParser::name; }




#define INITIAL 0
#define STATE_CREATE 1
#define STATE_CREATE_AS 2
#define STATE_INSERT 3
#define STATE_INSERT_INTO 4

//#ifndef YY_NO_UNISTD_H
/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
//#include <unistd.h>
/* %endif */
//#endif

#ifndef YY_EXTRA_TYPE
#define YY_EXTRA_TYPE void *
#endif

/* %if-c-only Reentrant structure and macros (non-C++). */
/* %if-reentrant */
/* %if-c-only */
/* %endif */
/* %if-reentrant */
/* %endif */
/* %endif End reentrant structures and macros. */
/* %if-bison-bridge */
/* %endif */
/* %not-for-header */
/* %ok-for-header */

/* %endif */

#ifndef yytext_ptr
static void yy_flex_strncpy ( char *, const char *, int );
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen ( const char * );
#endif

#ifndef YY_NO_INPUT
/* %if-c-only Standard (non-C++) definition */
/* %not-for-header */
/* %ok-for-header */

/* %endif */
#endif

/* %if-c-only */
/* %endif */

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k */
#define YY_READ_BUF_SIZE 16384
#else
#define YY_READ_BUF_SIZE 8192
#endif /* __ia64__ */
#endif

/* Copy whatever the last rule matched to the standard output. */
#ifndef ECHO
/* %if-c-only Standard (non-C++) definition */
/* %endif */
/* %if-c++-only C++ definition */
#define ECHO LexerOutput( yytext, yyleng )
/* %endif */
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
/* %% [5.0] fread()/read() definition of YY_INPUT goes here unless we're doing C++ \ */\
\
/* %if-c++-only C++ definition \ */\
	if ( (int)(result = LexerInput( (char *) buf, max_size )) < 0 ) \
		YY_FATAL_ERROR( "input in flex scanner failed" );
/* %endif */

#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
/* %if-c-only */
/* %endif */
/* %if-c++-only */
#define YY_FATAL_ERROR(msg) LexerError( msg )
/* %endif */
#endif

/* %if-tables-serialization structures and prototypes */
/* %not-for-header */
/* %ok-for-header */

/* %not-for-header */
/* %tables-yydmap generated elements */
/* %endif */
/* end tables serialization structures and prototypes */

/* %ok-for-header */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1
/* %if-c-only Standard (non-C++) definition */
/* %endif */
/* %if-c++-only C++ definition */
#define YY_DECL int yyFlexLexer::yylex()
/* %endif */
#endif /* !YY_DECL */

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK /*LINTED*/break;
#endif

/* %% [6.0] YY_RULE_SETUP definition goes here */
#define YY_RULE_SETUP \
	YY_USER_ACTION

/* %not-for-header */
/** The main scanner function which does all the work.
 */
YY_DECL
{
	yy_state_type yy_current_state;
	char *yy_cp, *yy_bp;
	int yy_act;
    
	if ( !(yy_init) )
		{
		(yy_init) = 1;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

        /* Create the reject buffer large enough to save one state per allowed character. */
        if ( ! (yy_state_buf) )
            (yy_state_buf) = (yy_state_type *)yyalloc(YY_STATE_BUF_SIZE  );
            if ( ! (yy_state_buf) )
                YY_FATAL_ERROR( "out of dynamic memory in yylex()" );

		if ( ! (yy_start) )
			(yy_start) = 1;	/* first start state */

		if ( ! yyin )
/* %if-c-only */
/* %endif */
/* %if-c++-only */
			yyin.rdbuf(std::cin.rdbuf());
/* %endif */

		if ( ! yyout )
/* %if-c-only */
/* %endif */
/* %if-c++-only */
			yyout.rdbuf(std::cout.rdbuf());
/* %endif */

		if ( ! YY_CURRENT_BUFFER ) {
			yyensure_buffer_stack ();
			YY_CURRENT_BUFFER_LVALUE =
				yy_create_buffer( yyin, YY_BUF_SIZE );
		}

		yy_load_buffer_state(  );
		}

	{
/* %% [7.0] user's declarations go here */




	/* literal keyword tokens */



	while ( /*CONSTCOND*/1 )		/* loops until end-of-file is reached */
		{
/* %% [8.0] yymore()-related code goes here */
		(yy_more_len) = 0;
		if ( (yy_more_flag) )
			{
			(yy_more_len) = (int) ((yy_c_buf_p) - (yytext_ptr));
			(yy_more_flag) = 0;
			}
		yy_cp = (yy_c_buf_p);

		/* Support of yytext. */
		*yy_cp = (yy_hold_char);

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

/* %% [9.0] code to set up and find next match goes here */
		yy_current_state = (yy_start);

		(yy_state_ptr) = (yy_state_buf);
		*(yy_state_ptr)++ = yy_current_state;

yy_match:
		do
			{
			YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)] ;
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 1402 )
					yy_c = yy_meta[yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
			*(yy_state_ptr)++ = yy_current_state;
			++yy_cp;
			}
		while ( yy_base[yy_current_state] != 12505 );

yy_find_action:
/* %% [10.0] code to find the action number goes here */
		yy_current_state = *--(yy_state_ptr);
		(yy_lp) = yy_accept[yy_current_state];

find_rule: /* we branch to this label when backing up */

		for ( ; ; ) /* until we find what rule we matched */
			{
			if ( (yy_lp) && (yy_lp) < yy_accept[yy_current_state + 1] )
				{
				yy_act = yy_acclist[(yy_lp)];
					{
					(yy_full_match) = yy_cp;
					break;
					}
				}
			--yy_cp;
			yy_current_state = *--(yy_state_ptr);
			(yy_lp) = yy_accept[yy_current_state];
			}

		YY_DO_BEFORE_ACTION;

/* %% [11.0] code for yylineno update goes here */

		if ( yy_act != YY_END_OF_BUFFER && yy_rule_can_match_eol[yy_act] )
			{
			int yyl;
			for ( yyl = (yy_more_len); yyl < yyleng; ++yyl )
				if ( yytext[yyl] == '\n' )
					
    yylineno++;
;
			}

do_action:	/* This label is used only to access EOF actions. */

/* %% [12.0] debug code goes here */
		if ( yy_flex_debug )
			{
			if ( yy_act == 0 )
				std::cerr << "--scanner backing up\n";
			else if ( yy_act < 167 )
				std::cerr << "--accepting rule at line " << yy_rule_linenum[yy_act] <<
				         "(\"" << yytext << "\")\n";
			else if ( yy_act == 167 )
				std::cerr << "--accepting default rule (\"" << yytext << "\")\n";
			else if ( yy_act == 168 )
				std::cerr << "--(end of buffer or a NUL)\n";
			else
				std::cerr << "--EOF (start condition " << YY_START << ")\n";
			}

		switch ( yy_act )
	{ /* beginning of action switch */
/* %% [13.0] actions go here */
case 1:
YY_RULE_SETUP

TOK(ACCESS)
	YY_BREAK
case 2:
YY_RULE_SETUP

{ yylval.qualval = kALL; TOK(ALL) }
	YY_BREAK
case 3:
YY_RULE_SETUP

TOK(ALTER)
	YY_BREAK
case 4:
YY_RULE_SETUP

TOK(ADD)
	YY_BREAK
case 5:
YY_RULE_SETUP

TOK(AND)
	YY_BREAK
case 6:
YY_RULE_SETUP

{ yylval.qualval = kANY; TOK(ANY) }
	YY_BREAK
case 7:
YY_RULE_SETUP

TOK(ARCHIVE)
	YY_BREAK
case 8:
YY_RULE_SETUP

TOK(ARRAY)
	YY_BREAK
case 9:
YY_RULE_SETUP

{ BEGIN STATE_CREATE_AS; return SQLParser::AS; }
	YY_BREAK
case 10:
YY_RULE_SETUP

TOK(AS)
	YY_BREAK
case 11:
YY_RULE_SETUP

TOK(ASC)
	YY_BREAK
case 12:
YY_RULE_SETUP

TOK(AUTHORIZATION)
	YY_BREAK
case 13:
YY_RULE_SETUP

TOK(BETWEEN)
	YY_BREAK
case 14:
YY_RULE_SETUP

TOK(BIGINT)
	YY_BREAK
case 15:
YY_RULE_SETUP

TOK(BOOLEAN)
	YY_BREAK
case 16:
YY_RULE_SETUP

TOK(BY)
	YY_BREAK
case 17:
YY_RULE_SETUP

TOK(CASE)
	YY_BREAK
case 18:
YY_RULE_SETUP

TOK(CAST)
	YY_BREAK
case 19:
YY_RULE_SETUP

TOK(CHAR_LENGTH)
	YY_BREAK
case 20:
YY_RULE_SETUP

TOK(CHARACTER)
	YY_BREAK
case 21:
YY_RULE_SETUP

TOK(CHECK)
	YY_BREAK
case 22:
YY_RULE_SETUP

TOK(CLOSE)
	YY_BREAK
case 23:
YY_RULE_SETUP

TOK(COLUMN)
	YY_BREAK
case 24:
YY_RULE_SETUP

TOK(COMMIT)
	YY_BREAK
case 25:
YY_RULE_SETUP

TOK(CONTINUE)
	YY_BREAK
case 26:
YY_RULE_SETUP

TOK(COPY);
	YY_BREAK
case 27:
YY_RULE_SETUP

{ BEGIN STATE_CREATE; return SQLParser::CREATE; }
	YY_BREAK
case 28:
YY_RULE_SETUP

TOK(CURRENT)
	YY_BREAK
case 29:
YY_RULE_SETUP

TOK(CURSOR)
	YY_BREAK
case 30:
YY_RULE_SETUP

TOK(DASHBOARD)
	YY_BREAK
case 31:
YY_RULE_SETUP

TOK(DATABASE)
	YY_BREAK
case 32:
YY_RULE_SETUP

TOK(DATAFRAME)
	YY_BREAK
case 33:
YY_RULE_SETUP

TOK(DATE)
	YY_BREAK
case 34:
YY_RULE_SETUP

TOK(DATETIME)
	YY_BREAK
case 35:
YY_RULE_SETUP

TOK(DATE_TRUNC)
	YY_BREAK
case 36:
YY_RULE_SETUP

TOK(DECIMAL)
	YY_BREAK
case 37:
YY_RULE_SETUP

TOK(DECLARE)
	YY_BREAK
case 38:
YY_RULE_SETUP

TOK(DEFAULT)
	YY_BREAK
case 39:
YY_RULE_SETUP

TOK(DELETE)
	YY_BREAK
case 40:
YY_RULE_SETUP

TOK(DESC)
	YY_BREAK
case 41:
YY_RULE_SETUP

TOK(DICTIONARY)
	YY_BREAK
case 42:
YY_RULE_SETUP

TOK(DISTINCT)
	YY_BREAK
case 43:
YY_RULE_SETUP

TOK(DOUBLE)
	YY_BREAK
case 44:
YY_RULE_SETUP

TOK(DROP)
	YY_BREAK
case 45:
YY_RULE_SETUP

TOK(DUMP)
	YY_BREAK
case 46:
YY_RULE_SETUP

TOK(EDIT)
	YY_BREAK
case 47:
YY_RULE_SETUP

TOK(EDITOR)
	YY_BREAK
case 48:
YY_RULE_SETUP

TOK(ELSE)
	YY_BREAK
case 49:
YY_RULE_SETUP

TOK(END)
	YY_BREAK
case 50:
YY_RULE_SETUP

TOK(EXISTS)
	YY_BREAK
case 51:
YY_RULE_SETUP

TOK(EXTRACT)
	YY_BREAK
case 52:
YY_RULE_SETUP

TOK(FETCH)
	YY_BREAK
case 53:
YY_RULE_SETUP

TOK(FIRST)
	YY_BREAK
case 54:
YY_RULE_SETUP

TOK(FLOAT)
	YY_BREAK
case 55:
YY_RULE_SETUP

TOK(FOR)
	YY_BREAK
case 56:
YY_RULE_SETUP

TOK(FOREIGN)
	YY_BREAK
case 57:
YY_RULE_SETUP

TOK(FOUND)
	YY_BREAK
case 58:
YY_RULE_SETUP

TOK(FROM)
	YY_BREAK
case 59:
YY_RULE_SETUP

TOK(GEOGRAPHY)
	YY_BREAK
case 60:
YY_RULE_SETUP

TOK(GEOMETRY)
	YY_BREAK
case 61:
YY_RULE_SETUP

TOK(GRANT)
	YY_BREAK
case 62:
YY_RULE_SETUP

TOK(GROUP)
	YY_BREAK
case 63:
YY_RULE_SETUP

TOK(HAVING)
	YY_BREAK
case 64:
YY_RULE_SETUP

TOK(IF)
	YY_BREAK
case 65:
YY_RULE_SETUP

TOK(ILIKE)
	YY_BREAK
case 66:
YY_RULE_SETUP

TOK(IN)
	YY_BREAK
case 67:
YY_RULE_SETUP

{ BEGIN STATE_INSERT; return SQLParser::INSERT; }
	YY_BREAK
case 68:
YY_RULE_SETUP

TOK(INTEGER)
	YY_BREAK
case 69:
YY_RULE_SETUP

{ BEGIN STATE_INSERT_INTO; return SQLParser::INTO; }
	YY_BREAK
case 70:
YY_RULE_SETUP

TOK(INTO)
	YY_BREAK
case 71:
YY_RULE_SETUP

TOK(IS)
	YY_BREAK
case 72:
YY_RULE_SETUP

TOK(LANGUAGE)
	YY_BREAK
case 73:
YY_RULE_SETUP

TOK(LAST)
	YY_BREAK
case 74:
YY_RULE_SETUP

TOK(LENGTH)
	YY_BREAK
case 75:
YY_RULE_SETUP

TOK(LIKE)
	YY_BREAK
case 76:
YY_RULE_SETUP

TOK(LIMIT)
	YY_BREAK
case 77:
YY_RULE_SETUP

TOK(LINESTRING)
	YY_BREAK
case 78:
YY_RULE_SETUP

TOK(MOD)
	YY_BREAK
case 79:
YY_RULE_SETUP

TOK(MULTIPOLYGON)
	YY_BREAK
case 80:
YY_RULE_SETUP

TOK(NOT)
	YY_BREAK
case 81:
YY_RULE_SETUP

TOK(NOW)
	YY_BREAK
case 82:
YY_RULE_SETUP

TOK(NULLX)
	YY_BREAK
case 83:
YY_RULE_SETUP

TOK(NUMERIC)
	YY_BREAK
case 84:
YY_RULE_SETUP

TOK(OF)
	YY_BREAK
case 85:
YY_RULE_SETUP

TOK(OFFSET)
	YY_BREAK
case 86:
YY_RULE_SETUP

TOK(ON)
	YY_BREAK
case 87:
YY_RULE_SETUP

TOK(OPEN)
	YY_BREAK
case 88:
YY_RULE_SETUP

TOK(OPTION)
	YY_BREAK
case 89:
YY_RULE_SETUP

TOK(OPTIMIZE)
	YY_BREAK
case 90:
YY_RULE_SETUP

TOK(OR)
	YY_BREAK
case 91:
YY_RULE_SETUP

TOK(ORDER)
	YY_BREAK
case 92:
YY_RULE_SETUP

TOK(POINT)
	YY_BREAK
case 93:
YY_RULE_SETUP

TOK(POLYGON)
	YY_BREAK
case 94:
YY_RULE_SETUP

TOK(PRECISION)
	YY_BREAK
case 95:
YY_RULE_SETUP

TOK(PRIMARY)
	YY_BREAK
case 96:
YY_RULE_SETUP

TOK(PRIVILEGES)
	YY_BREAK
case 97:
YY_RULE_SETUP

TOK(PROCEDURE)
	YY_BREAK
case 98:
YY_RULE_SETUP

TOK(PUBLIC)
	YY_BREAK
case 99:
YY_RULE_SETUP

TOK(REAL)
	YY_BREAK
case 100:
YY_RULE_SETUP

TOK(REFERENCES)
	YY_BREAK
case 101:
YY_RULE_SETUP

TOK(RENAME)
	YY_BREAK
case 102:
YY_RULE_SETUP

TOK(RESTORE)
	YY_BREAK
case 103:
YY_RULE_SETUP

TOK(REVOKE)
	YY_BREAK
case 104:
YY_RULE_SETUP

TOK(ROLE)
	YY_BREAK
case 105:
YY_RULE_SETUP

TOK(ROLLBACK)
	YY_BREAK
case 106:
YY_RULE_SETUP

TOK(SCHEMA)
	YY_BREAK
case 107:
YY_RULE_SETUP

TOK(SELECT)
	YY_BREAK
case 108:
YY_RULE_SETUP

TOK(SERVER)
	YY_BREAK
case 109:
YY_RULE_SETUP

TOK(SET)
	YY_BREAK
case 110:
YY_RULE_SETUP

TOK(SHARD)
	YY_BREAK
case 111:
YY_RULE_SETUP

TOK(SHARED)
	YY_BREAK
case 112:
YY_RULE_SETUP

TOK(SHOW)
	YY_BREAK
case 113:
YY_RULE_SETUP

TOK(SMALLINT)
	YY_BREAK
case 114:
YY_RULE_SETUP

{ yylval.qualval = kANY; TOK(SOME) } /* SOME = ANY */
	YY_BREAK
case 115:
YY_RULE_SETUP

TOK(SQL)
	YY_BREAK
case 116:
YY_RULE_SETUP

TOK(TABLE)
	YY_BREAK
case 117:
YY_RULE_SETUP

TOK(TEMPORARY)
	YY_BREAK
case 118:
YY_RULE_SETUP

TOK(TEXT)
	YY_BREAK
case 119:
YY_RULE_SETUP

TOK(THEN)
	YY_BREAK
case 120:
YY_RULE_SETUP

TOK(TIME)
	YY_BREAK
case 121:
YY_RULE_SETUP

TOK(TIMESTAMP)
	YY_BREAK
case 122:
YY_RULE_SETUP

TOK(TINYINT)
	YY_BREAK
case 123:
YY_RULE_SETUP

TOK(TO)
	YY_BREAK
case 124:
YY_RULE_SETUP

TOK(TRUNCATE)
	YY_BREAK
case 125:
YY_RULE_SETUP

TOK(UNION)
	YY_BREAK
case 126:
YY_RULE_SETUP

TOK(UNIQUE)
	YY_BREAK
case 127:
YY_RULE_SETUP

TOK(UPDATE)
	YY_BREAK
case 128:
YY_RULE_SETUP

TOK(USER)
	YY_BREAK
case 129:
YY_RULE_SETUP

{ BEGIN 0; return SQLParser::VALUES; }
	YY_BREAK
case 130:
YY_RULE_SETUP

TOK(VALIDATE)
	YY_BREAK
case 131:
YY_RULE_SETUP

TOK(CHARACTER)	/* XXX don't distinguish char and varchar for now */
	YY_BREAK
case 132:
YY_RULE_SETUP

TOK(VIEW)
	YY_BREAK
case 133:
YY_RULE_SETUP

TOK(WHEN)
	YY_BREAK
case 134:
YY_RULE_SETUP

TOK(WHERE)
	YY_BREAK
case 135:
YY_RULE_SETUP

TOK(WITH)
	YY_BREAK
case 136:
YY_RULE_SETUP

TOK(WORK)
	YY_BREAK
/* punctuation */
case 137:
YY_RULE_SETUP

{ yylval.opval = kEQ; TOK(EQUAL); }
	YY_BREAK
case 138:
YY_RULE_SETUP

{ yylval.opval = kNE; TOK(COMPARISON); }
	YY_BREAK
case 139:
YY_RULE_SETUP

{ yylval.opval = kLT; TOK(COMPARISON); }
	YY_BREAK
case 140:
YY_RULE_SETUP

{ yylval.opval = kGT; TOK(COMPARISON); }
	YY_BREAK
case 141:
YY_RULE_SETUP

{ yylval.opval = kLE; TOK(COMPARISON); }
	YY_BREAK
case 142:
YY_RULE_SETUP

{ yylval.opval = kGE; TOK(COMPARISON); }
	YY_BREAK
case 143:
YY_RULE_SETUP

{ return yytext[0]; }
	YY_BREAK
case 144:
YY_RULE_SETUP

{ BEGIN 0; return yytext[0]; }
	YY_BREAK
/* validate type */
case 145:
YY_RULE_SETUP

{ yylval.stringval = TrackedPtr<std::string>::make(parsed_str_tokens_, yytext); TOK(CLUSTER) }
	YY_BREAK
/* names */
case 146:
YY_RULE_SETUP

{
  yylval.stringval = TrackedPtr<std::string>::make(parsed_str_tokens_, yytext);
  TOK(NAME)
}
	YY_BREAK
/* names with dashes */
case 147:
YY_RULE_SETUP

{ yylval.stringval = TrackedPtr<std::string>::make(parsed_str_tokens_, yytext); TOK(DASHEDNAME) }
	YY_BREAK
/* emails */
case 148:
YY_RULE_SETUP

{ yylval.stringval = TrackedPtr<std::string>::make(parsed_str_tokens_, yytext); TOK(EMAIL) }
	YY_BREAK
/* parameters */
case 149:
YY_RULE_SETUP

TOK(PARAMETER)
	YY_BREAK
/* numbers */
case 150:
YY_RULE_SETUP

{ yylval.intval = atoll(yytext); TOK(INTNUM) }
	YY_BREAK
case 151:

case 152:
YY_RULE_SETUP

{
		yylval.stringval = TrackedPtr<std::string>::make(parsed_str_tokens_, yytext);
    // numeric and decimal precisions cannot exceed 19
    if (yylval.stringval->get()->length() < 20) {
            return SQLParser::FIXEDNUM;
    }
    delete yylval.stringval->release();
    // otherwise return as double
    yylval.doubleval = std::stod(yytext);
    return SQLParser::DOUBLE;
	}
	YY_BREAK
/* TODO: handle FLOAT v.s. DOUBLE */
case 153:

case 154:

case 155:
YY_RULE_SETUP

{ yylval.doubleval = atof(yytext); TOK(DOUBLE) }
	YY_BREAK
/* strings */
case 156:
/* rule 156 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
YY_LINENO_REWIND_TO(yy_cp - 3);
(yy_c_buf_p) = yy_cp -= 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP

{
    int len = yyleng;
    yylval.stringval = TrackedPtr<std::string>::make(parsed_str_tokens_, yytext, len);
    boost::trim(*yylval.stringval->get());
    
    BEGIN 0;
    return SQLParser::SELECTSTRING;
  }
	YY_BREAK
case 157:
/* rule 157 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
YY_LINENO_REWIND_TO(yy_cp - 1);
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP

{
    int len = yyleng;
    std::string tmp(yytext, len);
    boost::regex keyword{"\\swith", boost::regex::icase};
    boost::smatch what;
    if (boost::regex_search(tmp, what, keyword)) {
      REJECT;
    } else {
      yylval.stringval = TrackedPtr<std::string>::make(parsed_str_tokens_, yytext, len);
      boost::trim(*yylval.stringval->get());
      BEGIN 0;
      return SQLParser::SELECTSTRING;
    }
  }
	YY_BREAK
case 158:
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP

{
    int len = yyleng;
    std::string tmp(yytext, len);
    boost::regex keyword{"\\svalues", boost::regex::icase};
    boost::smatch what;
    if (boost::regex_search(tmp, what, keyword)) {
      REJECT;
    } else {
      yylval.stringval = TrackedPtr<std::string>::make(parsed_str_tokens_, yytext, len);
      boost::trim(*yylval.stringval->get());
      BEGIN 0;
      return SQLParser::SELECTSTRING;
    }
  }
	YY_BREAK
case 159:
YY_RULE_SETUP

{
		int len = yyleng - 6;
		if (len > 0) {
			yylval.stringval = TrackedPtr<std::string>::make(parsed_str_tokens_, yytext + 3, len);
			boost::trim(*yylval.stringval->get());
		} else {
			yylval.stringval = TrackedPtr<std::string>::make(parsed_str_tokens_, "");
		}
		return SQLParser::FWDSTR;
	}
	YY_BREAK
case 160:
YY_RULE_SETUP

{
    int c = yyFlexLexer::yyinput();

    unput(c);	/* just peeking */
    if(c != '\'') {
      /* remove quotes */
      std::vector<char> escape_removed(yyleng - 1);
      char *p = yytext + 1;
      int j = 0;
      int len = yyleng - 2;
      for (int i = 0; i < len; i++) {
        if (p[i] == '\\') {
          if (p[i+1] == 't') {
            escape_removed[j++] = '\t';
            i++;
            continue;
          } else if (p[i+1] == 'n') {
            escape_removed[j++] = '\n';
            i++;
            continue;
          } else if (p[i+1] == '\\') {
            escape_removed[j++] = '\\';
            i++;
            continue;
          } else if (p[i+1] == 'x' && i + 3 < len) {
            char s[3];
            s[0] = p[i+2];
            s[1] = p[i+3];
            s[2] = '\0';
            int c;
            sscanf(s, "%x", &c);
            escape_removed[j++] = (char)c;
            i += 3;
            continue;
          }
        }
        if (p[i] != '\'' || p[i + 1] != '\'')
          escape_removed[j++] = p[i];
      }
      escape_removed[j] = '\0';

      yylval.stringval = TrackedPtr<std::string>::make(parsed_str_tokens_, std::string{escape_removed.data()});
      return SQLParser::STRING;
    }
    else
      yymore();
  }
	YY_BREAK
case 161:
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP

{	throw std::runtime_error("Unterminated string"); }
	YY_BREAK
case 162:
YY_RULE_SETUP

{
    int c = yyFlexLexer::yyinput();

    unput(c);	/* just peeking */
    if(c != '"') {
      /* remove quotes */
      std::vector<char> escape_removed(yyleng - 1);
      char *p = yytext + 1;
      int j = 0;
      int len = yyleng - 2;
      for (int i = 0; i < len; i++) {
        if (p[i] == '\\') {
          if (p[i+1] == 't') {
            escape_removed[j++] = '\t';
            i++;
            continue;
          } else if (p[i+1] == 'n') {
            escape_removed[j++] = '\n';
            i++;
            continue;
          } else if (p[i+1] == '\\') {
            escape_removed[j++] = '\\';
            i++;
            continue;
          } else if (p[i+1] == '"') {
            escape_removed[j++] = '"';
            i++;
            continue;
          } else if (p[i+1] == 'x' && i + 3 < len) {
            char s[3];
            s[0] = p[i+2];
            s[1] = p[i+3];
            s[2] = '\0';
            int c;
            sscanf(s, "%x", &c);
            escape_removed[j++] = (char)c;
            i += 3;
            continue;
          }
        }
        escape_removed[j++] = p[i];
      }
      escape_removed[j] = '\0';

      yylval.stringval = TrackedPtr<std::string>::make(parsed_str_tokens_, std::string{escape_removed.data()});
      return SQLParser::QUOTED_IDENTIFIER;
    }
    else
      yymore();
  }
	YY_BREAK
case 163:
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP

{	throw std::runtime_error("Unterminated string"); }
	YY_BREAK
/*
\n		{ lineno++; }
	*/
case 164:
/* rule 164 can match eol */
YY_RULE_SETUP

;	/* white space */
	YY_BREAK
case 165:
YY_RULE_SETUP

;	/* comment */
	YY_BREAK
case 166:
YY_RULE_SETUP

{ return yytext[0]; } /* random non-SQL text.  cause error in parser */
	YY_BREAK
case YY_STATE_EOF(INITIAL):
case YY_STATE_EOF(STATE_CREATE):
case YY_STATE_EOF(STATE_CREATE_AS):
case YY_STATE_EOF(STATE_INSERT):
case YY_STATE_EOF(STATE_INSERT_INTO):

{ yyterminate(); }
	YY_BREAK
case 167:
YY_RULE_SETUP

ECHO;
	YY_BREAK


	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = (yy_hold_char);
		YY_RESTORE_YY_MORE_OFFSET

		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
/* %if-c-only */
/* %endif */
/* %if-c++-only */
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin.rdbuf();
/* %endif */
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state(  );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = (yytext_ptr) + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++(yy_c_buf_p);
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
/* %% [14.0] code to do back-up for compressed tables and set up yy_cp goes here */
				yy_cp = (yy_c_buf_p);
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer(  ) )
			{
			case EOB_ACT_END_OF_FILE:
				{
				(yy_did_buffer_switch_on_eof) = 0;

				if ( yywrap(  ) )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				(yy_c_buf_p) =
					(yytext_ptr) + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				(yy_c_buf_p) =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of user's declarations */
} /* end of yylex */
/* %ok-for-header */

/* %if-c++-only */
/* %not-for-header */
/* The contents of this function are C++ specific, so the () macro is not used.
 * This constructor simply maintains backward compatibility.
 * DEPRECATED
 */
yyFlexLexer::yyFlexLexer( std::istream* arg_yyin, std::ostream* arg_yyout ):
	yyin(arg_yyin ? arg_yyin->rdbuf() : std::cin.rdbuf()),
	yyout(arg_yyout ? arg_yyout->rdbuf() : std::cout.rdbuf())
{
	ctor_common();
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
yyFlexLexer::yyFlexLexer( std::istream& arg_yyin, std::ostream& arg_yyout ):
	yyin(arg_yyin.rdbuf()),
	yyout(arg_yyout.rdbuf())
{
	ctor_common();
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
void yyFlexLexer::ctor_common()
{
	yy_c_buf_p = 0;
	yy_init = 0;
	yy_start = 0;
	yy_flex_debug = 0;
	yylineno = 1;	// this will only get updated if %option yylineno

	yy_did_buffer_switch_on_eof = 0;

	yy_looking_for_trail_begin = 0;
	yy_more_flag = 0;
	yy_more_len = 0;
	yy_more_offset = yy_prev_more_offset = 0;

	yy_start_stack_ptr = yy_start_stack_depth = 0;
	yy_start_stack = NULL;

	yy_buffer_stack = NULL;
	yy_buffer_stack_top = 0;
	yy_buffer_stack_max = 0;

	yy_state_buf = new yy_state_type[YY_STATE_BUF_SIZE];

}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
yyFlexLexer::~yyFlexLexer()
{
	delete [] yy_state_buf;
	yyfree( yy_start_stack  );
	yy_delete_buffer( YY_CURRENT_BUFFER );
	yyfree( yy_buffer_stack  );
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
void yyFlexLexer::switch_streams( std::istream& new_in, std::ostream& new_out )
{
	// was if( new_in )
	yy_delete_buffer( YY_CURRENT_BUFFER );
	yy_switch_to_buffer( yy_create_buffer( new_in, YY_BUF_SIZE  ) );

	// was if( new_out )
	yyout.rdbuf(new_out.rdbuf());
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
void yyFlexLexer::switch_streams( std::istream* new_in, std::ostream* new_out )
{
	if( ! new_in ) {
		new_in = &yyin;
	}

	if ( ! new_out ) {
		new_out = &yyout;
	}

	switch_streams(*new_in, *new_out);
}

#ifdef YY_INTERACTIVE
int yyFlexLexer::LexerInput( char* buf, int /* max_size */ )
#else
int yyFlexLexer::LexerInput( char* buf, int max_size )
#endif
{
	if ( yyin.eof() || yyin.fail() )
		return 0;

#ifdef YY_INTERACTIVE
	yyin.get( buf[0] );

	if ( yyin.eof() )
		return 0;

	if ( yyin.bad() )
		return -1;

	return 1;

#else
	(void) yyin.read( buf, max_size );

	if ( yyin.bad() )
		return -1;
	else
		return yyin.gcount();
#endif
}

void yyFlexLexer::LexerOutput( const char* buf, int size )
{
	(void) yyout.write( buf, size );
}
/* %ok-for-header */

/* %endif */

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
int yyFlexLexer::yy_get_next_buffer()
/* %endif */
{
    	char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	char *source = (yytext_ptr);
	int number_to_move, i;
	int ret_val;

	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr) - 1);

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;

	else
		{
			int num_to_read =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			YY_FATAL_ERROR(
"input buffer overflow, can't enlarge buffer because scanner uses REJECT" );

			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			(yy_n_chars), num_to_read );

		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	if ( (yy_n_chars) == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin  );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	if (((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
		/* Extend the array by 50%, plus the number we really need. */
		int new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc(
			(void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf, (yy_size_t) new_size  );
		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
		/* "- 2" to take care of EOB's */
		YY_CURRENT_BUFFER_LVALUE->yy_buf_size = (int) (new_size - 2);
	}

	(yy_n_chars) += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;

	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

/* %if-c-only */
/* %not-for-header */
/* %endif */
/* %if-c++-only */
    yy_state_type yyFlexLexer::yy_get_previous_state()
/* %endif */
{
	yy_state_type yy_current_state;
	char *yy_cp;
    
/* %% [15.0] code to get the start state into yy_current_state goes here */
	yy_current_state = (yy_start);

	(yy_state_ptr) = (yy_state_buf);
	*(yy_state_ptr)++ = yy_current_state;

	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
		{
/* %% [16.0] code to find the next state goes here */
		YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 1402 )
				yy_c = yy_meta[yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
		*(yy_state_ptr)++ = yy_current_state;
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    yy_state_type yyFlexLexer::yy_try_NUL_trans( yy_state_type yy_current_state )
/* %endif */
{
	int yy_is_jam;
    /* %% [17.0] code to find the next state, and perhaps do backing up, goes here */

	YY_CHAR yy_c = 1;
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 1402 )
			yy_c = yy_meta[yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
	yy_is_jam = (yy_current_state == 1401);
	if ( ! yy_is_jam )
		*(yy_state_ptr)++ = yy_current_state;

		return yy_is_jam ? 0 : yy_current_state;
}

#ifndef YY_NO_UNPUT
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yyunput( int c, char* yy_bp)
/* %endif */
{
	char *yy_cp;
    
    yy_cp = (yy_c_buf_p);

	/* undo effects of setting up yytext */
	*yy_cp = (yy_hold_char);

	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		int number_to_move = (yy_n_chars) + 2;
		char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
		char *source =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];

		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
			(yy_n_chars) = (int) YY_CURRENT_BUFFER_LVALUE->yy_buf_size;

		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;

/* %% [18.0] update yylineno here */

    if ( c == '\n' ){
        --yylineno;
    }

	(yytext_ptr) = yy_bp;
	(yy_hold_char) = *yy_cp;
	(yy_c_buf_p) = yy_cp;
}
/* %if-c-only */
/* %endif */
#endif

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    int yyFlexLexer::yyinput()
/* %endif */
{
	int c;
    
	*(yy_c_buf_p) = (yy_hold_char);

	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			/* This was really a NUL. */
			*(yy_c_buf_p) = '\0';

		else
			{ /* need more input */
			int offset = (int) ((yy_c_buf_p) - (yytext_ptr));
			++(yy_c_buf_p);

			switch ( yy_get_next_buffer(  ) )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin );

					/*FALLTHROUGH*/

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap(  ) )
						return 0;

					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					(yy_c_buf_p) = (yytext_ptr) + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
	*(yy_c_buf_p) = '\0';	/* preserve yytext */
	(yy_hold_char) = *++(yy_c_buf_p);

/* %% [19.0] update BOL and yylineno */
	if ( c == '\n' )
		
    yylineno++;
;

	return c;
}
/* %if-c-only */
/* %endif */

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * 
 * @note This function does not reset the start condition to @c INITIAL .
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yyrestart( std::istream& input_file )
/* %endif */
{
    
	if ( ! YY_CURRENT_BUFFER ){
        yyensure_buffer_stack ();
		YY_CURRENT_BUFFER_LVALUE =
            yy_create_buffer( yyin, YY_BUF_SIZE );
	}

	yy_init_buffer( YY_CURRENT_BUFFER, input_file );
	yy_load_buffer_state(  );
}

/* %if-c++-only */
/** Delegate to the new version that takes an istream reference.
 * @param input_file A readable stream.
 * 
 * @note This function does not reset the start condition to @c INITIAL .
 */
void yyFlexLexer::yyrestart( std::istream* input_file )
{
	if( ! input_file ) {
		input_file = &yyin;
	}
	yyrestart( *input_file );
}
/* %endif */

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * 
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
/* %endif */
{
    
	/* TODO. We should be able to replace this entire function body
	 * with
	 *		yypop_buffer_state();
	 *		yypush_buffer_state(new_buffer);
     */
	yyensure_buffer_stack ();
	if ( YY_CURRENT_BUFFER == new_buffer )
		return;

	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	yy_load_buffer_state(  );

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	(yy_did_buffer_switch_on_eof) = 1;
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_load_buffer_state()
/* %endif */
{
    	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
/* %if-c-only */
/* %endif */
/* %if-c++-only */
	yyin.rdbuf(YY_CURRENT_BUFFER_LVALUE->yy_input_file);
/* %endif */
	(yy_hold_char) = *(yy_c_buf_p);
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * 
 * @return the allocated buffer state.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    YY_BUFFER_STATE yyFlexLexer::yy_create_buffer( std::istream& file, int size )
/* %endif */
{
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) yyalloc( (yy_size_t) (b->yy_buf_size + 2)  );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file );

	return b;
}

/* %if-c++-only */
/** Delegate creation of buffers to the new version that takes an istream reference.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * 
 * @return the allocated buffer state.
 */
	YY_BUFFER_STATE yyFlexLexer::yy_create_buffer( std::istream* file, int size )
{
	return yy_create_buffer( *file, size );
}
/* %endif */

/** Destroy the buffer.
 * @param b a buffer created with yy_create_buffer()
 * 
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_delete_buffer( YY_BUFFER_STATE b )
/* %endif */
{
    
	if ( ! b )
		return;

	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		yyfree( (void *) b->yy_ch_buf  );

	yyfree( (void *) b  );
}

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a yyrestart() or at EOF.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_init_buffer( YY_BUFFER_STATE b, std::istream& file )
/* %endif */

{
	int oerrno = errno;
    
	yy_flush_buffer( b );

/* %if-c-only */
/* %endif */
/* %if-c++-only */
	b->yy_input_file = file.rdbuf();
/* %endif */
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then yy_init_buffer was _probably_
     * called from yyrestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != YY_CURRENT_BUFFER){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

/* %if-c-only */
/* %endif */
/* %if-c++-only */
	b->yy_is_interactive = 0;
/* %endif */
	errno = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * 
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_flush_buffer( YY_BUFFER_STATE b )
/* %endif */
{
    	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == YY_CURRENT_BUFFER )
		yy_load_buffer_state(  );
}

/* %if-c-or-c++ */
/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *  
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::yypush_buffer_state (YY_BUFFER_STATE new_buffer)
/* %endif */
{
    	if (new_buffer == NULL)
		return;

	yyensure_buffer_stack();

	/* This block is copied from yy_switch_to_buffer. */
	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (YY_CURRENT_BUFFER)
		(yy_buffer_stack_top)++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from yy_switch_to_buffer. */
	yy_load_buffer_state(  );
	(yy_did_buffer_switch_on_eof) = 1;
}
/* %endif */

/* %if-c-or-c++ */
/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *  
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::yypop_buffer_state (void)
/* %endif */
{
    	if (!YY_CURRENT_BUFFER)
		return;

	yy_delete_buffer(YY_CURRENT_BUFFER );
	YY_CURRENT_BUFFER_LVALUE = NULL;
	if ((yy_buffer_stack_top) > 0)
		--(yy_buffer_stack_top);

	if (YY_CURRENT_BUFFER) {
		yy_load_buffer_state(  );
		(yy_did_buffer_switch_on_eof) = 1;
	}
}
/* %endif */

/* %if-c-or-c++ */
/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::yyensure_buffer_stack(void)
/* %endif */
{
	yy_size_t num_to_alloc;
    
	if (!(yy_buffer_stack)) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
      num_to_alloc = 1; /* After all that talk, this was set to 1 anyways... */
		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));

		(yy_buffer_stack_max) = num_to_alloc;
		(yy_buffer_stack_top) = 0;
		return;
	}

	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){

		/* Increase the buffer to prepare for a possible push. */
		yy_size_t grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = (yy_buffer_stack_max) + grow_size;
		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
								((yy_buffer_stack),
								num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		/* zero only the new slots.*/
		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
		(yy_buffer_stack_max) = num_to_alloc;
	}
}
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_push_state( int _new_state )
/* %endif */
{
    	if ( (yy_start_stack_ptr) >= (yy_start_stack_depth) )
		{
		yy_size_t new_size;

		(yy_start_stack_depth) += YY_START_STACK_INCR;
		new_size = (yy_size_t) (yy_start_stack_depth) * sizeof( int );

		if ( ! (yy_start_stack) )
			(yy_start_stack) = (int *) yyalloc( new_size  );

		else
			(yy_start_stack) = (int *) yyrealloc(
					(void *) (yy_start_stack), new_size  );

		if ( ! (yy_start_stack) )
			YY_FATAL_ERROR( "out of memory expanding start-condition stack" );
		}

	(yy_start_stack)[(yy_start_stack_ptr)++] = YY_START;

	BEGIN(_new_state);
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_pop_state()
/* %endif */
{
    	if ( --(yy_start_stack_ptr) < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN((yy_start_stack)[(yy_start_stack_ptr)]);
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    int yyFlexLexer::yy_top_state()
/* %endif */
{
    	return (yy_start_stack)[(yy_start_stack_ptr) - 1];
}

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::LexerError( const char* msg )
{
    	std::cerr << msg << std::endl;
	exit( YY_EXIT_FAILURE );
}
/* %endif */

/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		yytext[yyleng] = (yy_hold_char); \
		(yy_c_buf_p) = yytext + yyless_macro_arg; \
		(yy_hold_char) = *(yy_c_buf_p); \
		*(yy_c_buf_p) = '\0'; \
		yyleng = yyless_macro_arg; \
		} \
	while ( 0 )

/* Accessor  methods (get/set functions) to struct members. */

/* %if-c-only */
/* %if-reentrant */
/* %endif */
/* %if-reentrant */
/* %endif */
/* %endif */

/* %if-reentrant */
/* %if-bison-bridge */
/* %endif */
/* %endif if-c-only */

/* %if-c-only */
/* %endif */

/* %if-c-only SNIP! this currently causes conflicts with the c++ scanner */
/* %if-reentrant */
/* %endif */
/* %endif */

/*
 * Internal utility routines.
 */

#ifndef yytext_ptr
static void yy_flex_strncpy (char* s1, const char * s2, int n )
{
		
	int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
}
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (const char * s )
{
	int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
}
#endif

void *yyalloc (yy_size_t  size )
{
			return malloc(size);
}

void *yyrealloc  (void * ptr, yy_size_t  size )
{
		
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return realloc(ptr, size);
}

void yyfree (void * ptr )
{
			free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
}

/* %if-tables-serialization definitions */
/* %define-yytables   The name for this specific scanner's tables. */
#define YYTABLES_NAME "yytables"
/* %endif */

/* %ok-for-header */




